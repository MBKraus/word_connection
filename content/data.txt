{
    "animals": {
        "topics": [
            {
                "topic": [
                    "Tiger",
                    "Tigers"
                ],
                "entries": [
                    "Stripe Pattern",
                    "Jungle Habitat",
                    "Solitary Nature",
                    "Predatory Skills"
                ]
            },
            {
                "topic": [
                    "Elephant",
                    "Elephants"
                ],
                "entries": [
                    "Trunk Utilization",
                    "Ivory Tusks",
                    "Matriarchal Groups",
                    "Savannahs"
                ]
            },
            {
                "topic": [
                    "Penguin",
                    "Penguins"
                ],
                "entries": [
                    "Antarctic Dweller",
                    "Flightless Bird",
                    "Tuxedo Appearance",
                    "Waddle Movement"
                ]
            },
            {
                "topic": [
                    "Kangaroo",
                    "Kangaroos"
                ],
                "entries": [
                    "Pouch Bearing",
                    "Hopping Locomotion",
                    "Outback Resident",
                    "Herbivorous"
                ]
            },
            {
                "topic": [
                    "Crocodile",
                    "Crocodiles"
                ],
                "entries": [
                    "Reptilian Predator",
                    "Snout Jaws",
                    "River Banks",
                    "Carnivorous"
                ]
            },
            {
                "topic": [
                    "Whale",
                    "Whales"
                ],
                "entries": [
                    "Blowhole Breathing",
                    "Ocean Giants",
                    "Baleen Feeding",
                    "Migrant"
                ]
            },
            {
                "topic": [
                    "Parrot",
                    "Parrots"
                ],
                "entries": [
                    "Colorful Plumage",
                    "Mimicking Ability",
                    "Curved Beak",
                    "Tree Dweller"
                ]
            },
            {
                "topic": [
                    "Giraffe",
                    "Giraffes"
                ],
                "entries": [
                    "Tall Neck",
                    "Savannah Browsing",
                    "Spotted Coat",
                    "Leaf Eater"
                ]
            },
            {
                "topic": [
                    "Polar Bear",
                    "Polar Bears"
                ],
                "entries": [
                    "Arctic Habitat",
                    "Ice Floes",
                    "Carnivore",
                    "White Fur"
                ]
            },
            {
                "topic": [
                    "Shark",
                    "Sharks"
                ],
                "entries": [
                    "Fin Structures",
                    "Cartilaginous Fish",
                    "Apex Predator",
                    "Ocean Hunter"
                ]
            },
            {
                "topic": [
                    "Monkey",
                    "Monkeys"
                ],
                "entries": [
                    "Primate",
                    "Tree Acrobat",
                    "Tool Use",
                    "Tribal Socials"
                ]
            },
            {
                "topic": [
                    "Wolf",
                    "Wolves"
                ],
                "entries": [
                    "Pack Leader",
                    "Howling Communication",
                    "Forest Hunter",
                    "Grey Fur"
                ]
            },
            {
                "topic": [
                    "Peacock",
                    "Peacocks"
                ],
                "entries": [
                    "Tail Display",
                    "Iridescent Colors",
                    "Courtship Dance",
                    "Ground Foragers"
                ]
            },
            {
                "topic": [
                    "Panda",
                    "Pandas"
                ],
                "entries": [
                    "Bamboo Diet",
                    "China Native",
                    "Endangered",
                    "Black-and-White Fur"
                ]
            },
            {
                "topic": [
                    "Eagle",
                    "Eagles"
                ],
                "entries": [
                    "Hooked Beak",
                    "Majestic Soar",
                    "Keen Vision",
                    "Talons"
                ]
            },
            {
                "topic": [
                    "Koala",
                    "Koalas"
                ],
                "entries": [
                    "Eucalyptus Feeder",
                    "Marsupial",
                    "Sleepy Nature",
                    "Australia"
                ]
            },
            {
                "topic": [
                    "Flamingo",
                    "Flamingos"
                ],
                "entries": [
                    "Pink Feathers",
                    "Long Legged",
                    "Shallow Waters",
                    "Mud Nests"
                ]
            },
            {
                "topic": [
                    "Rhinoceros",
                    "Rhino",
                    "Rhinoceroses"
                ],
                "entries": [
                    "Thick Skin",
                    "Horn",
                    "Grass Eater",
                    "Savannah Dweller"
                ]
            },
            {
                "topic": [
                    "Hawk",
                    "Hawks"
                ],
                "entries": [
                    "Sharp Beaks",
                    "High Flight",
                    "Rodent Hunter",
                    "Raptor"
                ]
            },
            {
                "topic": [
                    "Cheetah",
                    "Cheetahs"
                ],
                "entries": [
                    "Fastest Runner",
                    "Spotted Coat",
                    "Savannah Predator",
                    "Solitary"
                ]
            },
            {
                "topic": [
                    "Zebra",
                    "Zebras"
                ],
                "entries": [
                    "Black-and-White Stripes",
                    "Herd Behavior",
                    "Grasslands",
                    "Equid Family"
                ]
            },
            {
                "topic": [
                    "Chimpanzee",
                    "Chimpanzees"
                ],
                "entries": [
                    "Great Ape",
                    "Tool Crafting",
                    "Omnivorous Diet",
                    "Complex Socials"
                ]
            },
            {
                "topic": [
                    "Otter",
                    "Otters"
                ],
                "entries": [
                    "Aquatic Mammal",
                    "Playful Demeanor",
                    "Shellfish Diet",
                    "Stream Habitat"
                ]
            },
            {
                "topic": [
                    "Owl",
                    "Owls"
                ],
                "entries": [
                    "Nocturnal Hunter",
                    "Silent Flight",
                    "Rounded Eyes",
                    "Wisdom Symbol"
                ]
            },
            {
                "topic": [
                    "Fox",
                    "Foxes"
                ],
                "entries": [
                    "Bushy Tail",
                    "Burrow Dens",
                    "Adaptive Diet",
                    "Cunning"
                ]
            },
            {
                "topic": [
                    "Frog",
                    "Frogs"
                ],
                "entries": [
                    "Jumping Amphibian",
                    "Wetlands",
                    "Croaking Sound",
                    "Metamorphosis"
                ]
            },
            {
                "topic": [
                    "Bat",
                    "Bats"
                ],
                "entries": [
                    "Echolocation",
                    "Nocturnal Predator",
                    "Winged Mammal",
                    "Fruit Eaters"
                ]
            },
            {
                "topic": [
                    "Hyena",
                    "Hyenas"
                ],
                "entries": [
                    "Laughing Call",
                    "Scavenger",
                    "Spotted Fur",
                    "Clan Society"
                ]
            },
            {
                "topic": [
                    "Moose",
                    "Moose"
                ],
                "entries": [
                    "Antler Growth",
                    "Forest Habitat",
                    "Herbivorous",
                    "Solitary"
                ]
            },
            {
                "topic": [
                    "Bison",
                    "Bisons"
                ],
                "entries": [
                    "Plains Grazer",
                    "Humped Back",
                    "Thick Fur",
                    "Herd Traveling"
                ]
            },
            {
                "topic": [
                    "Camel",
                    "Camels"
                ],
                "entries": [
                    "Desert Nomad",
                    "Hump Storage",
                    "Water Conservation",
                    "Caravan Use"
                ]
            },
            {
                "topic": [
                    "Raccoon",
                    "Raccoons"
                ],
                "entries": [
                    "Mask-like Face",
                    "Trash Forager",
                    "Nimble Hands",
                    "Nocturnal"
                ]
            },
            {
                "topic": [
                    "Seal",
                    "Seals"
                ],
                "entries": [
                    "Marine Mammal",
                    "Blubber Insulation",
                    "Flipping Movement",
                    "Coastal Dwellers"
                ]
            },
            {
                "topic": [
                    "Gazelle",
                    "Gazelles"
                ],
                "entries": [
                    "Bounding Run",
                    "Grassland Resident",
                    "Twisted Horns",
                    "Flock Dynamics"
                ]
            },
            {
                "topic": [
                    "Lemur",
                    "Lemurs"
                ],
                "entries": [
                    "Madagascar Unique",
                    "Ringed Tail",
                    "Social Troops",
                    "Arboreal"
                ]
            },
            {
                "topic": [
                    "Vulture",
                    "Vultures"
                ],
                "entries": [
                    "Scavenger Bird",
                    "Bald Head",
                    "Thermal Soaring",
                    "Duff Feeding"
                ]
            },
            {
                "topic": [
                    "Scorpion",
                    "Scorpions"
                ],
                "entries": [
                    "Exoskeleton",
                    "Pincer Claws",
                    "Venomous Tail",
                    "Desert Dweller"
                ]
            },
            {
                "topic": [
                    "Starfish",
                    "Starfishes"
                ],
                "entries": [
                    "Radial Symmetry",
                    "Sea Floor",
                    "Regenerative Limbs",
                    "Sessile"
                ]
            },
            {
                "topic": [
                    "Octopus",
                    "Octopuses"
                ],
                "entries": [
                    "Eight Arms",
                    "Camouflage",
                    "Intelligent",
                    "Ocean Crawler"
                ]
            },
            {
                "topic": [
                    "Salmon",
                    "Salmons"
                ],
                "entries": [
                    "Migration",
                    "Stream Spawning",
                    "Pink Flesh",
                    "Anadromous Fish"
                ]
            },
            {
                "topic": [
                    "Lobster",
                    "Lobsters"
                ],
                "entries": [
                    "Crustacean",
                    "Claw Defense",
                    "Sea Cuisine",
                    "Ocean Bottom"
                ]
            },
            {
                "topic": [
                    "Antelope",
                    "Antelopes"
                ],
                "entries": [
                    "Grazing Ungulate",
                    "Swift Runner",
                    "Horned",
                    "Grassland Habitat"
                ]
            },
            {
                "topic": [
                    "Toucan",
                    "Toucans"
                ],
                "entries": [
                    "Large Beak",
                    "Tropical Forests",
                    "Brightly Colored",
                    "Fruit Diet"
                ]
            },
            {
                "topic": [
                    "Caribou",
                    "Caribous"
                ],
                "entries": [
                    "Antlered Herbivore",
                    "Arctic Regions",
                    "Migratory Herds",
                    "Ruminant"
                ]
            },
            {
                "topic": [
                    "Alligator",
                    "Alligators"
                ],
                "entries": [
                    "Thick Hide",
                    "Swamp Dweller",
                    "Carnivorous",
                    "Reptilian"
                ]
            },
            {
                "topic": [
                    "Hippo",
                    "Hippopotamus",
                    "Hippopotamuses"
                ],
                "entries": [
                    "Water Dweller",
                    "Massive Size",
                    "Herbivorous",
                    "African Rivers"
                ]
            },
            {
                "topic": [
                    "Gorilla",
                    "Gorillas"
                ],
                "entries": [
                    "Silverback",
                    "Forest Gentle",
                    "Vegetarian Diet",
                    "Troop"
                ]
            },
            {
                "topic": [
                    "Cobra",
                    "Cobras"
                ],
                "entries": [
                    "Hood Display",
                    "Venomous",
                    "Snake Charm",
                    "Desert Sands"
                ]
            },
            {
                "topic": [
                    "Iguana",
                    "Iguanas"
                ],
                "entries": [
                    "Desert Lizard",
                    "Herbivore",
                    "Sun Basker",
                    "Tropical"
                ]
            }
        ]
    },
    "cuisine": {
        "topics": [
            {
                "topic": [
                    "Pizza",
                    "Pizzerias",
                    "Italian Pie",
                    "Cheese Slice"
                ],
                "entries": [
                    "Tomato Sauce",
                    "Mozzarella",
                    "Pepperoni",
                    "Oven-baked"
                ]
            },
            {
                "topic": [
                    "Tacos",
                    "Taco",
                    "Mexican Handheld",
                    "Tortilla Wrap"
                ],
                "entries": [
                    "Corn Tortilla",
                    "Salsa",
                    "Ground Beef",
                    "Lettuce"
                ]
            },
            {
                "topic": [
                    "Dim Sum",
                    "Dimsum",
                    "Cantonese Bites",
                    "Dragon Buns"
                ],
                "entries": [
                    "Steamed Buns",
                    "Teahouse",
                    "Dumplings",
                    "Chicken Feet"
                ]
            },
            {
                "topic": [
                    "Omelette",
                    "Omelet",
                    "Egg Pancake",
                    "French Omelette"
                ],
                "entries": [
                    "Whisked Eggs",
                    "Breakfast Dish",
                    "Frying Pan",
                    "Mushrooms"
                ]
            },
            {
                "topic": [
                    "Hamburger",
                    "Burger",
                    "Beef Patty",
                    "Burgers"
                ],
                "entries": [
                    "Ground Beef",
                    "Sesame Bun",
                    "Pickles",
                    "Grilled"
                ]
            },
            {
                "topic": [
                    "Coffee",
                    "Coffees",
                    "Java",
                    "Brewed Beans"
                ],
                "entries": [
                    "Espresso Shot",
                    "Arabica",
                    "Roasted Beans",
                    "Barista"
                ]
            },
            {
                "topic": [
                    "Samosa",
                    "Samosas",
                    "Indian Parcel",
                    "Triangle Snack"
                ],
                "entries": [
                    "Pastry Shell",
                    "Potato Filling",
                    "Fried",
                    "Spices"
                ]
            },
            {
                "topic": [
                    "Spaghetti",
                    "Spaghetti Noodles",
                    "Pasta Italian",
                    "Carbonara"
                ],
                "entries": [
                    "Tomato Sauce",
                    "Meatballs",
                    "Parmesan",
                    "Boiled"
                ]
            },
            {
                "topic": [
                    "Sushi",
                    "Sashimi",
                    "Rolls",
                    "Nigiri"
                ],
                "entries": [
                    "Raw Fish",
                    "Soy Sauce",
                    "Seaweed Wrap",
                    "Wasabi"
                ]
            },
            {
                "topic": [
                    "Curry",
                    "Curries",
                    "Spiced Stew",
                    "Indian Curry"
                ],
                "entries": [
                    "Coconut Milk",
                    "Turmeric",
                    "Chickpeas",
                    "Simmer"
                ]
            },
            {
                "topic": [
                    "Pho",
                    "Vietnamese Noodle Soup",
                    "Pho Bo",
                    "Pho Ga"
                ],
                "entries": [
                    "Beef Broth",
                    "Rice Noodles",
                    "Basil Leaves",
                    "Bowl"
                ]
            },
            {
                "topic": [
                    "Falafel",
                    "Falafels",
                    "Chickpea Fritter",
                    "Middle Eastern Ball"
                ],
                "entries": [
                    "Ground Chickpeas",
                    "Deep-Fried",
                    "Herbs",
                    "Tahini Sauce"
                ]
            },
            {
                "topic": [
                    "Paella",
                    "Valencian Paella",
                    "Seafood Paella"
                ],
                "entries": [
                    "Saffron",
                    "Spanish",
                    "Seafood",
                    "Rice Dish"
                ]
            },
            {
                "topic": [
                    "Pad Thai",
                    "Thai Noodles",
                    "Street Pad Thai",
                    "Thai Stir-Fry"
                ],
                "entries": [
                    "Rice Noodles",
                    "Tamarind Paste",
                    "Peanuts",
                    "Thailand"
                ]
            },
            {
                "topic": [
                    "Croissant",
                    "Butter Croissant",
                    "Croissants"
                ],
                "entries": [
                    "French",
                    "Flaky Layers",
                    "Breakfast",
                    "Pastry"
                ]
            },
            {
                "topic": [
                    "Lasagna",
                    "Lasagne",
                    "Layered Pasta",
                    "Italian Casserole"
                ],
                "entries": [
                    "Oven-baked",
                    "Ground Meat",
                    "Tomato Sauce",
                    "Layers"
                ]
            },
            {
                "topic": [
                    "Biryani",
                    "Indian Rice Dish",
                    "Biryani Rice",
                    "Hyderabadi Biryani"
                ],
                "entries": [
                    "Basmati Rice",
                    "Saffron",
                    "Mixed Spices",
                    "Marinated Meat"
                ]
            },
            {
                "topic": [
                    "Ceviche",
                    "Cebiche",
                    "Peruvian Ceviche",
                    "Marinated Fish"
                ],
                "entries": [
                    "Lime Juice",
                    "Seafood",
                    "Onions",
                    "Cilantro"
                ]
            },
            {
                "topic": [
                    "Ramen",
                    "Ramen Noodles",
                    "Japanese Soup",
                    "Broth Noodles"
                ],
                "entries": [
                    "Soy Sauce",
                    "Pork Broth",
                    "Miso",
                    "Egg"
                ]
            },
            {
                "topic": [
                    "Nachos",
                    "Nacho Platter",
                    "Corn Tortilla Chips",
                    "Cheesy Nachos"
                ],
                "entries": [
                    "Cheese",
                    "Corn Chips",
                    "Sour Cream",
                    "Guacamole"
                ]
            },
            {
                "topic": [
                    "Bruschetta",
                    "Italian Antipasto",
                    "Tomato Crostini",
                    "Bruschette"
                ],
                "entries": [
                    "Grilled Bread",
                    "Garlic",
                    "Diced Tomatoes",
                    "Basil"
                ]
            },
            {
                "topic": [
                    "Tapas",
                    "Spanish Tapas",
                    "Small Plates",
                    "Tapas Bar"
                ],
                "entries": [
                    "Spanish",
                    "Manchego Cheese",
                    "Chorizo",
                    "Shared"
                ]
            },
            {
                "topic": [
                    "Goulash",
                    "Hungarian Stew",
                    "Beef Goulash",
                    "Goulash Soup"
                ],
                "entries": [
                    "Paprika",
                    "Beef Chunks",
                    "Bell Peppers",
                    "Hungarian"
                ]
            },
            {
                "topic": [
                    "Kimchi",
                    "Kimchee"
                ],
                "entries": [
                    "Napa Cabbage",
                    "Chili Pepper",
                    "Korean Side Dish",
                    "Fermentation"
                ]
            },
            {
                "topic": [
                    "Bagel",
                    "Bagels",
                    "Boiled Bread",
                    "New York Bagel"
                ],
                "entries": [
                    "Chewy Texture",
                    "Baked",
                    "Dough Ring",
                    "Sesame Seeds"
                ]
            },
            {
                "topic": [
                    "Churros",
                    "Spanish Doughnuts",
                    "Mexican Churros",
                    "Fried Pastry"
                ],
                "entries": [
                    "Cinnamon Sugar",
                    "Deep-Fried",
                    "Street Snack",
                    "Dolce"
                ]
            },
            {
                "topic": [
                    "Gazpacho",
                    "Spanish Soup",
                    "Chilled Gazpacho"
                ],
                "entries": [
                    "Tomato Base",
                    "Cucumbers",
                    "Bell Peppers",
                    "Cold Soup"
                ]
            },
            {
                "topic": [
                    "Poutine",
                    "Canadian Fries",
                    "Quebec Poutine",
                    "Gravy Fries"
                ],
                "entries": [
                    "French Fries",
                    "Cheese Curds",
                    "Gravy",
                    "Canadian"
                ]
            },
            {
                "topic": [
                    "Empanada",
                    "Empanadas",
                    "Baked Parcel",
                    "Spanish Pastry"
                ],
                "entries": [
                    "Pastry Dough",
                    "Beef Filling",
                    "Oven-baked",
                    "Flaky"
                ]
            },
            {
                "topic": [
                    "Udon",
                    "Udon Noodles",
                    "Japanese Udon Soup",
                    "Thick Noodles"
                ],
                "entries": [
                    "Soy Sauce",
                    "Dashi Broth",
                    "Spring Onions",
                    "Chewy"
                ]
            },
            {
                "topic": [
                    "Baozi",
                    "Bao",
                    "Chinese Buns",
                    "Stuffed Buns"
                ],
                "entries": [
                    "Steamed",
                    "Pork Filling",
                    "Yeast Dough",
                    "Street Food"
                ]
            },
            {
                "topic": [
                    "Fondue",
                    "Cheese Fondue",
                    "Switzerland Fondue",
                    "Fondue Pot"
                ],
                "entries": [
                    "Melted Cheese",
                    "Bread Dippers",
                    "Swiss",
                    "Warm"
                ]
            },
            {
                "topic": [
                    "Moussaka",
                    "Eggplant Casserole",
                    "Moussakas"
                ],
                "entries": [
                    "Eggplant",
                    "Minced Meat",
                    "B\u00e9chamel Sauce",
                    "Greek Layered Dish"
                ]
            },
            {
                "topic": [
                    "Chow Mein",
                    "Stir-fried Noodles",
                    "Chinese Chow Mein",
                    "Fried Mein"
                ],
                "entries": [
                    "Egg Noodles",
                    "Soy Sauce",
                    "Vegetables",
                    "Stir-fried"
                ]
            },
            {
                "topic": [
                    "Tandoori",
                    "Tandoori Chicken",
                    "Indian Grill",
                    "Tandoori Oven"
                ],
                "entries": [
                    "Indian",
                    "Marinated Chicken",
                    "Spicy",
                    "Yogurt"
                ]
            },
            {
                "topic": [
                    "Gyoza",
                    "Japanese Dumplings",
                    "Pan-fried Gyoza",
                    "Gyoza Dumpling"
                ],
                "entries": [
                    "Pork Filling",
                    "Soy Sauce",
                    "Crispy Bottom",
                    "Savory"
                ]
            },
            {
                "topic": [
                    "Quiche",
                    "French Tart",
                    "Quiches"
                ],
                "entries": [
                    "Egg Custard",
                    "Pastry Shell",
                    "French Savory Pie",
                    "Cheese Filling"
                ]
            },
            {
                "topic": [
                    "Ratatouille",
                    "Proven\u00e7al Stew",
                    "Summer Vegetables"
                ],
                "entries": [
                    "Eggplant",
                    "Zucchini",
                    "Tomato",
                    "French Vegetable Stew"
                ]
            },
            {
                "topic": [
                    "Dolma",
                    "Stuffed Grape Leaves",
                    "Dolmas",
                    "Middle Eastern Snack"
                ],
                "entries": [
                    "Stuffed Rice",
                    "Grape Leaves",
                    "Lemon Aroma",
                    "Cold"
                ]
            },
            {
                "topic": [
                    "Schnitzel",
                    "Breaded Cutlet",
                    "Austrian Schnitzel",
                    "Fried Schnitzel"
                ],
                "entries": [
                    "Breaded and Fried",
                    "Austrian",
                    "Lemon Wedge",
                    "Flat"
                ]
            },
            {
                "topic": [
                    "Baklava",
                    "Layered Pastry",
                    "Greek Sweet Pastry",
                    "Baklavas"
                ],
                "entries": [
                    "Phyllo Dough",
                    "Walnuts",
                    "Honey Syrup",
                    "Sweet"
                ]
            },
            {
                "topic": [
                    "Rosti",
                    "Swiss R\u00fcesti",
                    "Potato Pancake",
                    "R\u00f6sti"
                ],
                "entries": [
                    "Grated Potatoes",
                    "Crispy",
                    "Fried",
                    "Swiss Dish"
                ]
            },
            {
                "topic": [
                    "Fajitas",
                    "Tex-Mex Wrap",
                    "Grilled Fajitas",
                    "Beef Fajitas"
                ],
                "entries": [
                    "Bell Peppers",
                    "Grilled Meat",
                    "Tortilla",
                    "Mexican Wrap"
                ]
            },
            {
                "topic": [
                    "Bouillabaisse",
                    "French Fish Stew",
                    "Proven\u00e7al Stew",
                    "Marseille Soup"
                ],
                "entries": [
                    "Fish Broth",
                    "Shellfish",
                    "Saffron",
                    "Croutons"
                ]
            },
            {
                "topic": [
                    "Bibimbap",
                    "Korean Mixed Rice",
                    "Bibim Bap",
                    "Mixed Bowl"
                ],
                "entries": [
                    "Rice Base",
                    "Vegetables",
                    "Spicy Sauce",
                    "Egg"
                ]
            },
            {
                "topic": [
                    "Pierogi",
                    "Polish Dumplings",
                    "Pierogies",
                    "Varenyky"
                ],
                "entries": [
                    "Potato Filling",
                    "Boiled",
                    "Onion Topping",
                    "Sour Cream"
                ]
            },
            {
                "topic": [
                    "Kebab",
                    "Kabob",
                    "Grilled Skewers"
                ],
                "entries": [
                    "Ground Meat",
                    "Grilled",
                    "Middle Eastern Skewer",
                    "Flatbread"
                ]
            },
            {
                "topic": [
                    "Nasi Goreng",
                    "Fried Rice Dish",
                    "Nasi"
                ],
                "entries": [
                    "Rice",
                    "Fried Egg",
                    "Shrimp",
                    "Indonesian Fried Rice"
                ]
            },
            {
                "topic": [
                    "Bread",
                    "Bread Making",
                    "Bread Baking",
                    "Bakery",
                    "Baker"
                ],
                "entries": [
                    "Yeast",
                    "Dough",
                    "Baking",
                    "Crust"
                ]
            },
            {
                "topic": [
                    "Borscht",
                    "Beet Soup",
                    "Ukrainian Borscht",
                    "Borshch"
                ],
                "entries": [
                    "Beetroot",
                    "Sour Cream",
                    "Cabbage",
                    "Ukrainian Soup"
                ]
            },
            {
                "topic": [
                    "Croque Monsieur",
                    "French Sandwich",
                    "Ham and Cheese",
                    "Toasted Monsieur"
                ],
                "entries": [
                    "Ham",
                    "Gruy\u00e8re Cheese",
                    "French",
                    "Grilled"
                ]
            }
        ]
    },
    "events": {
        "topics": [
            {
                "topic": [
                    "Olympics",
                    "The Olympics",
                    "The Olympic Games"
                ],
                "entries": [
                    "Five Rings",
                    "Summer and Winter",
                    "Torch Relay",
                    "Medal Ceremony"
                ]
            },
            {
                "topic": [
                    "World War I",
                    "WWI",
                    "WW1",
                    "The Great War"
                ],
                "entries": [
                    "Trench Warfare",
                    "Archduke Assassination",
                    "Battle of the Somme",
                    "Treaty of Versailles"
                ]
            },
            {
                "topic": [
                    "Christmas",
                    "Xmas",
                    "Yuletide"
                ],
                "entries": [
                    "Santa Claus",
                    "Advent Calendar",
                    "Gift Giving",
                    "Birth of Jesus"
                ]
            },
            {
                "topic": [
                    "Easter",
                    "Paschal Festival",
                    "Resurrection Sunday"
                ],
                "entries": [
                    "Egg Hunt",
                    "Bunny",
                    "Good Friday",
                    "Resurrection"
                ]
            },
            {
                "topic": [
                    "Thanksgiving",
                    "Turkey Day",
                    "Harvest Festival"
                ],
                "entries": [
                    "Pumpkin Pie",
                    "Turkey Feast",
                    "Family Gatherings",
                    "Thankfulness"
                ]
            },
            {
                "topic": [
                    "New Year's Eve",
                    "NYE",
                    "December 31st"
                ],
                "entries": [
                    "Countdown",
                    "Fireworks",
                    "Ball Drop",
                    "Midnight Toast"
                ]
            },
            {
                "topic": [
                    "Valentine's Day",
                    "V-Day",
                    "Saint Valentine's Day"
                ],
                "entries": [
                    "Roses",
                    "Love Letters",
                    "Cupid",
                    "February"
                ]
            },
            {
                "topic": [
                    "Halloween",
                    "All Hallows' Eve",
                    "Samhain"
                ],
                "entries": [
                    "Costumes",
                    "Trick-or-Treat",
                    "Pumpkin Carving",
                    "Spooky Decorations"
                ]
            },
            {
                "topic": [
                    "The Civil War",
                    "American Civil War",
                    "The American Civil War",
                    "War Between the States"
                ],
                "entries": [
                    "Gettysburg",
                    "Abraham Lincoln",
                    "Union vs Confederacy",
                    "Slavery"
                ]
            },
            {
                "topic": [
                    "The Great Depression",
                    "Economic Depression",
                    "The Crash of 1929"
                ],
                "entries": [
                    "Stock Market Crash",
                    "Black Tuesday",
                    "Breadlines",
                    "Dust Bowl"
                ]
            },
            {
                "topic": [
                    "The Renaissance",
                    "Renaissance Era",
                    "Rebirth Period"
                ],
                "entries": [
                    "Enlightenment",
                    "Humanism",
                    "Started in France",
                    "Art Revival"
                ]
            },
            {
                "topic": [
                    "The Industrial Revolution",
                    "Industrial Age",
                    "Industrial Revolution",
                    "Industry Revolution",
                    "Industrialization Era"
                ],
                "entries": [
                    "Steam Engine",
                    "Factories",
                    "Urbanization",
                    "Mass Production"
                ]
            },
            {
                "topic": [
                    "Space Race",
                    "Cosmic Competition",
                    "Space Exploration Rivalry"
                ],
                "entries": [
                    "Apollo 11",
                    "Sputnik",
                    "Moon Landing",
                    "Cold War Context"
                ]
            },
            {
                "topic": [
                    "The Cold War",
                    "Cold War",
                    "Cold War Era"
                ],
                "entries": [
                    "Nuclear Arms",
                    "Iron Curtain",
                    "US-Soviet Tensions",
                    "Cuban Missile Crisis"
                ]
            },
            {
                "topic": [
                    "The Vietnam War",
                    "Vietnam War",
                    "Vietnam Conflict",
                    "Second Indochina War"
                ],
                "entries": [
                    "Ho Chi Minh",
                    "Viet Cong",
                    "Agent Orange",
                    "Tet Offensive"
                ]
            },
            {
                "topic": [
                    "The Korean War",
                    "Korean War",
                    "Korean Conflict",
                    "Korea Police Action"
                ],
                "entries": [
                    "38th Parallel",
                    "North vs South",
                    "Inchon Landing",
                    "Communism"
                ]
            },
            {
                "topic": [
                    "The Gulf War",
                    "Gulf War",
                    "Operation Desert Storm",
                    "First Iraq War"
                ],
                "entries": [
                    "Kuwait Invasion",
                    "Scud Missiles",
                    "Coalition Forces",
                    "Saddam Hussein"
                ]
            },
            {
                "topic": [
                    "9/11 Attacks",
                    "911",
                    "911 Attacks",
                    "September 11"
                ],
                "entries": [
                    "World Trade Center",
                    "Planes",
                    "Al-Qaeda",
                    "Osama bin Laden"
                ]
            },
            {
                "topic": [
                    "The European Union",
                    "European Union",
                    "EU",
                    "The EU",
                    "European Economic Community"
                ],
                "entries": [
                    "Maastricht Treaty",
                    "Brussels",
                    "Euro Currency",
                    "Schengen Area"
                ]
            },
            {
                "topic": [
                    "The United Nations",
                    "United Nations",
                    "UN",
                    "the UN",
                    "International Assembly Focus"
                ],
                "entries": [
                    "Security Council",
                    "General Assembly",
                    "Peacekeeping Missions",
                    "Human Rights"
                ]
            },
            {
                "topic": [
                    "World Health Organization",
                    "WHO",
                    "the WHO",
                    "the World Health Organization"
                ],
                "entries": [
                    "Pandemic Response",
                    "Vaccination Campaigns",
                    "Health Regulations",
                    "Global Health Body"
                ]
            },
            {
                "topic": [
                    "The Dot-com Bubble",
                    "Dot-com Bubble",
                    "Dotcom Bubble",
                    "The Dotcom Bubble",
                    "Internet Bubble",
                    "Tech Stock Explosion"
                ],
                "entries": [
                    "Startup Boom",
                    "NASDAQ Crash",
                    "Tech Investment",
                    "IPO Frenzy"
                ]
            },
            {
                "topic": [
                    "The French Revolution",
                    "French Revolution",
                    "French Political Upheaval",
                    "Revolution of 1789"
                ],
                "entries": [
                    "Bastille",
                    "Guillotine",
                    "Reign of Terror",
                    "Napoleon"
                ]
            },
            {
                "topic": [
                    "The American Revolution",
                    "American Revolution",
                    "US War of Independence",
                    "Revolutionary War"
                ],
                "entries": [
                    "George Washington",
                    "Boston Tea Party",
                    "Lexington and Concord",
                    "Declaration of Independence"
                ]
            },
            {
                "topic": [
                    "The Russian Revolution",
                    "Russian Revolution",
                    "Bolshevik Revolution",
                    "Soviet Uprising"
                ],
                "entries": [
                    "Lenin",
                    "Tsar Nicholas II",
                    "Bolsheviks",
                    "October Revolution"
                ]
            },
            {
                "topic": [
                    "The Protestant Reformation",
                    "Protestant Reformation",
                    "Reformation Era",
                    "Religious Reform Movement"
                ],
                "entries": [
                    "Martin Luther",
                    "95 Theses",
                    "Indulgences",
                    "Church Schism"
                ]
            },
            {
                "topic": [
                    "The Spanish Inquisition",
                    "Spanish Inquisition",
                    "Spanish Religious Persecution",
                    "Inquisition Tribunal"
                ],
                "entries": [
                    "Torture Chambers",
                    "Heretic Trials",
                    "Auto-da-f\u00e9",
                    "Expulsion of Jews"
                ]
            },
            {
                "topic": [
                    "The Crusades",
                    "Crusades",
                    "Crusading Era",
                    "Holy Wars",
                    "The Holy Wars"
                ],
                "entries": [
                    "Jerusalem",
                    "Knights Templar",
                    "Saladin",
                    "Papal Decrees"
                ]
            },
            {
                "topic": [
                    "Ancient Egypt",
                    "Egypt",
                    "Egyptian Civilization",
                    "Pharaoh Times",
                    "Pharaohs",
                    "The Pharaohs"
                ],
                "entries": [
                    "Pyramids",
                    "Hieroglyphics",
                    "Nile River",
                    "Mummification"
                ]
            },
            {
                "topic": [
                    "The Roman Empire",
                    "The Romans",
                    "Roman Empire",
                    "Roman Imperium",
                    "Empire of Rome"
                ],
                "entries": [
                    "Julius Caesar",
                    "Senate",
                    "Colosseum",
                    "Legions"
                ]
            },
            {
                "topic": [
                    "The Byzantine Empire",
                    "Bbyzantine Empire",
                    "Eastern Roman Empire",
                    "Byzantium"
                ],
                "entries": [
                    "Constantinople",
                    "Hagia Sophia",
                    "Justinian Code",
                    "Greek Fire"
                ]
            },
            {
                "topic": [
                    "The Ottoman Empire",
                    "Ottoman Empire",
                    "Ottoman Turks",
                    "Turkish Empire"
                ],
                "entries": [
                    "Suleiman the Magnificent",
                    "Topkapi Palace",
                    "Janissaries",
                    "Sultanate"
                ]
            },
            {
                "topic": [
                    "The British Empire",
                    "British Empire",
                    "British Colonial Expansion",
                    "Empire of Great Britain"
                ],
                "entries": [
                    "India Colony",
                    "Queen Victoria",
                    "Commonwealth",
                    "Redcoats"
                ]
            },
            {
                "topic": [
                    "The Ming Dynasty",
                    "Ming Dynasty",
                    "Ming China",
                    "Chinese Empire"
                ],
                "entries": [
                    "Forbidden City",
                    "Porcelain",
                    "Great Wall",
                    "Zheng He"
                ]
            },
            {
                "topic": [
                    "World Cup",
                    "The World Cup",
                    "FIFA World Cup",
                    "Soccer Tournament"
                ],
                "entries": [
                    "Golden Boot",
                    "Penalty Shootouts",
                    "FIFA",
                    "Trophy Lift"
                ]
            },
            {
                "topic": [
                    "Wimbledon",
                    "Wimbledon Championships",
                    "The Championships"
                ],
                "entries": [
                    "Grass Courts",
                    "All England Club",
                    "Strawberries and Cream",
                    "Tennis Whites"
                ]
            },
            {
                "topic": [
                    "Tour de France",
                    "The Tour de France",
                    "Le Grand Tour",
                    "French Cycling Race"
                ],
                "entries": [
                    "Yellow Jersey",
                    "Climbs",
                    "Cycling",
                    "Alpe d'Huez"
                ]
            },
            {
                "topic": [
                    "Formula One",
                    "F1"
                ],
                "entries": [
                    "Pit Stops",
                    "Pole Position",
                    "Monaco Circuit",
                    "Grand Prix"
                ]
            },
            {
                "topic": [
                    "The Nobel Prizes",
                    "Nobel Prize",
                    "Nobel Awards",
                    "International Laurels"
                ],
                "entries": [
                    "Peace Prize",
                    "Committees",
                    "Inventor",
                    "Ceremony in Stockholm"
                ]
            },
            {
                "topic": [
                    "The Oscars",
                    "Oscars",
                    "Academy Awards",
                    "Hollywood's Night"
                ],
                "entries": [
                    "Red Carpet",
                    "Golden Statuette",
                    "Best Picture",
                    "Acceptance Speech"
                ]
            },
            {
                "topic": [
                    "Comic-Con",
                    "ComicCon",
                    "Comic Convention",
                    "Pop Culture Fest"
                ],
                "entries": [
                    "Cosplay",
                    "Panels",
                    "Celebrity Autographs",
                    "Fan Meetups"
                ]
            },
            {
                "topic": [
                    "Lunar New Year",
                    "Chinese New Year",
                    "Chinese NY",
                    "Spring Festival"
                ],
                "entries": [
                    "Zodiac Animals",
                    "Red Envelopes",
                    "Firecrackers",
                    "Lantern Festival"
                ]
            },
            {
                "topic": [
                    "Germany Reunification",
                    "German Reunification",
                    "German Unity",
                    "Berlin Wall Fall"
                ],
                "entries": [
                    "East and West",
                    "Brandenburg Gate",
                    "Unity Day",
                    "Cold War End"
                ]
            },
            {
                "topic": [
                    "Marathon",
                    "The Marathon"
                ],
                "entries": [
                    "Mount Olympus",
                    "Messenger",
                    "42.195 Kilometers",
                    "Endurance"
                ]
            },
            {
                "topic": [
                    "Boxing Day",
                    "Day of Goodwill",
                    "St. Stephen's Day"
                ],
                "entries": [
                    "Post-Christmas",
                    "Gifts",
                    "Shopping Sales",
                    "Charity Events"
                ]
            },
            {
                "topic": [
                    "Mardi Gras",
                    "Fat Tuesday",
                    "Shrove Tuesday"
                ],
                "entries": [
                    "Parades",
                    "Beads",
                    "New Orleans",
                    "Carnival"
                ]
            },
            {
                "topic": [
                    "Day of the Dead",
                    "Dia de los Muertos",
                    "All Saints Day"
                ],
                "entries": [
                    "Sugar Skulls",
                    "Altars",
                    "Mexico",
                    "Marigolds"
                ]
            },
            {
                "topic": [
                    "Ramadan",
                    "Ramzan",
                    "Sawm"
                ],
                "entries": [
                    "Fasting",
                    "Iftar",
                    "Holy Month",
                    "Quran Reading"
                ]
            },
            {
                "topic": [
                    "Hanukkah",
                    "Chanukah",
                    "Festival of Lights"
                ],
                "entries": [
                    "Menorah",
                    "Dreidel",
                    "Eight Nights",
                    "Oil"
                ]
            },
            {
                "topic": [
                    "Oktoberfest",
                    "Bavarian Beer Festival",
                    "Wiesn"
                ],
                "entries": [
                    "Munich",
                    "Lederhosen",
                    "Beer",
                    "Pretzels"
                ]
            },
            {
                "topic": [
                    "Passover",
                    "Pesach",
                    "Jewish Easter"
                ],
                "entries": [
                    "Seder Meal",
                    "Matzah",
                    "Haggadah",
                    "Plagues"
                ]
            },
            {
                "topic": [
                    "Festival of Colors",
                    "Holi",
                    "Holi Festival",
                    "Phagwah"
                ],
                "entries": [
                    "Colored Powder",
                    "Spring",
                    "Bonfires",
                    "Water Balloons"
                ]
            },
            {
                "topic": [
                    "Hanami",
                    "Cherry Blossom Festival",
                    "Flower Viewing"
                ],
                "entries": [
                    "Sakura",
                    "Picnic",
                    "Japan",
                    "Springtime"
                ]
            },
            {
                "topic": [
                    "Carnival",
                    "Carnaval",
                    "Mardi Gras"
                ],
                "entries": [
                    "Costumes",
                    "Floats",
                    "Samba",
                    "Celebration"
                ]
            },
            {
                "topic": [
                    "Diwali",
                    "Deepavali",
                    "Festival of Lights"
                ],
                "entries": [
                    "Oil Lamps",
                    "Firecrackers",
                    "New Clothes",
                    "Goddess Lakshmi"
                ]
            },
            {
                "topic": [
                    "Kwanzaa",
                    "African Celebration",
                    "Nguzo Saba"
                ],
                "entries": [
                    "Seven Principles",
                    "Candles",
                    "Unity Cup",
                    "Red, Black, Green"
                ]
            },
            {
                "topic": [
                    "Vesak",
                    "Buddha Day",
                    "Vaisakha"
                ],
                "entries": [
                    "Enlightenment",
                    "Buddha Statues",
                    "Religious Rituals",
                    "Meditation"
                ]
            },
            {
                "topic": [
                    "Mid-Autumn Festival",
                    "Moon Festival",
                    "Zhongqiu Jie"
                ],
                "entries": [
                    "Mooncakes",
                    "Lanterns",
                    "Harvest",
                    "Full Moon"
                ]
            },
            {
                "topic": [
                    "Navratri",
                    "Durga Puja",
                    "Dussehra"
                ],
                "entries": [
                    "Nine Nights",
                    "Fasting",
                    "Dances",
                    "Goddess Durga"
                ]
            },
            {
                "topic": [
                    "St. Patrick's Day",
                    "St. Patrick's",
                    "Irish Day",
                    "L\u00e1 Fh\u00e9ile P\u00e1draig"
                ],
                "entries": [
                    "Green Attire",
                    "Shamrock",
                    "Parades",
                    "Leprechauns"
                ]
            },
            {
                "topic": [
                    "Bonfire Night",
                    "Guy Fawkes Night",
                    "Fireworks Night"
                ],
                "entries": [
                    "Effigies",
                    "Fireworks",
                    "United Kingdom",
                    "5th November"
                ]
            },
            {
                "topic": [
                    "Winter Solstice",
                    "Yule",
                    "Midwinter"
                ],
                "entries": [
                    "Shortest Day",
                    "Stonehenge",
                    "Celebration",
                    "Renewal"
                ]
            }
        ]
    },
    "films_series": {
        "topics": [
            {
                "topic": [
                    "Friends"
                ],
                "entries": [
                    "Central Perk",
                    "Pivot Scene",
                    "Phoebe's Songs",
                    "Smelly Cat"
                ]
            },
            {
                "topic": [
                    "Schindler's List"
                ],
                "entries": [
                    "Oskar Schindler",
                    "Red Coat",
                    "Auschwitz",
                    "Holocaust"
                ]
            },
            {
                "topic": [
                    "The Godfather"
                ],
                "entries": [
                    "Marlon Brando",
                    "Sicilian Mafia",
                    "Offer",
                    "Family Business"
                ]
            },
            {
                "topic": [
                    "Breaking Bad"
                ],
                "entries": [
                    "Walter White",
                    "Crystal Meth",
                    "RV Lab",
                    "Blue Product"
                ]
            },
            {
                "topic": [
                    "The Office US",
                    "The Office"
                ],
                "entries": [
                    "Scranton",
                    "Jim Halpert",
                    "Michael Scott",
                    "Dwight Schrute"
                ]
            },
            {
                "topic": [
                    "Game of Thrones"
                ],
                "entries": [
                    "Iron Throne",
                    "Westeros",
                    "White Walkers",
                    "Dragons"
                ]
            },
            {
                "topic": [
                    "The Simpsons"
                ],
                "entries": [
                    "Yellow Family",
                    "Homer",
                    "Springfield",
                    "D'oh!"
                ]
            },
            {
                "topic": [
                    "Titanic"
                ],
                "entries": [
                    "Iceberg",
                    "Jack and Rose",
                    "Unsinkable Ship",
                    "1912"
                ]
            },
            {
                "topic": [
                    "Harry Potter"
                ],
                "entries": [
                    "Hogwarts",
                    "Voldemort",
                    "Muggle",
                    "Butterbeer"
                ]
            },
            {
                "topic": [
                    "Lord of the Rings",
                    "LOTR"
                ],
                "entries": [
                    "Middle-earth",
                    "The One Ring",
                    "Frodo Baggins",
                    "Mordor"
                ]
            },
            {
                "topic": [
                    "The Walking Dead",
                    "Walking Dead"
                ],
                "entries": [
                    "Zombies",
                    "Survivors",
                    "Rick Grimes",
                    "Post-apocalypse"
                ]
            },
            {
                "topic": [
                    "Star Trek"
                ],
                "entries": [
                    "USS Enterprise",
                    "Spock",
                    "Warp Speed",
                    "Klingons"
                ]
            },
            {
                "topic": [
                    "Jurassic Park"
                ],
                "entries": [
                    "Dinosaurs",
                    "Isla Nublar",
                    "T-Rex",
                    "Life Finds Way"
                ]
            },
            {
                "topic": [
                    "Inception"
                ],
                "entries": [
                    "Dream Layers",
                    "Christopher Nolan",
                    "Spinning Top",
                    "Leonardo DiCaprio"
                ]
            },
            {
                "topic": [
                    "The Lion King"
                ],
                "entries": [
                    "Simba",
                    "Hakuna Matata",
                    "Pride Rock",
                    "Circle of Life"
                ]
            },
            {
                "topic": [
                    "The Avengers"
                ],
                "entries": [
                    "Iron Man",
                    "Infinity Stones",
                    "S.H.I.E.L.D.",
                    "Thanos"
                ]
            },
            {
                "topic": [
                    "Stranger Things"
                ],
                "entries": [
                    "1980s",
                    "Upside Down",
                    "Eleven",
                    "Hawkins"
                ]
            },
            {
                "topic": [
                    "Sherlock Holmes"
                ],
                "entries": [
                    "221B Baker Street",
                    "Detective",
                    "Dr. Watson",
                    "Moriarty"
                ]
            },
            {
                "topic": [
                    "The Wizard of Oz"
                ],
                "entries": [
                    "Yellow Brick Road",
                    "Emerald City",
                    "Wicked Witch",
                    "Dorothy"
                ]
            },
            {
                "topic": [
                    "Avatar"
                ],
                "entries": [
                    "Pandora",
                    "Blue Na'vi",
                    "James Cameron",
                    "3D"
                ]
            },
            {
                "topic": [
                    "Back to the Future"
                ],
                "entries": [
                    "Time Travel",
                    "DeLorean",
                    "Marty McFly",
                    "1985"
                ]
            },
            {
                "topic": [
                    "The X-Files"
                ],
                "entries": [
                    "Mulder and Scully",
                    "Aliens",
                    "Conspiracy",
                    "Truth is Out There"
                ]
            },
            {
                "topic": [
                    "The Silence of the Lambs"
                ],
                "entries": [
                    "Hannibal Lecter",
                    "Clarice Starling",
                    "Census Taker",
                    "Fava Beans"
                ]
            },
            {
                "topic": [
                    "The Sopranos"
                ],
                "entries": [
                    "Tony Soprano",
                    "New Jersey",
                    "Mafia",
                    "Therapist"
                ]
            },
            {
                "topic": [
                    "The Matrix"
                ],
                "entries": [
                    "Keanu Reeves",
                    "Red Pill",
                    "Neo",
                    "Bullet Time"
                ]
            },
            {
                "topic": [
                    "Pulp Fiction"
                ],
                "entries": [
                    "Quentin Tarantino",
                    "Vega and Winnfield",
                    "Diner Scene",
                    "Royale with Cheese"
                ]
            },
            {
                "topic": [
                    "Fight Club"
                ],
                "entries": [
                    "Brad Pitt",
                    "Soap",
                    "Tyler Durden",
                    "Underground Clubs"
                ]
            },
            {
                "topic": [
                    "Seinfeld"
                ],
                "entries": [
                    "New York",
                    "Jerry",
                    "Stand-Up",
                    "Soup Nazi"
                ]
            },
            {
                "topic": [
                    "Ghostbusters"
                ],
                "entries": [
                    "Proton Pack",
                    "Slimy Ghost",
                    "Ecto-1",
                    "Who You Gonna Call"
                ]
            },
            {
                "topic": [
                    "E.T. the Extra-Terrestrial",
                    "ET",
                    "E.T."
                ],
                "entries": [
                    "Alien Visitor",
                    "Reese's Pieces",
                    "Bicycle Flying",
                    "Phone Home"
                ]
            },
            {
                "topic": [
                    "Toy Story"
                ],
                "entries": [
                    "Woody",
                    "Buzz Lightyear",
                    "Andy's Room",
                    "Pixar"
                ]
            },
            {
                "topic": [
                    "Indiana Jones"
                ],
                "entries": [
                    "Archaeologist",
                    "Raiders",
                    "Lost Ark",
                    "Harrison Ford"
                ]
            },
            {
                "topic": [
                    "Rocky"
                ],
                "entries": [
                    "Boxing Ring",
                    "Philadelphia",
                    "Balboa",
                    "Eye of the Tiger"
                ]
            },
            {
                "topic": [
                    "Home Alone"
                ],
                "entries": [
                    "Macaulay Culkin",
                    "Sticky Bandits",
                    "Christmas",
                    "Kevin McCallister"
                ]
            },
            {
                "topic": [
                    "Die Hard"
                ],
                "entries": [
                    "John McClane",
                    "Nakatomi Plaza",
                    "Hostage Situation",
                    "Christmas Eve"
                ]
            },
            {
                "topic": [
                    "Jaws"
                ],
                "entries": [
                    "Great White Shark",
                    "Quint",
                    "Amity Island",
                    "Theme Music"
                ]
            },
            {
                "topic": [
                    "Planet of the Apes"
                ],
                "entries": [
                    "Ape Society",
                    "Charlton Heston",
                    "Forbidden Zone",
                    "Statue of Liberty"
                ]
            },
            {
                "topic": [
                    "The Terminator",
                    "Terminator"
                ],
                "entries": [
                    "Arnold Schwarzenegger",
                    "Skynet",
                    "Time Machine",
                    "Judgment Day"
                ]
            },
            {
                "topic": [
                    "Batman"
                ],
                "entries": [
                    "Bruce Wayne",
                    "Gotham City",
                    "Joker",
                    "Cape Crusader"
                ]
            },
            {
                "topic": [
                    "Star Wars"
                ],
                "entries": [
                    "Lucasfilm",
                    "Jedi Knights",
                    "The Force",
                    "Empire"
                ]
            },
            {
                "topic": [
                    "The Godfather",
                    "Godfather"
                ],
                "entries": [
                    "Don Corleone",
                    "Mafia",
                    "Sicily",
                    "Offer"
                ]
            },
            {
                "topic": [
                    "Mulan"
                ],
                "entries": [
                    "Chinese Warrior",
                    "Dragon",
                    "Disney Princess",
                    "Reflection"
                ]
            },
            {
                "topic": [
                    "Finding Nemo"
                ],
                "entries": [
                    "Clownfish",
                    "Dory",
                    "Great Barrier Reef",
                    "Aquarium"
                ]
            },
            {
                "topic": [
                    "Frozen"
                ],
                "entries": [
                    "Anna and Elsa",
                    "Arendelle",
                    "Let It Go",
                    "Ice Powers"
                ]
            },
            {
                "topic": [
                    "Cinderella"
                ],
                "entries": [
                    "Glass Slipper",
                    "Midnight",
                    "Fairy Godmother",
                    "Pumpkin Carriage"
                ]
            }
        ]
    },
    "hobbies": {
        "topics": [
            {
                "topic": [
                    "Bicycle Riding",
                    "Cycling"
                ],
                "entries": [
                    "Handlebars",
                    "Pedals",
                    "Chain",
                    "Brake Levers"
                ]
            },
            {
                "topic": [
                    "Gardening",
                    "Horticulture"
                ],
                "entries": [
                    "Soil",
                    "Pruning Shears",
                    "Compost",
                    "Perennials"
                ]
            },
            {
                "topic": [
                    "Fishing",
                    "Angling"
                ],
                "entries": [
                    "Rod",
                    "Reel",
                    "Fishhook",
                    "Catch"
                ]
            },
            {
                "topic": [
                    "Woodworking",
                    "Carpentry"
                ],
                "entries": [
                    "Chisel",
                    "Lathe",
                    "Jointer",
                    "Woodgrain"
                ]
            },
            {
                "topic": [
                    "Jogging",
                    "Running"
                ],
                "entries": [
                    "Sneakers",
                    "Pace",
                    "Trail",
                    "Endurance"
                ]
            },
            {
                "topic": [
                    "Knitting",
                    "Yarn Crafting"
                ],
                "entries": [
                    "Needle",
                    "Wool",
                    "Pattern",
                    "Row"
                ]
            },
            {
                "topic": [
                    "Photography",
                    "Camera Use"
                ],
                "entries": [
                    "Exposure",
                    "Shutter Speed",
                    "Lens",
                    "Tripod"
                ]
            },
            {
                "topic": [
                    "Doodling",
                    "Drawing"
                ],
                "entries": [
                    "Sketchbook",
                    "Pencil",
                    "Line",
                    "Shading"
                ]
            },
            {
                "topic": [
                    "Writing Poetry",
                    "Verse Creation"
                ],
                "entries": [
                    "Stanza",
                    "Meter",
                    "Rhyme",
                    "Imagery"
                ]
            },
            {
                "topic": [
                    "Sewing",
                    "Stitching"
                ],
                "entries": [
                    "Sewing Machine",
                    "Fabric",
                    "Seams",
                    "Pattern"
                ]
            },
            {
                "topic": [
                    "Yoga",
                    "Mindful Stretching"
                ],
                "entries": [
                    "Mat",
                    "Pose",
                    "Downward-Facing Dog",
                    "Breathing"
                ]
            },
            {
                "topic": [
                    "Camping",
                    "Outdoor Lodging"
                ],
                "entries": [
                    "Tent",
                    "Campfire",
                    "Sleeping Bag",
                    "Hiking Boots"
                ]
            },
            {
                "topic": [
                    "Archery",
                    "Bow Shooting"
                ],
                "entries": [
                    "Bowstring",
                    "Arrow",
                    "Target",
                    "Quiver"
                ]
            },
            {
                "topic": [
                    "Surfing",
                    "Wave Riding"
                ],
                "entries": [
                    "Surfboard",
                    "Wetsuit",
                    "Swell",
                    "Pipeline"
                ]
            },
            {
                "topic": [
                    "Meditation",
                    "Mindful Relaxation"
                ],
                "entries": [
                    "Mantra",
                    "Focus",
                    "Silence",
                    "Tranquility"
                ]
            },
            {
                "topic": [
                    "Origami",
                    "Paper Folding"
                ],
                "entries": [
                    "Creases",
                    "Folds",
                    "Paper Square",
                    "Crane"
                ]
            }
        ]
    },
    "inventions": {
        "topics": [
            {
                "topic": [
                    "Telephone",
                    "Telecom Device",
                    "Landline"
                ],
                "entries": [
                    "Alexander Graham Bell",
                    "Voice Transmission",
                    "Switchboard",
                    "Rotary Dial"
                ]
            },
            {
                "topic": [
                    "Automobile",
                    "Car",
                    "Motor Vehicle"
                ],
                "entries": [
                    "Henry Ford",
                    "Engine",
                    "Wheels",
                    "Steering Wheel"
                ]
            },
            {
                "topic": [
                    "Airplane",
                    "Plane",
                    "Aircraft",
                    "Flying Machine"
                ],
                "entries": [
                    "Wright Brothers",
                    "Aviation",
                    "Wings",
                    "Cockpit"
                ]
            },
            {
                "topic": [
                    "Camera",
                    "Photographic Device",
                    "Photo Camera"
                ],
                "entries": [
                    "Shutter",
                    "Lens",
                    "Film",
                    "Flash"
                ]
            },
            {
                "topic": [
                    "Refrigerator",
                    "Fridge",
                    "Icebox"
                ],
                "entries": [
                    "Cooling System",
                    "Refrigerant",
                    "Compressor",
                    "Shelves"
                ]
            },
            {
                "topic": [
                    "Radio",
                    "Wireless Receiver",
                    "Broadcast Receiver"
                ],
                "entries": [
                    "AM/FM",
                    "Tuning",
                    "Antennas",
                    "Transmitter"
                ]
            },
            {
                "topic": [
                    "Bicycle",
                    "Bike",
                    "Cycle"
                ],
                "entries": [
                    "Pedals",
                    "Handlebars",
                    "Two Wheels",
                    "Chain"
                ]
            },
            {
                "topic": [
                    "Television",
                    "TV",
                    "Telly"
                ],
                "entries": [
                    "Channels",
                    "Remote Control",
                    "Screen",
                    "Broadcast"
                ]
            },
            {
                "topic": [
                    "Computer",
                    "PC",
                    "Personal Computer"
                ],
                "entries": [
                    "CPU",
                    "Keyboard",
                    "Monitor",
                    "Software"
                ]
            },
            {
                "topic": [
                    "Washing Machine",
                    "Laundry Washer",
                    "Laundy Machine",
                    "Clothes Washer"
                ],
                "entries": [
                    "Drum",
                    "Agitator",
                    "Spin Cycle",
                    "Detergent"
                ]
            },
            {
                "topic": [
                    "Microwave Oven",
                    "Microwave",
                    "Rapid Cooker"
                ],
                "entries": [
                    "Electromagnetic Waves",
                    "Turntable",
                    "Heating",
                    "Timer"
                ]
            },
            {
                "topic": [
                    "Vacuum Cleaner",
                    "Hoover",
                    "Suction Cleaner"
                ],
                "entries": [
                    "Dust Bag",
                    "Carpet",
                    "Suction Power",
                    "Nozzle"
                ]
            },
            {
                "topic": [
                    "Printing Press",
                    "Gutenberg Press",
                    "Movable Type"
                ],
                "entries": [
                    "Johannes Gutenberg",
                    "Typefaces",
                    "Books",
                    "Mass Production"
                ]
            },
            {
                "topic": [
                    "Sewing Machine",
                    "Stitcher",
                    "Needlework Machine"
                ],
                "entries": [
                    "Needle",
                    "Thread",
                    "Presser Foot",
                    "Bobbin"
                ]
            },
            {
                "topic": [
                    "Clock",
                    "Timepiece",
                    "Chronometer"
                ],
                "entries": [
                    "Hour Hand",
                    "Minutes",
                    "Quartz",
                    "Ticking"
                ]
            },
            {
                "topic": [
                    "Toaster",
                    "Bread Toaster",
                    "Pop-up Toaster"
                ],
                "entries": [
                    "Slices",
                    "Browning",
                    "Heating Elements",
                    "Slots"
                ]
            },
            {
                "topic": [
                    "Elevator",
                    "Lift",
                    "Vertical Transport"
                ],
                "entries": [
                    "Cabin",
                    "Buttons",
                    "Shaft",
                    "Counterweight"
                ]
            },
            {
                "topic": [
                    "Battery",
                    "Energy Cell",
                    "Power Cell"
                ],
                "entries": [
                    "Chemical Reaction",
                    "Electrolyte",
                    "Voltage",
                    "Charge"
                ]
            },
            {
                "topic": [
                    "Smartphone",
                    "Mobile Phone",
                    "Cellphone"
                ],
                "entries": [
                    "Touchscreen",
                    "Apps",
                    "Camera",
                    "Calls"
                ]
            },
            {
                "topic": [
                    "Submarine",
                    "Submersible",
                    "Underwater Vessel"
                ],
                "entries": [
                    "Torpedoes",
                    "Periscope",
                    "Hull",
                    "Navigation"
                ]
            },
            {
                "topic": [
                    "Hair Dryer",
                    "Hair Drier",
                    "Blow Dryer"
                ],
                "entries": [
                    "Hot Air",
                    "Fan",
                    "Hair Styling",
                    "Electric"
                ]
            },
            {
                "topic": [
                    "Helicopter",
                    "Chopper",
                    "Rotorcraft"
                ],
                "entries": [
                    "Rotor Blades",
                    "Vertical Lift",
                    "Pilot",
                    "Skids"
                ]
            },
            {
                "topic": [
                    "Fountain Pen",
                    "Ink Pen",
                    "Nibbed Pen"
                ],
                "entries": [
                    "Ink Cartridge",
                    "Nib",
                    "Cap",
                    "Reservoir"
                ]
            },
            {
                "topic": [
                    "Escalator",
                    "Moving Staircase",
                    "Automatic Stairs"
                ],
                "entries": [
                    "Treads",
                    "Handrails",
                    "Mechanism",
                    "Incline"
                ]
            },
            {
                "topic": [
                    "Chainsaw",
                    "Saw",
                    "Power Saw"
                ],
                "entries": [
                    "Chains",
                    "Motor",
                    "Cutting Teeth",
                    "Bar"
                ]
            },
            {
                "topic": [
                    "Compass",
                    "Direction Finder",
                    "Navigational Tool"
                ],
                "entries": [
                    "North",
                    "Magnetic Field",
                    "Needle",
                    "Degrees"
                ]
            },
            {
                "topic": [
                    "Flashlight",
                    "Torch",
                    "Portable Light"
                ],
                "entries": [
                    "Batteries",
                    "Beam",
                    "LED",
                    "Bulb"
                ]
            },
            {
                "topic": [
                    "Thermometer",
                    "Temperature Gauge",
                    "Heat Meter"
                ],
                "entries": [
                    "Mercury",
                    "Fahrenheit",
                    "Sensor",
                    "Glass Tube"
                ]
            },
            {
                "topic": [
                    "Air Conditioner",
                    "AC",
                    "Cooling Unit"
                ],
                "entries": [
                    "Thermostat",
                    "Compressor",
                    "Cool Air",
                    "Filters"
                ]
            },
            {
                "topic": [
                    "Stethoscope",
                    "Medical Listening Device",
                    "Acoustic Scope"
                ],
                "entries": [
                    "Diaphragm",
                    "Ear Tubes",
                    "Heartbeat",
                    "Doctor"
                ]
            },
            {
                "topic": [
                    "Airpot",
                    "Thermos",
                    "Vacuum Flask"
                ],
                "entries": [
                    "Vacuum Insulation",
                    "Stainless Steel",
                    "Hot Drinks",
                    "Lid"
                ]
            },
            {
                "topic": [
                    "Paperclip",
                    "Clasp",
                    "Fastener"
                ],
                "entries": [
                    "Metal Wire",
                    "Documents",
                    "Binding",
                    "Office"
                ]
            },
            {
                "topic": [
                    "Pencil",
                    "Graphite Writing Tool",
                    "Lead Stick"
                ],
                "entries": [
                    "Graphite Core",
                    "Eraser",
                    "Sharpening",
                    "Wooden Body"
                ]
            },
            {
                "topic": [
                    "Umbrella",
                    "Parasol",
                    "Rain Cover"
                ],
                "entries": [
                    "Canopy",
                    "Ribs",
                    "Handle",
                    "Rain"
                ]
            },
            {
                "topic": [
                    "Kettle",
                    "Tea Maker",
                    "Water Boiler"
                ],
                "entries": [
                    "Spout",
                    "Whistle",
                    "Heating Element",
                    "Stovetop"
                ]
            },
            {
                "topic": [
                    "Matches",
                    "Matchsticks",
                    "Fire Starters"
                ],
                "entries": [
                    "Red Phosphorus",
                    "Wood Stick",
                    "Light",
                    "Box"
                ]
            }
        ]
    },
    "music": {
        "topics": [
            {
                "topic": [
                    "The Beatles",
                    "Fab Four"
                ],
                "entries": [
                    "British Invasion",
                    "Liverpool",
                    "Abbey Road",
                    "Yellow Submarine"
                ]
            },
            {
                "topic": [
                    "Beyonc\u00e9",
                    "Queen B"
                ],
                "entries": [
                    "Destiny's Child",
                    "Jay-Z",
                    "Crazy in Love",
                    "Lemonade"
                ]
            },
            {
                "topic": [
                    "Elvis Presley",
                    "The King"
                ],
                "entries": [
                    "Rock and Roll",
                    "Graceland",
                    "Blue Suede Shoes",
                    "Memphis"
                ]
            },
            {
                "topic": [
                    "The Rolling Stones",
                    "Stones"
                ],
                "entries": [
                    "Mick Jagger",
                    "Keith Richards",
                    "Satisfaction",
                    "Sticky Fingers"
                ]
            },
            {
                "topic": [
                    "Michael Jackson",
                    "King of Pop"
                ],
                "entries": [
                    "Moonwalk",
                    "Thriller",
                    "Neverland Ranch",
                    "Billie Jean"
                ]
            },
            {
                "topic": [
                    "Madonna",
                    "Queen of Pop"
                ],
                "entries": [
                    "Material Girl",
                    "Vogue",
                    "Blonde Ambition",
                    "Like a Virgin"
                ]
            },
            {
                "topic": [
                    "Katy Perry",
                    "Perry"
                ],
                "entries": [
                    "California Gurls",
                    "Prism",
                    "American Idol",
                    "Firework"
                ]
            },
            {
                "topic": [
                    "Taylor Swift",
                    "Swift"
                ],
                "entries": [
                    "Fearless",
                    "1989",
                    "Tim McGraw",
                    "Anti-Hero"
                ]
            },
            {
                "topic": [
                    "Justin Bieber",
                    "Bieber"
                ],
                "entries": [
                    "What Do You Mean?",
                    "Baby",
                    "Beliebers",
                    "Canada"
                ]
            },
            {
                "topic": [
                    "Led Zeppelin",
                    "Zeppelin"
                ],
                "entries": [
                    "Jimmy Page",
                    "Stairway to Heaven",
                    "Hard Rock",
                    "John Bonham"
                ]
            },
            {
                "topic": [
                    "Queen",
                    "Bohemian Rhapsody"
                ],
                "entries": [
                    "Freddie Mercury",
                    "Brian May",
                    "Live Aid",
                    "We Will Rock You"
                ]
            },
            {
                "topic": [
                    "Miley Cyrus",
                    "Cyrus"
                ],
                "entries": [
                    "Hannah Montana",
                    "Wrecking Ball",
                    "Billy Ray",
                    "Bangerz"
                ]
            },
            {
                "topic": [
                    "Adele",
                    "21"
                ],
                "entries": [
                    "Rolling in the Deep",
                    "Someone Like You",
                    "Skyfall",
                    "London"
                ]
            },
            {
                "topic": [
                    "Coldplay",
                    "Chris Martin"
                ],
                "entries": [
                    "Yellow",
                    "Viva La Vida",
                    "Fix You",
                    "Head Full of Dreams"
                ]
            },
            {
                "topic": [
                    "U2",
                    "Bono"
                ],
                "entries": [
                    "The Joshua Tree",
                    "Dublin",
                    "With or Without You",
                    "Elevation"
                ]
            },
            {
                "topic": [
                    "Pink Floyd",
                    "Floyd"
                ],
                "entries": [
                    "Dark Side of the Moon",
                    "Roger Waters",
                    "The Wall",
                    "Psychedelic"
                ]
            },
            {
                "topic": [
                    "Nirvana",
                    "Kurt Cobain"
                ],
                "entries": [
                    "Seattle",
                    "Grunge",
                    "Smells Like Teen Spirit",
                    "Nevermind"
                ]
            },
            {
                "topic": [
                    "Bob Dylan",
                    "Dylan"
                ],
                "entries": [
                    "Like a Rolling Stone",
                    "Harmonica",
                    "Nobel Prize",
                    "Blowin' in the Wind"
                ]
            },
            {
                "topic": [
                    "Rihanna",
                    "Fenty"
                ],
                "entries": [
                    "Umbrella",
                    "Barbados",
                    "Diamonds",
                    "Savage X Fenty"
                ]
            },
            {
                "topic": [
                    "Bruno Mars",
                    "Mars"
                ],
                "entries": [
                    "Locked Out of Heaven",
                    "24K Magic",
                    "Silk Sonic",
                    "Grenade"
                ]
            },
            {
                "topic": [
                    "Lady Gaga",
                    "Gaga"
                ],
                "entries": [
                    "Poker Face",
                    "Born This Way",
                    "A Star is Born",
                    "The Fame"
                ]
            },
            {
                "topic": [
                    "Ed Sheeran",
                    "Sheeran"
                ],
                "entries": [
                    "Divide",
                    "Thinking Out Loud",
                    "Ginger Hair",
                    "Shape Of You"
                ]
            },
            {
                "topic": [
                    "Ariana Grande",
                    "Grande"
                ],
                "entries": [
                    "Thank U, Next",
                    "Dangerous Woman",
                    "Ponytail",
                    "High Note"
                ]
            },
            {
                "topic": [
                    "Fleetwood Mac",
                    "Fleetwood"
                ],
                "entries": [
                    "Stevie Nicks",
                    "Rumours",
                    "Go Your Own Way",
                    "The Chain"
                ]
            },
            {
                "topic": [
                    "AC/DC",
                    "Acca Dacca"
                ],
                "entries": [
                    "Angus Young",
                    "Back in Black",
                    "Thunderstruck",
                    "Australian Rock"
                ]
            },
            {
                "topic": [
                    "David Bowie",
                    "Ziggy Stardust"
                ],
                "entries": [
                    "Space Oddity",
                    "Changes",
                    "Let\u2019s Dance",
                    "The Thin White Duke"
                ]
            },
            {
                "topic": [
                    "Elton John",
                    "Rocketman"
                ],
                "entries": [
                    "Piano",
                    "Goodbye Yellow Brick Road",
                    "Kingsman",
                    "Tiny Dancer"
                ]
            },
            {
                "topic": [
                    "The Beach Boys",
                    "Beach Boys"
                ],
                "entries": [
                    "Brian Wilson",
                    "California Sound",
                    "Good Vibrations",
                    "Surfin' Safari"
                ]
            },
            {
                "topic": [
                    "Sia",
                    "Furler"
                ],
                "entries": [
                    "Chandelier",
                    "Elastic Heart",
                    "Maddie Ziegler",
                    "Australian Singer"
                ]
            },
            {
                "topic": [
                    "Shakira",
                    "Mebarak"
                ],
                "entries": [
                    "Hips Don't Lie",
                    "Barranquilla",
                    "Waka Waka (This Time for Africa)",
                    "Heritage"
                ]
            },
            {
                "topic": [
                    "Kanye West",
                    "Ye"
                ],
                "entries": [
                    "Stronger",
                    "Kim Kardashian",
                    "Yeezus",
                    "Fashion Line"
                ]
            },
            {
                "topic": [
                    "Jimi Hendrix",
                    "Hendrix"
                ],
                "entries": [
                    "Guitar God",
                    "Woodstock",
                    "Purple Haze",
                    "Hey Joe"
                ]
            },
            {
                "topic": [
                    "Britney Spears",
                    "Spears"
                ],
                "entries": [
                    "Baby One More Time",
                    "Toxic",
                    "Las Vegas Residency",
                    "Conservatorship"
                ]
            },
            {
                "topic": [
                    "Aerosmith",
                    "Smith"
                ],
                "entries": [
                    "Steven Tyler",
                    "Dream On",
                    "Boston",
                    "Walk This Way"
                ]
            },
            {
                "topic": [
                    "Prince",
                    "Paisley Park"
                ],
                "entries": [
                    "Purple Rain",
                    "Paisley Park",
                    "The Revolution",
                    "Minneapolis"
                ]
            },
            {
                "topic": [
                    "John Lennon",
                    "Lennon"
                ],
                "entries": [
                    "Imagine",
                    "Yoko Ono",
                    "Beatles",
                    "Peace Movement"
                ]
            },
            {
                "topic": [
                    "The Eagles",
                    "Eagles"
                ],
                "entries": [
                    "Hotel California",
                    "Joe Walsh",
                    "Don Henley",
                    "Desperado"
                ]
            },
            {
                "topic": [
                    "Eminem",
                    "Slim Shady"
                ],
                "entries": [
                    "Rap God",
                    "8 Mile",
                    "Detroit",
                    "Marshall Mathers"
                ]
            },
            {
                "topic": [
                    "Linkin Park",
                    "Park"
                ],
                "entries": [
                    "Chester Bennington",
                    "Hybrid Theory",
                    "Nu Metal",
                    "In the End"
                ]
            },
            {
                "topic": [
                    "Queen Latifah",
                    "Latifah"
                ],
                "entries": [
                    "U.N.I.T.Y.",
                    "Chicago",
                    "Hip-Hop",
                    "Royalty"
                ]
            },
            {
                "topic": [
                    "Celine Dion",
                    "Dion"
                ],
                "entries": [
                    "My Heart Will Go On",
                    "Las Vegas",
                    "Titanic",
                    "Vocal Range"
                ]
            },
            {
                "topic": [
                    "Metallica",
                    "Tallica"
                ],
                "entries": [
                    "James Hetfield",
                    "Thrash Metal",
                    "Enter Sandman",
                    "Black Album"
                ]
            },
            {
                "topic": [
                    "Cher",
                    "Sarkisian"
                ],
                "entries": [
                    "Goddess of Pop",
                    "Believe",
                    "Moonstruck",
                    "Sonny"
                ]
            },
            {
                "topic": [
                    "Maroon 5",
                    "Adam Levine"
                ],
                "entries": [
                    "Sugar",
                    "Moves Like Jagger",
                    "The Voice",
                    "California"
                ]
            },
            {
                "topic": [
                    "Whitney Houston",
                    "Houston"
                ],
                "entries": [
                    "I Will Always Love You",
                    "Bodyguard",
                    "Clive Davis",
                    "Newark"
                ]
            },
            {
                "topic": [
                    "Bon Jovi",
                    "Bon Jovie"
                ],
                "entries": [
                    "Livin' on a Prayer",
                    "Slippery When Wet",
                    "New Jersey",
                    "Richie Sambora"
                ]
            },
            {
                "topic": [
                    "Janet Jackson",
                    "Jackson"
                ],
                "entries": [
                    "Rhythm Nation",
                    "Together Again",
                    "Super Bowl",
                    "Velvet Rope"
                ]
            },
            {
                "topic": [
                    "Red Hot Chili Peppers",
                    "RHCP"
                ],
                "entries": [
                    "Flea",
                    "Californication",
                    "Under the Bridge",
                    "Anthony Kiedis"
                ]
            },
            {
                "topic": [
                    "Backstreet Boys",
                    "BSB"
                ],
                "entries": [
                    "Nick Carter",
                    "I Want It That Way",
                    "Pop Band",
                    "Millennium"
                ]
            },
            {
                "topic": [
                    "Alicia Keys",
                    "Keys"
                ],
                "entries": [
                    "Empire State of Mind",
                    "Falling",
                    "New York",
                    "The Voice"
                ]
            }
        ]
    },
    "musical_instrument": {
        "topics": [
            {
                "topic": [
                    "Piano",
                    "Grand Piano",
                    "Baby Grand"
                ],
                "entries": [
                    "Hammer Action",
                    "88 Keys",
                    "Pedals",
                    "Soundboard"
                ]
            },
            {
                "topic": [
                    "Guitar",
                    "Acoustic Guitar",
                    "Electric Guitar"
                ],
                "entries": [
                    "Strings",
                    "Fretboard",
                    "Amplifier",
                    "Pickups"
                ]
            },
            {
                "topic": [
                    "Drum",
                    "Drums",
                    "Drum Kit",
                    "Drum Set",
                    "Percussion Kit"
                ],
                "entries": [
                    "Snare Drum",
                    "Bass Drum",
                    "Cymbals",
                    "Hi-hat"
                ]
            },
            {
                "topic": [
                    "Violin",
                    "Fiddle",
                    "String Instrument"
                ],
                "entries": [
                    "Bow",
                    "Four Strings",
                    "Chin Rest",
                    "Symphony"
                ]
            },
            {
                "topic": [
                    "Flute",
                    "Concert Flute",
                    "Woodwind"
                ],
                "entries": [
                    "Embouchure",
                    "Keys",
                    "Mouthpiece",
                    "Orchestra"
                ]
            },
            {
                "topic": [
                    "Trumpet",
                    "Cornet",
                    "Horn"
                ],
                "entries": [
                    "Valves",
                    "Brass",
                    "Mouthpiece",
                    "Jazz"
                ]
            },
            {
                "topic": [
                    "Saxophone",
                    "Alto Sax",
                    "Tenor Sax"
                ],
                "entries": [
                    "Reed",
                    "Jazz",
                    "Curved Body",
                    "Keys"
                ]
            },
            {
                "topic": [
                    "Clarinet",
                    "Bass Clarinet",
                    "Woodwind"
                ],
                "entries": [
                    "Reed",
                    "Keys",
                    "Ebony Wood",
                    "Symphony"
                ]
            },
            {
                "topic": [
                    "Harp",
                    "Pedal Harp",
                    "Lever Harp"
                ],
                "entries": [
                    "Strings",
                    "Pedals",
                    "Orchestral",
                    "Arched Frame"
                ]
            },
            {
                "topic": [
                    "Cello",
                    "Violoncello",
                    "Bass Violin"
                ],
                "entries": [
                    "Pegbox",
                    "Bow",
                    "Endpin",
                    "Four Strings"
                ]
            },
            {
                "topic": [
                    "Trombone",
                    "Slide Trombone",
                    "Brass Instrument"
                ],
                "entries": [
                    "Slide",
                    "Bell",
                    "Brass",
                    "Orchestra"
                ]
            },
            {
                "topic": [
                    "Oboe",
                    "Hautboy",
                    "Woodwind"
                ],
                "entries": [
                    "Reed",
                    "Keys",
                    "Concerto",
                    "Double Reed"
                ]
            },
            {
                "topic": [
                    "Bassoon",
                    "Contrabassoon",
                    "Woodwind"
                ],
                "entries": [
                    "Reed",
                    "Keys",
                    "Double Reed",
                    "Orchestral"
                ]
            },
            {
                "topic": [
                    "Accordion",
                    "Concertina",
                    "Squeezebox"
                ],
                "entries": [
                    "Bellows",
                    "Keys",
                    "Folk Music",
                    "Portable"
                ]
            },
            {
                "topic": [
                    "Harmonica",
                    "Blues Harp",
                    "Mouth Organ"
                ],
                "entries": [
                    "Reed",
                    "Blues",
                    "Breath",
                    "Portable"
                ]
            },
            {
                "topic": [
                    "Marimba",
                    "Xylophone",
                    "Percussion"
                ],
                "entries": [
                    "Mallets",
                    "Wood Bars",
                    "Resonators",
                    "Orchestral"
                ]
            },
            {
                "topic": [
                    "Timpani",
                    "Kettle Drums",
                    "Percussion"
                ],
                "entries": [
                    "Pedals",
                    "Copper Bowls",
                    "Mallets",
                    "Orchestra"
                ]
            },
            {
                "topic": [
                    "Tuba",
                    "Sousaphone",
                    "Brass Instrument"
                ],
                "entries": [
                    "Valves",
                    "Brass",
                    "Large Bell",
                    "Orchestra"
                ]
            },
            {
                "topic": [
                    "Banjo",
                    "Five-String Banjo",
                    "Bluegrass Banjo"
                ],
                "entries": [
                    "Fretboard",
                    "Strings",
                    "Round Body",
                    "Country"
                ]
            },
            {
                "topic": [
                    "Mandolin",
                    "Lute",
                    "String Instrument"
                ],
                "entries": [
                    "Strings",
                    "Pick",
                    "Oval Body",
                    "Folk Music"
                ]
            },
            {
                "topic": [
                    "Organ",
                    "Pipe Organ",
                    "Electronic Organ"
                ],
                "entries": [
                    "Pedals",
                    "Pipes",
                    "Keyboard",
                    "Church"
                ]
            },
            {
                "topic": [
                    "Bagpipes",
                    "Highland Pipes",
                    "Scottish Pipes"
                ],
                "entries": [
                    "Scotland",
                    "Reed",
                    "Bag",
                    "Tradition"
                ]
            },
            {
                "topic": [
                    "Ukulele",
                    "Uke",
                    "Hawaiian Guitar"
                ],
                "entries": [
                    "Four Strings",
                    "Portable",
                    "Fingerstyle",
                    "Soprano"
                ]
            },
            {
                "topic": [
                    "Double Bass",
                    "Contrabass",
                    "Upright Bass"
                ],
                "entries": [
                    "Strings",
                    "Bow",
                    "Jazz",
                    "Orchestra"
                ]
            },
            {
                "topic": [
                    "Zither",
                    "Guzheng",
                    "Cithara"
                ],
                "entries": [
                    "Strings",
                    "Sound Box",
                    "Plucking",
                    "Folk Music"
                ]
            },
            {
                "topic": [
                    "Didgeridoo",
                    "Yidaki",
                    "Drone Pipe"
                ],
                "entries": [
                    "Drone",
                    "Circular Breathing",
                    "Indigenous",
                    "Timber"
                ]
            },
            {
                "topic": [
                    "Tambourine",
                    "Riq",
                    "Frame Drum"
                ],
                "entries": [
                    "Jingles",
                    "Percussion",
                    "Circular",
                    "Hand-held"
                ]
            },
            {
                "topic": [
                    "Theremin",
                    "Etherwave",
                    "Electronic Instrument"
                ],
                "entries": [
                    "Oscillator",
                    "Electromagnetic",
                    "Hands-free",
                    "Frequency"
                ]
            },
            {
                "topic": [
                    "Sitar",
                    "Veena",
                    "Indian Guitar"
                ],
                "entries": [
                    "Sympathetic Strings",
                    "Ravi Shankar",
                    "Gourd",
                    "Plucked"
                ]
            },
            {
                "topic": [
                    "Conga",
                    "Conga Drum",
                    "Tumbadora"
                ],
                "entries": [
                    "Cylindrical",
                    "Caribbean",
                    "Rhythm",
                    "Hand-played"
                ]
            },
            {
                "topic": [
                    "Bongo Drums",
                    "Bongos",
                    "Afro-Cuban Drums"
                ],
                "entries": [
                    "Pair",
                    "Pellets",
                    "Hand-played",
                    "Latin Music"
                ]
            },
            {
                "topic": [
                    "Djembe",
                    "Jembe",
                    "African Drum"
                ],
                "entries": [
                    "Rope-tuned",
                    "Hand-played",
                    "Goblet Shape",
                    "West African"
                ]
            },
            {
                "topic": [
                    "Lyre",
                    "Kithara",
                    "Ancient Greek Harp"
                ],
                "entries": [
                    "Tortoise Shell",
                    "Strings",
                    "Classical",
                    "Antiquity"
                ]
            }
        ]
    },
    "occupations": {
        "topics": [
            {
                "topic": [
                    "Chef",
                    "Cook"
                ],
                "entries": [
                    "Gourmet Meals",
                    "Culinary Skills",
                    "Menu Design",
                    "Food Preparation"
                ]
            },
            {
                "topic": [
                    "Teacher",
                    "Educator"
                ],
                "entries": [
                    "Lesson Plans",
                    "Classroom Management",
                    "Student Evaluation",
                    "Curriculum Development"
                ]
            },
            {
                "topic": [
                    "Electrician",
                    "Electrical Worker"
                ],
                "entries": [
                    "Wiring Systems",
                    "Circuit Breakers",
                    "Electrical Codes",
                    "Voltage Testing"
                ]
            },
            {
                "topic": [
                    "Lawyer",
                    "Attorney"
                ],
                "entries": [
                    "Legal Advice",
                    "Court Representation",
                    "Contract Drafting",
                    "Case Research"
                ]
            },
            {
                "topic": [
                    "Pilot",
                    "Aviator"
                ],
                "entries": [
                    "Flight Navigation",
                    "Aircraft Control",
                    "Takeoff Procedures",
                    "Safety Checks"
                ]
            },
            {
                "topic": [
                    "Plumber",
                    "Pipefitter"
                ],
                "entries": [
                    "Leak Repairs",
                    "Pipe Installation",
                    "Drain Cleaning",
                    "Fixture Replacement"
                ]
            },
            {
                "topic": [
                    "Nurse",
                    "Registered Nurse"
                ],
                "entries": [
                    "Patient Care",
                    "Medication Administration",
                    "Vital Signs Monitoring",
                    "Wound Dressing"
                ]
            },
            {
                "topic": [
                    "Architect",
                    "Building Designer"
                ],
                "entries": [
                    "Blueprint Design",
                    "Structural Planning",
                    "Space Utilization",
                    "Project Management"
                ]
            },
            {
                "topic": [
                    "Mechanic",
                    "Auto Technician"
                ],
                "entries": [
                    "Engine Repairs",
                    "Brake Systems",
                    "Oil Changes",
                    "Vehicle Diagnostics"
                ]
            },
            {
                "topic": [
                    "Scientist",
                    "Researcher"
                ],
                "entries": [
                    "Data Analysis",
                    "Experiment Design",
                    "Hypothesis Testing",
                    "Field Studies"
                ]
            },
            {
                "topic": [
                    "Firefighter",
                    "Fireman"
                ],
                "entries": [
                    "Fire Suppression",
                    "Rescue Operations",
                    "Safety Inspections",
                    "Emergency Response"
                ]
            },
            {
                "topic": [
                    "Journalist",
                    "Reporter"
                ],
                "entries": [
                    "News Reporting",
                    "Interviewing",
                    "Article Writing",
                    "Fact Checking"
                ]
            },
            {
                "topic": [
                    "Photographer",
                    "Photojournalist"
                ],
                "entries": [
                    "Image Composition",
                    "Lighting Techniques",
                    "Photo Editing",
                    "Event Coverage"
                ]
            },
            {
                "topic": [
                    "Accountant",
                    "CPA"
                ],
                "entries": [
                    "Financial Audits",
                    "Tax Preparation",
                    "Budget Analysis",
                    "Ledger Balancing"
                ]
            },
            {
                "topic": [
                    "Artist",
                    "Painter"
                ],
                "entries": [
                    "Canvas Painting",
                    "Sketching Techniques",
                    "Color Theory",
                    "Art Exhibitions"
                ]
            },
            {
                "topic": [
                    "Veterinarian",
                    "Animal Doctor"
                ],
                "entries": [
                    "Pet Surgery",
                    "Vaccinations",
                    "Disease Diagnosis",
                    "Animal Welfare"
                ]
            },
            {
                "topic": [
                    "Builder",
                    "Construction Worker"
                ],
                "entries": [
                    "Framework Erection",
                    "Concrete Pouring",
                    "Roof Installation",
                    "Safety Compliance"
                ]
            },
            {
                "topic": [
                    "Software Developer",
                    "Programmer"
                ],
                "entries": [
                    "Code Writing",
                    "System Debugging",
                    "App Development",
                    "Software Testing"
                ]
            },
            {
                "topic": [
                    "Bartender",
                    "Mixologist"
                ],
                "entries": [
                    "Cocktail Mixing",
                    "Customer Service",
                    "Bar Hygiene",
                    "Wine Knowledge"
                ]
            },
            {
                "topic": [
                    "Librarian",
                    "Library Science"
                ],
                "entries": [
                    "Cataloging Books",
                    "Reader Assistance",
                    "Collection Management",
                    "Literacy Programs"
                ]
            },
            {
                "topic": [
                    "Psychologist",
                    "Therapist"
                ],
                "entries": [
                    "Patient Counseling",
                    "Behavioral Assessment",
                    "Therapeutic Techniques",
                    "Psychometric Testing"
                ]
            },
            {
                "topic": [
                    "Florist",
                    "Flower Arranger"
                ],
                "entries": [
                    "Bouquet Design",
                    "Plant Care",
                    "Floral Arrangements",
                    "Event Decor"
                ]
            },
            {
                "topic": [
                    "Carpenter",
                    "Joiner"
                ],
                "entries": [
                    "Woodworking",
                    "Furniture Building",
                    "Cabinet Installation",
                    "Bespoke Joinery"
                ]
            },
            {
                "topic": [
                    "Taxi Driver",
                    "Cab Driver"
                ],
                "entries": [
                    "City Navigation",
                    "Passenger Safety",
                    "Fare Collection",
                    "Road Knowledge"
                ]
            },
            {
                "topic": [
                    "Lifeguard",
                    "Beach Rescue"
                ],
                "entries": [
                    "Pool Surveillance",
                    "Emergency First Aid",
                    "Water Rescues",
                    "Safety Protocols"
                ]
            },
            {
                "topic": [
                    "Farmer",
                    "Agronomist"
                ],
                "entries": [
                    "Crop Cultivation",
                    "Livestock Rearing",
                    "Soil Fertility",
                    "Harvest Management"
                ]
            },
            {
                "topic": [
                    "Banker",
                    "Finance Officer"
                ],
                "entries": [
                    "Investment Advice",
                    "Loan Processing",
                    "Account Management",
                    "Risk Assessment"
                ]
            },
            {
                "topic": [
                    "Meteorologist",
                    "Weather Forecaster"
                ],
                "entries": [
                    "Climate Analysis",
                    "Weather Prediction",
                    "Storm Tracking",
                    "Data Collection"
                ]
            },
            {
                "topic": [
                    "Dentist",
                    "Dental Practitioner"
                ],
                "entries": [
                    "Oral Hygiene",
                    "Prosthodontics",
                    "Periodontics",
                    "Dental Surgery"
                ]
            },
            {
                "topic": [
                    "Physician",
                    "Doctor"
                ],
                "entries": [
                    "Medical Examination",
                    "Diagnosis Development",
                    "Patient Consultation",
                    "Treatment Plans"
                ]
            },
            {
                "topic": [
                    "Tailor",
                    "Dressmaker"
                ],
                "entries": [
                    "Garment Construction",
                    "Pattern Fitting",
                    "Fabric Selection",
                    "Costume Design"
                ]
            },
            {
                "topic": [
                    "Barista",
                    "Coffee Specialist"
                ],
                "entries": [
                    "Espresso Making",
                    "Latte Art",
                    "Customer Service",
                    "Caf\u00e9 Maintenance"
                ]
            },
            {
                "topic": [
                    "Paramedic",
                    "EMT"
                ],
                "entries": [
                    "Emergency Response",
                    "Trauma Care",
                    "Patient Transport",
                    "Life-Saving Skills"
                ]
            }
        ]
    },
    "persons": {
        "topics": [
            {
                "topic": [
                    "Albert Einstein",
                    "Einstein"
                ],
                "entries": [
                    "Theory of relativity",
                    "Physicist",
                    "E=mc^2",
                    "Nobel Prize"
                ]
            },
            {
                "topic": [
                    "Queen Elizabeth II",
                    "Queen Elizabeth",
                    "Elizabeth",
                    "Elizabeth II"
                ],
                "entries": [
                    "British monarchy",
                    "Longest reigning",
                    "Commonwealth",
                    "Royal duties"
                ]
            },
            {
                "topic": [
                    "Steve Jobs",
                    "Jobs"
                ],
                "entries": [
                    "Apple co-founder",
                    "iPhone",
                    "Innovative design",
                    "Pixar"
                ]
            },
            {
                "topic": [
                    "Mona Lisa",
                    "La Gioconda"
                ],
                "entries": [
                    "Leonardo da Vinci",
                    "Louvre",
                    "Renaissance",
                    "Mysterious smile"
                ]
            },
            {
                "topic": [
                    "Walt Disney",
                    "Disney"
                ],
                "entries": [
                    "Mickey Mouse",
                    "Animation",
                    "Theme parks",
                    "Fantasy"
                ]
            },
            {
                "topic": [
                    "Nelson Mandela",
                    "Mandela"
                ],
                "entries": [
                    "Apartheid",
                    "South Africa",
                    "Nobel Peace Prize",
                    "Presidency"
                ]
            },
            {
                "topic": [
                    "Coca-Cola",
                    "Coke"
                ],
                "entries": [
                    "Soft drink",
                    "Atlanta",
                    "Red label",
                    "Soda"
                ]
            },
            {
                "topic": [
                    "Shakespeare",
                    "William Shakespeare"
                ],
                "entries": [
                    "Playwright",
                    "Stratford-upon-Avon",
                    "Hamlet",
                    "Elizabethan England"
                ]
            },
            {
                "topic": [
                    "Mahatma Gandhi",
                    "Gandhi"
                ],
                "entries": [
                    "Nonviolence",
                    "India",
                    "Salt March",
                    "Independence"
                ]
            },
            {
                "topic": [
                    "Frida Kahlo",
                    "Kahlo"
                ],
                "entries": [
                    "Self-portraits",
                    "Mexico",
                    "Surrealism",
                    "Pain"
                ]
            },
            {
                "topic": [
                    "Mother Teresa",
                    "Teresa"
                ],
                "entries": [
                    "Calcutta",
                    "Missionaries of Charity",
                    "Nobel Peace Prize",
                    "Saint"
                ]
            },
            {
                "topic": [
                    "Microsoft",
                    "Micro-Soft"
                ],
                "entries": [
                    "Windows",
                    "Bill Gates",
                    "Software",
                    "Redmond"
                ]
            },
            {
                "topic": [
                    "Vincent van Gogh",
                    "Van Gogh"
                ],
                "entries": [
                    "Starry Night",
                    "Post-Impressionism",
                    "Dutch",
                    "Ear incident"
                ]
            },
            {
                "topic": [
                    "Harvard University",
                    "Harvard"
                ],
                "entries": [
                    "Ivy League",
                    "Cambridge, MA",
                    "Research",
                    "Founded 1636"
                ]
            },
            {
                "topic": [
                    "Pablo Picasso",
                    "Picasso"
                ],
                "entries": [
                    "Cubism",
                    "Blue Period",
                    "Guernica",
                    "Spanish"
                ]
            },
            {
                "topic": [
                    "Marie Curie",
                    "Curie"
                ],
                "entries": [
                    "Radioactivity",
                    "Nobel Laureate",
                    "Poland",
                    "Physics"
                ]
            },
            {
                "topic": [
                    "Lionel Messi",
                    "Messi"
                ],
                "entries": [
                    "Barcelona",
                    "Argentina",
                    "Goalscorer",
                    "Ballon d'Or"
                ]
            },
            {
                "topic": [
                    "The Louvre",
                    "Louvre Museum"
                ],
                "entries": [
                    "Paris",
                    "Art museum",
                    "Glass pyramid",
                    "Mona Lisa"
                ]
            },
            {
                "topic": [
                    "Amelia Earhart",
                    "Earhart"
                ],
                "entries": [
                    "Aviatrix",
                    "Disappearance",
                    "Transatlantic flight",
                    "Pioneering"
                ]
            },
            {
                "topic": [
                    "Tesla",
                    "Nikola Tesla"
                ],
                "entries": [
                    "Alternating current",
                    "Inventor",
                    "Eccentric genius",
                    "Electricity"
                ]
            },
            {
                "topic": [
                    "Mozart",
                    "Wolfgang Amadeus Mozart"
                ],
                "entries": [
                    "Composer",
                    "Classical",
                    "Symphony",
                    "Viennese"
                ]
            },
            {
                "topic": [
                    "The White House",
                    "Whitehouse"
                ],
                "entries": [
                    "Oval Office",
                    "President's residence",
                    "Washington, D.C.",
                    "Historic"
                ]
            },
            {
                "topic": [
                    "Florence Nightingale",
                    "Nightingale"
                ],
                "entries": [
                    "Nursing",
                    "Crimean War",
                    "Statistical work",
                    "Victorian England"
                ]
            },
            {
                "topic": [
                    "Barack Obama",
                    "Obama"
                ],
                "entries": [
                    "44th President",
                    "Affordable Care Act",
                    "Nobel Peace Prize",
                    "Change"
                ]
            },
            {
                "topic": [
                    "Harry Potter",
                    "Potter"
                ],
                "entries": [
                    "J.K. Rowling",
                    "Wizard",
                    "Hogwarts",
                    "Magic"
                ]
            },
            {
                "topic": [
                    "Jane Austen",
                    "Austen"
                ],
                "entries": [
                    "Pride and Prejudice",
                    "Novelist",
                    "Regency",
                    "Social commentary"
                ]
            },
            {
                "topic": [
                    "Mickey Mouse",
                    "Mickey"
                ],
                "entries": [
                    "Disney",
                    "Animated",
                    "Iconic ears",
                    "Steamboat Willie"
                ]
            },
            {
                "topic": [
                    "Muhammad Ali",
                    "Ali"
                ],
                "entries": [
                    "Boxer",
                    "Float like a butterfly",
                    "Heavyweight champion",
                    "Olympic gold"
                ]
            },
            {
                "topic": [
                    "Julius Caesar",
                    "Caesar"
                ],
                "entries": [
                    "Roman leader",
                    "Dictator",
                    "Assassination",
                    "Gallic War"
                ]
            },
            {
                "topic": [
                    "Harper Lee",
                    "Lee"
                ],
                "entries": [
                    "To Kill a Mockingbird",
                    "Alabama",
                    "Pulitzer Prize",
                    "Reclusive"
                ]
            },
            {
                "topic": [
                    "Stephen Hawking",
                    "Hawking"
                ],
                "entries": [
                    "Black holes",
                    "Theoretical physicist",
                    "ALS",
                    "Cosmology"
                ]
            },
            {
                "topic": [
                    "Napoleon Bonaparte",
                    "Napoleon"
                ],
                "entries": [
                    "Emperor",
                    "French Revolution",
                    "Waterloo",
                    "Corsica"
                ]
            },
            {
                "topic": [
                    "Thomas Edison",
                    "Edison"
                ],
                "entries": [
                    "Light bulb",
                    "Inventor",
                    "Menlo Park",
                    "Phonograph"
                ]
            },
            {
                "topic": [
                    "Coco Chanel",
                    "Chanel"
                ],
                "entries": [
                    "Fashion designer",
                    "Chanel No. 5",
                    "Little black dress",
                    "Paris"
                ]
            },
            {
                "topic": [
                    "Galileo Galilei",
                    "Galileo"
                ],
                "entries": [
                    "Astronomy",
                    "Telescope",
                    "Heliocentrism",
                    "Italian"
                ]
            },
            {
                "topic": [
                    "Michael Jordan",
                    "Jordan"
                ],
                "entries": [
                    "Basketball",
                    "Chicago Bulls",
                    "Air",
                    "23"
                ]
            },
            {
                "topic": [
                    "F. Scott Fitzgerald",
                    "Fitzgerald"
                ],
                "entries": [
                    "The Great Gatsby",
                    "Jazz Age",
                    "American author",
                    "Roaring Twenties"
                ]
            },
            {
                "topic": [
                    "Charles Darwin",
                    "Darwin"
                ],
                "entries": [
                    "Evolution",
                    "Natural selection",
                    "Galapagos Islands",
                    "Origin of species"
                ]
            },
            {
                "topic": [
                    "Elon Musk",
                    "Musk"
                ],
                "entries": [
                    "Tesla",
                    "SpaceX",
                    "Entrepreneur",
                    "Innovation"
                ]
            },
            {
                "topic": [
                    "Beethoven",
                    "Ludwig van Beethoven"
                ],
                "entries": [
                    "Composer",
                    "Symphonies",
                    "Deafness",
                    "Classical"
                ]
            },
            {
                "topic": [
                    "Cleopatra",
                    "Cleopatra VII"
                ],
                "entries": [
                    "Egypt",
                    "Julius Caesar",
                    "Mark Antony",
                    "Queen"
                ]
            },
            {
                "topic": [
                    "Ernest Hemingway",
                    "Hemingway"
                ],
                "entries": [
                    "The Old Man and the Sea",
                    "War correspondent",
                    "Nobel Prize",
                    "Writing style"
                ]
            },
            {
                "topic": [
                    "Marilyn Monroe",
                    "Monroe"
                ],
                "entries": [
                    "Hollywood icon",
                    "Blonde bombshell",
                    "Diamonds",
                    "The Seven Year Itch"
                ]
            },
            {
                "topic": [
                    "Charles Dickens",
                    "Dickens"
                ],
                "entries": [
                    "Oliver Twist",
                    "Victorian London",
                    "Social commentary",
                    "Serial publications"
                ]
            },
            {
                "topic": [
                    "Martin Luther King Jr.",
                    "MLK"
                ],
                "entries": [
                    "Civil rights",
                    "I Have a Dream",
                    "Montgomery Bus Boycott",
                    "Nobel Peace Prize"
                ]
            },
            {
                "topic": [
                    "Alexander the Great",
                    "Alexander"
                ],
                "entries": [
                    "Macedonian empire",
                    "Conqueror",
                    "Aristotle",
                    "Battle of Gaugamela"
                ]
            }
        ]
    },
    "places": {
        "topics": [
            {
                "topic": [
                    "Eiffel Tower",
                    "Tour Eiffel",
                    "Eiffel"
                ],
                "entries": [
                    "Iron lattice",
                    "Paris",
                    "Gustave Eiffel",
                    "Romantic"
                ]
            },
            {
                "topic": [
                    "Statue of Liberty",
                    "Lady Liberty",
                    "Liberty Enlightening the World"
                ],
                "entries": [
                    "New York",
                    "Gift from France",
                    "Ellis Island",
                    "Torch"
                ]
            },
            {
                "topic": [
                    "Great Wall of China",
                    "Changcheng",
                    "The Great Wall"
                ],
                "entries": [
                    "Ming Dynasty",
                    "Brick",
                    "Northern China",
                    "Dragon"
                ]
            },
            {
                "topic": [
                    "Pyramids of Giza",
                    "Giza Pyramids",
                    "Pyramids"
                ],
                "entries": [
                    "Egypt",
                    "Ancient Tombs",
                    "Pharaohs",
                    "Sphinx"
                ]
            },
            {
                "topic": [
                    "Machu Picchu",
                    "Old Peak",
                    "Machu"
                ],
                "entries": [
                    "Inca City",
                    "Andes Mountains",
                    "Peru",
                    "Lost City"
                ]
            },
            {
                "topic": [
                    "Big Ben",
                    "Clock Tower",
                    "Elizabeth Tower"
                ],
                "entries": [
                    "London",
                    "Westminster",
                    "Great Bell",
                    "Time"
                ]
            },
            {
                "topic": [
                    "Taj Mahal",
                    "Crown of Palaces",
                    "Taj"
                ],
                "entries": [
                    "India",
                    "Marble",
                    "Mughal Emperor",
                    "Love"
                ]
            },
            {
                "topic": [
                    "Colosseum",
                    "Flavian Amphitheatre",
                    "Roman Colosseum"
                ],
                "entries": [
                    "Rome",
                    "Gladiators",
                    "Ancient Arena",
                    "Italy"
                ]
            },
            {
                "topic": [
                    "Christ the Redeemer",
                    "Cristo Redentor",
                    "Redeemer Statue"
                ],
                "entries": [
                    "Rio de Janeiro",
                    "Brazil",
                    "Corcovado Mountain",
                    "Iconic"
                ]
            },
            {
                "topic": [
                    "Grand Canyon",
                    "Great Canyon",
                    "The Canyon"
                ],
                "entries": [
                    "Arizona",
                    "Erosion",
                    "River Carving",
                    "Hiking"
                ]
            },
            {
                "topic": [
                    "Empire State Building",
                    "Empire State",
                    "New York Landmark"
                ],
                "entries": [
                    "Skyscraper",
                    "Manhattan",
                    "Observation Deck",
                    "Art Deco"
                ]
            },
            {
                "topic": [
                    "Mount Everest",
                    "Everest",
                    "Sagarmatha"
                ],
                "entries": [
                    "Highest Peak",
                    "Himalayas",
                    "Nepal",
                    "Climbers"
                ]
            },
            {
                "topic": [
                    "Stonehenge",
                    "Stone Circle",
                    "Henge"
                ],
                "entries": [
                    "Wiltshire",
                    "Prehistoric Monument",
                    "Megalithic",
                    "Astronomy"
                ]
            },
            {
                "topic": [
                    "Niagara Falls",
                    "Niagara",
                    "Horseshoe Falls"
                ],
                "entries": [
                    "Waterfall",
                    "Canada",
                    "Hydropower",
                    "Tourist"
                ]
            },
            {
                "topic": [
                    "Buckingham Palace",
                    "Buckingham",
                    "The Queen's Palace"
                ],
                "entries": [
                    "Royal Residence",
                    "Changing Guard",
                    "London",
                    "Monarchy"
                ]
            },
            {
                "topic": [
                    "Golden Gate Bridge",
                    "Golden Gate",
                    "San Francisco Bridge"
                ],
                "entries": [
                    "Suspension Bridge",
                    "San Francisco",
                    "Orange",
                    "Fog"
                ]
            },
            {
                "topic": [
                    "The Louvre",
                    "Louvre",
                    "The Louvre Museum"
                ],
                "entries": [
                    "Art",
                    "Mona Lisa",
                    "Paris",
                    "Glass Pyramid"
                ]
            },
            {
                "topic": [
                    "Acropolis",
                    "Acropolis of Athens",
                    "Sacred Rock"
                ],
                "entries": [
                    "Parthenon",
                    "Greece",
                    "Ancient Citadel",
                    "Athens"
                ]
            },
            {
                "topic": [
                    "Burj Khalifa",
                    "Khalifa Tower",
                    "Burj"
                ],
                "entries": [
                    "Tallest Building",
                    "Dubai",
                    "Skyscraper",
                    "Observation Deck"
                ]
            },
            {
                "topic": [
                    "Space Needle",
                    "Seattle Space Needle",
                    "Needle"
                ],
                "entries": [
                    "Seattle",
                    "Observation",
                    "Futuristic Design",
                    "Revolving Restaurant"
                ]
            },
            {
                "topic": [
                    "Vatican City",
                    "Vatican",
                    "Holy See"
                ],
                "entries": [
                    "Papal Authority",
                    "Rome",
                    "Catholicism",
                    "Sistine Chapel"
                ]
            },
            {
                "topic": [
                    "Berlin Wall",
                    "Wall of Berlin",
                    "Die Berliner Mauer"
                ],
                "entries": [
                    "Cold War",
                    "Germany",
                    "Division",
                    "Historical"
                ]
            },
            {
                "topic": [
                    "Alcatraz Island",
                    "Alcatraz",
                    "The Rock"
                ],
                "entries": [
                    "Prison",
                    "Escape Attempts",
                    "San Francisco",
                    "Tourist Attraction"
                ]
            },
            {
                "topic": [
                    "Tower of Pisa",
                    "Leaning Tower of Pisa",
                    "Pisa Tower"
                ],
                "entries": [
                    "Lean",
                    "Italy",
                    "White Marble",
                    "Bell Tower"
                ]
            },
            {
                "topic": [
                    "Mount Fuji",
                    "Fuji Mountain",
                    "Fuji-san"
                ],
                "entries": [
                    "Japan",
                    "Sacred Volcano",
                    "Cherry Blossom",
                    "Mountain Climbing"
                ]
            },
            {
                "topic": [
                    "Hollywood Sign",
                    "Hollywood Hills Sign",
                    "The Sign"
                ],
                "entries": [
                    "Los Angeles",
                    "Cinema",
                    "Iconic Letters",
                    "Mount Lee"
                ]
            },
            {
                "topic": [
                    "Forbidden City",
                    "Palace Museum",
                    "Imperial Palace"
                ],
                "entries": [
                    "Beijing",
                    "China",
                    "Ming Dynasty",
                    "Ancient"
                ]
            },
            {
                "topic": [
                    "Petra",
                    "Rose City",
                    "Petra of Jordan"
                ],
                "entries": [
                    "Sandstone Facade",
                    "Jordan",
                    "Archaeological",
                    "Treasury"
                ]
            },
            {
                "topic": [
                    "The Sagrada Familia",
                    "Sagrada Familia",
                    "Basilica of the Holy Family"
                ],
                "entries": [
                    "Barcelona",
                    "Gaudi",
                    "Unfinished",
                    "Cathedral"
                ]
            },
            {
                "topic": [
                    "Great Barrier Reef",
                    "The Reef",
                    "Great Reef"
                ],
                "entries": [
                    "Coral",
                    "Australia",
                    "Marine Life",
                    "Diving"
                ]
            },
            {
                "topic": [
                    "Red Square",
                    "Krasnaya Ploshchad",
                    "Main Square"
                ],
                "entries": [
                    "Moscow",
                    "Kremlin",
                    "Russia",
                    "Historical Importance"
                ]
            },
            {
                "topic": [
                    "Lascaux Caves",
                    "Lascaux",
                    "Prehistoric Caves"
                ],
                "entries": [
                    "Cave Paintings",
                    "France",
                    "Prehistoric Art",
                    "Animals"
                ]
            },
            {
                "topic": [
                    "Matterhorn",
                    "Monte Cervino",
                    "Cervino"
                ],
                "entries": [
                    "Alps",
                    "Switzerland",
                    "Iconic Mountain",
                    "Climbing"
                ]
            },
            {
                "topic": [
                    "Moai Statues",
                    "Moai",
                    "Easter Island Heads"
                ],
                "entries": [
                    "Easter Island",
                    "Rapa Nui",
                    "Monolithic",
                    "Stone Figures"
                ]
            },
            {
                "topic": [
                    "Wailing Wall",
                    "Western Wall",
                    "HaKotel"
                ],
                "entries": [
                    "Jerusalem",
                    "Judaism",
                    "Prayer",
                    "Historic"
                ]
            },
            {
                "topic": [
                    "Santorini",
                    "Thira",
                    "Santorini Island"
                ],
                "entries": [
                    "Greek Islands",
                    "White Buildings",
                    "Volcanic Eruption",
                    "Tourism"
                ]
            },
            {
                "topic": [
                    "Chichen Itza",
                    "Maya Ruins",
                    "El Castillo"
                ],
                "entries": [
                    "Mexico",
                    "Pyramid",
                    "Mayan Civilization",
                    "Ancient Cities"
                ]
            },
            {
                "topic": [
                    "London Eye",
                    "Millennium Wheel",
                    "Observation Wheel"
                ],
                "entries": [
                    "Ferris Wheel",
                    "River Thames",
                    "Panoramic Views",
                    "Tourist Attraction"
                ]
            },
            {
                "topic": [
                    "Edinburgh Castle",
                    "Castle Rock",
                    "Edinburgh Fortress"
                ],
                "entries": [
                    "Scotland",
                    "Royal Residence",
                    "Historic Fortress",
                    "Tourism"
                ]
            },
            {
                "topic": [
                    "Times Square",
                    "The Crossroads of the World",
                    "New York City Square"
                ],
                "entries": [
                    "Bright Lights",
                    "Broadway",
                    "Entertainment",
                    "Tourism"
                ]
            },
            {
                "topic": [
                    "Angkor Wat",
                    "Angkor",
                    "Wat Arun"
                ],
                "entries": [
                    "Cambodia",
                    "Khmer Empire",
                    "Temple Complex",
                    "Religion"
                ]
            },
            {
                "topic": [
                    "Uluru",
                    "Ayers Rock",
                    "Sacred Rock"
                ],
                "entries": [
                    "Australia",
                    "Monolith",
                    "Aboriginal Culture",
                    "Red Sandstone"
                ]
            },
            {
                "topic": [
                    "Brandenburg Gate",
                    "Brandenburger Tor",
                    "Berlin Gate"
                ],
                "entries": [
                    "Berlin",
                    "Neoclassical",
                    "Quadriga",
                    "Reunification"
                ]
            },
            {
                "topic": [
                    "Blue Mosque",
                    "Sultan Ahmed Mosque",
                    "Sultan Ahmed"
                ],
                "entries": [
                    "Istanbul",
                    "Domes",
                    "Islamic Architecture",
                    "Sultan"
                ]
            },
            {
                "topic": [
                    "Serengeti",
                    "Serengeti National Park",
                    "Endless Plains"
                ],
                "entries": [
                    "Tanzania",
                    "Wildlife Safari",
                    "Wildebeest Migration",
                    "Park"
                ]
            },
            {
                "topic": [
                    "Victoria Falls",
                    "Mosi-oa-Tunya",
                    "The Smoke That Thunders"
                ],
                "entries": [
                    "Zimbabwe",
                    "Waterfall",
                    "Africa",
                    "Tourism"
                ]
            }
        ]
    },
    "space": {
        "topics": [
            {
                "topic": [
                    "Moon",
                    "Lunar Body",
                    "The Moon"
                ],
                "entries": [
                    "Craters",
                    "Phases",
                    "Apollo Missions",
                    "Tides"
                ]
            },
            {
                "topic": [
                    "Milky Way",
                    "The Milky Way",
                    "Galaxy",
                    "The Galaxy"
                ],
                "entries": [
                    "Spiral Arms",
                    "100 Billion Stars",
                    "Solar System",
                    "Sagittarius A*"
                ]
            },
            {
                "topic": [
                    "Mars",
                    "Red Planet"
                ],
                "entries": [
                    "Olympus Mons",
                    "Iron Oxide",
                    "Curiosity Rover",
                    "Polar Ice Caps"
                ]
            },
            {
                "topic": [
                    "Black Hole",
                    "A Black Hole",
                    "Singularity"
                ],
                "entries": [
                    "Event Horizon",
                    "Gravitational Pull",
                    "Hawking Radiation",
                    "Inescapable"
                ]
            },
            {
                "topic": [
                    "Saturn",
                    "Ringed Planet"
                ],
                "entries": [
                    "Gas Giant",
                    "Hexagon Storm",
                    "Cassini Division",
                    "Titan Moon"
                ]
            },
            {
                "topic": [
                    "Comet",
                    "A Comet",
                    "Icy Tail"
                ],
                "entries": [
                    "Elliptical Orbit",
                    "Halo",
                    "Coma",
                    "Dust Trail"
                ]
            },
            {
                "topic": [
                    "Sun",
                    "The Sun",
                    "Solar Star"
                ],
                "entries": [
                    "Fusion",
                    "Heliosphere",
                    "Solar Flares",
                    "Sunspots"
                ]
            },
            {
                "topic": [
                    "Andromeda Galaxy",
                    "Andromeda",
                    "M31"
                ],
                "entries": [
                    "Nearest Galaxy",
                    "Spiral",
                    "Blue Shift",
                    "Collision Course"
                ]
            },
            {
                "topic": [
                    "Jupiter",
                    "Gas Giant"
                ],
                "entries": [
                    "Great Red Spot",
                    "Galilean Moons",
                    "Cyclonic Storms",
                    "Largest Volume"
                ]
            },
            {
                "topic": [
                    "Neptune",
                    "Blue Planet"
                ],
                "entries": [
                    "Triton",
                    "Methane Atmosphere",
                    "Great Dark Spot",
                    "Strongest Winds"
                ]
            },
            {
                "topic": [
                    "Venus",
                    "Morning Star"
                ],
                "entries": [
                    "Acidic Clouds",
                    "Retrograde Rotation",
                    "Hottest Planet",
                    "Volcanic Plains"
                ]
            },
            {
                "topic": [
                    "Space Shuttle",
                    "Orbiter"
                ],
                "entries": [
                    "Reusable",
                    "Columbia",
                    "Heat Shields",
                    "Payload Bay"
                ]
            },
            {
                "topic": [
                    "Satellite"
                ],
                "entries": [
                    "Communication",
                    "Weather Monitoring",
                    "Orbital Craft",
                    "GPS"
                ]
            },
            {
                "topic": [
                    "Mercury",
                    "Swift Planet"
                ],
                "entries": [
                    "Closest to Sun",
                    "Cratered Surface",
                    "No Atmosphere",
                    "Extreme Temperatures"
                ]
            },
            {
                "topic": [
                    "Pluto"
                ],
                "entries": [
                    "Kuiper Belt",
                    "New Horizons",
                    "Ice-Covered",
                    "Dwarf Planet"
                ]
            },
            {
                "topic": [
                    "International Space Station",
                    "ISS",
                    "Space Station",
                    "Orbital Lab"
                ],
                "entries": [
                    "American-Russian Collaboration",
                    "Zero Gravity",
                    "Research",
                    "Crew Habitation"
                ]
            },
            {
                "topic": [
                    "Solar Eclipse",
                    "Eclipse"
                ],
                "entries": [
                    "Lunar Occultation",
                    "Totality",
                    "Diamond Ring Effect",
                    "Sun Obscured"
                ]
            },
            {
                "topic": [
                    "Gravity",
                    "Gravitational Force"
                ],
                "entries": [
                    "Isaac Newton",
                    "Tidal Forces",
                    "Mass Attraction",
                    "Weight"
                ]
            },
            {
                "topic": [
                    "Uranus"
                ],
                "entries": [
                    "Ice Giant",
                    "Frozen Clouds",
                    "Methane Blue",
                    "Rings"
                ]
            },
            {
                "topic": [
                    "Constellation",
                    "Star Pattern"
                ],
                "entries": [
                    "Celestial Figures",
                    "Orion",
                    "Zodiac Signs",
                    "Astronomical Charts"
                ]
            },
            {
                "topic": [
                    "Telescope",
                    "Observatory Device"
                ],
                "entries": [
                    "Galileo",
                    "Optical Lens",
                    "Star Gazing",
                    "Magnification"
                ]
            },
            {
                "topic": [
                    "Rover",
                    "Mars Buggy"
                ],
                "entries": [
                    "Remote Control",
                    "Laboratory Tools",
                    "Martian Terrain",
                    "Solar Panels"
                ]
            },
            {
                "topic": [
                    "Big Bang",
                    "Cosmic Expansion"
                ],
                "entries": [
                    "Origin of Universe",
                    "Space-Time",
                    "Cosmic Microwave Background",
                    "Singular Event"
                ]
            },
            {
                "topic": [
                    "Apollo Program",
                    "Lunar Mission"
                ],
                "entries": [
                    "Moon Landing",
                    "Neil Armstrong",
                    "Saturn V",
                    "Eagle Has Landed"
                ]
            }
        ]
    },
    "sports_games": {
        "topics": [
            {
                "topic": [
                    "Soccer",
                    "Football",
                    "Association Football"
                ],
                "entries": [
                    "Goalkeeper",
                    "Penalty Kick",
                    "Offside Rule",
                    "World Cup"
                ]
            },
            {
                "topic": [
                    "Chess",
                    "Chess Game"
                ],
                "entries": [
                    "Board Game",
                    "Knights",
                    "Bishops",
                    "Checkmate"
                ]
            },
            {
                "topic": [
                    "Ice Hockey",
                    "Hockey",
                    "Puck Hockey"
                ],
                "entries": [
                    "Puck",
                    "Penalty Box",
                    "Faceoff",
                    "Stick Handling"
                ]
            },
            {
                "topic": [
                    "Tennis",
                    "Lawn Tennis",
                    "Court Tennis"
                ],
                "entries": [
                    "Grand Slam",
                    "Racket",
                    "Deuce",
                    "Baseline"
                ]
            },
            {
                "topic": [
                    "Cricket",
                    "Cricket Match",
                    "Pitch Cricket"
                ],
                "entries": [
                    "Wickets",
                    "Batsman",
                    "Innings",
                    "Bowler"
                ]
            },
            {
                "topic": [
                    "Basketball",
                    "Hoops",
                    "Basketball Game"
                ],
                "entries": [
                    "Dribbling",
                    "Dunk",
                    "Three-pointer",
                    "Shot Clock"
                ]
            },
            {
                "topic": [
                    "Baseball",
                    "Ballgame",
                    "Hardball"
                ],
                "entries": [
                    "Bat",
                    "Curveball",
                    "Dugout",
                    "Umpire"
                ]
            },
            {
                "topic": [
                    "American Football",
                    "Gridiron",
                    "NFL Football"
                ],
                "entries": [
                    "Touchdown",
                    "Quarterback",
                    "End Zone",
                    "Linebacker"
                ]
            },
            {
                "topic": [
                    "Golf",
                    "Links",
                    "Golfing"
                ],
                "entries": [
                    "Tee",
                    "Birdie",
                    "Caddie",
                    "Fairway"
                ]
            },
            {
                "topic": [
                    "Swimming",
                    "Aquatic Sport",
                    "Swim Racing"
                ],
                "entries": [
                    "Freestyle",
                    "Backstroke",
                    "Lanes",
                    "Flip Turn"
                ]
            },
            {
                "topic": [
                    "Rugby",
                    "Rugger",
                    "Rugby Union"
                ],
                "entries": [
                    "Scrum",
                    "Conversion",
                    "Try",
                    "Tackle"
                ]
            },
            {
                "topic": [
                    "Boxing",
                    "Prizefighting",
                    "Ring Sport"
                ],
                "entries": [
                    "Heavyweight",
                    "Uppercut",
                    "Knockout",
                    "Ring"
                ]
            },
            {
                "topic": [
                    "Fencing",
                    "Sword Fighting",
                    "Foil Sport"
                ],
                "entries": [
                    "Epee",
                    "Parry",
                    "Riposte",
                    "Lunge"
                ]
            },
            {
                "topic": [
                    "Table Tennis",
                    "Ping Pong",
                    "Whiff Waff"
                ],
                "entries": [
                    "Paddle",
                    "Serve",
                    "Rally",
                    "Net"
                ]
            },
            {
                "topic": [
                    "Badminton",
                    "Shuttlecock",
                    "Racket Sport"
                ],
                "entries": [
                    "Smash",
                    "Net Drop",
                    "Clear",
                    "Serve"
                ]
            },
            {
                "topic": [
                    "Bowling",
                    "Tenpin Bowling",
                    "Bowling Alley"
                ],
                "entries": [
                    "Strike",
                    "Gutter Ball",
                    "Pins",
                    "Lane"
                ]
            },
            {
                "topic": [
                    "Archery",
                    "Bow Shooting",
                    "Target Archery"
                ],
                "entries": [
                    "Bowstring",
                    "Bullseye",
                    "Quiver",
                    "Target"
                ]
            },
            {
                "topic": [
                    "Karate",
                    "Martial Arts",
                    "Karate-Do"
                ],
                "entries": [
                    "Dojo",
                    "Kumite",
                    "Kata",
                    "Black Belt"
                ]
            },
            {
                "topic": [
                    "Gymnastics",
                    "Artistic Gymnastics",
                    "Floor Exercise"
                ],
                "entries": [
                    "Balance Beam",
                    "Vault",
                    "Pommel Horse",
                    "Rings"
                ]
            },
            {
                "topic": [
                    "Snooker",
                    "Cue Sports",
                    "Billiards"
                ],
                "entries": [
                    "Cue Stick",
                    "Break Shot",
                    "Pockets",
                    "Baize"
                ]
            },
            {
                "topic": [
                    "Auto Racing",
                    "Motor Racing",
                    "Car Racing"
                ],
                "entries": [
                    "Pit Stop",
                    "Grand Prix",
                    "Lap Time",
                    "Podium"
                ]
            },
            {
                "topic": [
                    "Weightlifting",
                    "Powerlifting",
                    "Strength Sports"
                ],
                "entries": [
                    "Snatch",
                    "Clean and Jerk",
                    "Platform",
                    "Barbell"
                ]
            },
            {
                "topic": [
                    "Rowing",
                    "Crew",
                    "Oar Racing"
                ],
                "entries": [
                    "Regatta",
                    "Coxswain",
                    "Sculls",
                    "Stroke Rate"
                ]
            },
            {
                "topic": [
                    "Wrestling",
                    "Greco-Roman Wrestling",
                    "WWE"
                ],
                "entries": [
                    "Pinfall",
                    "Grapple",
                    "Mat",
                    "Referee"
                ]
            },
            {
                "topic": [
                    "Surfing",
                    "Wave Riding",
                    "Surf Sport"
                ],
                "entries": [
                    "Surfboard",
                    "Tube Ride",
                    "Swell",
                    "Wax"
                ]
            },
            {
                "topic": [
                    "Skateboarding",
                    "Deck Sports",
                    "Skate"
                ],
                "entries": [
                    "Kickflip",
                    "Half Pipe",
                    "Trucks",
                    "Grip Tape"
                ]
            },
            {
                "topic": [
                    "Skiing",
                    "Snow Skiing",
                    "Alpine Skiing"
                ],
                "entries": [
                    "Slalom",
                    "Snow Groomer",
                    "Chalet",
                    "Bindings"
                ]
            },
            {
                "topic": [
                    "Snowboarding",
                    "Boarding",
                    "Snow Surfing"
                ],
                "entries": [
                    "Halfpipe",
                    "Snow Park",
                    "Bindings",
                    "Carving"
                ]
            },
            {
                "topic": [
                    "Parkour",
                    "Freerunning",
                    "L'art du D\u00e9placement"
                ],
                "entries": [
                    "Vault",
                    "Precision Jump",
                    "Flow",
                    "Obstacle Course"
                ]
            },
            {
                "topic": [
                    "Lacrosse",
                    "Lax",
                    "Stickball"
                ],
                "entries": [
                    "Crease",
                    "Face-off",
                    "Crosse",
                    "Goal"
                ]
            },
            {
                "topic": [
                    "Diving",
                    "Springboard",
                    "Platform Diving"
                ],
                "entries": [
                    "Pike Position",
                    "Splash",
                    "Twist Dive",
                    "Reverse Dive"
                ]
            },
            {
                "topic": [
                    "Sailing",
                    "Yachting",
                    "Boating"
                ],
                "entries": [
                    "Mast",
                    "Tiller",
                    "Regatta",
                    "Spinnaker"
                ]
            },
            {
                "topic": [
                    "Field Hockey",
                    "Ice Hockey",
                    "Hockey"
                ],
                "entries": [
                    "Astro Turf",
                    "Stick",
                    "Penalty Corner",
                    "Dribble"
                ]
            },
            {
                "topic": [
                    "Table Football",
                    "Foosball",
                    "Mini Soccer"
                ],
                "entries": [
                    "Handles",
                    "Scoreboard",
                    "Crossbars",
                    "Offense"
                ]
            },
            {
                "topic": [
                    "Fishing",
                    "Angling",
                    "Fly Fishing"
                ],
                "entries": [
                    "Reel",
                    "Bait",
                    "Catch",
                    "Tackle Box"
                ]
            },
            {
                "topic": [
                    "Paintball",
                    "Paintgun",
                    "Capture the Flag"
                ],
                "entries": [
                    "Marker",
                    "Mask",
                    "Hopper",
                    "Arena"
                ]
            },
            {
                "topic": [
                    "Equestrian",
                    "Horseback Riding",
                    "Show Jumping"
                ],
                "entries": [
                    "Stirrups",
                    "Jodhpurs",
                    "Bridle",
                    "Arena"
                ]
            },
            {
                "topic": [
                    "Skydiving",
                    "Parachuting",
                    "Air Jumping"
                ],
                "entries": [
                    "Freefall",
                    "Canopy",
                    "Tandem",
                    "Landing Zone"
                ]
            },
            {
                "topic": [
                    "Bullfighting",
                    "Tauromachia",
                    "Corrida"
                ],
                "entries": [
                    "Matador",
                    "Arena",
                    "Cape",
                    "Picador"
                ]
            },
            {
                "topic": [
                    "Curling",
                    "Ice Curling",
                    "Broomstones"
                ],
                "entries": [
                    "Stone",
                    "Sheet",
                    "House",
                    "Skip"
                ]
            },
            {
                "topic": [
                    "Rollerblading",
                    "Inline Skating",
                    "Roller Skating"
                ],
                "entries": [
                    "Wheels",
                    "Brake",
                    "Skate Park",
                    "Grind"
                ]
            },
            {
                "topic": [
                    "Ballet",
                    "Dance",
                    "Classical Dance"
                ],
                "entries": [
                    "Pirouette",
                    "Tutu",
                    "Barre",
                    "Pas de Deux"
                ]
            },
            {
                "topic": [
                    "Frisbee",
                    "Disc Golf",
                    "Flying Disc"
                ],
                "entries": [
                    "Ultimate",
                    "Catch",
                    "Wind",
                    "Throw"
                ]
            },
            {
                "topic": [
                    "Polo",
                    "Equestrian Polo",
                    "Sport of Kings"
                ],
                "entries": [
                    "Mallet",
                    "Chukker",
                    "Grass Field",
                    "Pony"
                ]
            },
            {
                "topic": [
                    "Sumo Wrestling",
                    "Rikishi",
                    "Sumo"
                ],
                "entries": [
                    "Dohy\u014d",
                    "Mawashi",
                    "Push Out",
                    "Tachi-ai"
                ]
            },
            {
                "topic": [
                    "Motocross",
                    "MX",
                    "Dirt Biking"
                ],
                "entries": [
                    "Track",
                    "Jump",
                    "Lap Counter",
                    "Helmet"
                ]
            },
            {
                "topic": [
                    "Synchronized Swimming",
                    "Artistic Swimming",
                    "Water Ballet"
                ],
                "entries": [
                    "Routine",
                    "Music",
                    "Nose Clip",
                    "Team Event"
                ]
            },
            {
                "topic": [
                    "Rodeo",
                    "Bronco Riding",
                    "Bull Riding"
                ],
                "entries": [
                    "Roping",
                    "Barrel Racing",
                    "Chute",
                    "Arena"
                ]
            }
        ]
    },
    "things": {
        "topics": [
            {
                "topic": [
                    "Book",
                    "Novel",
                    "Printed Volume"
                ],
                "entries": [
                    "Pages",
                    "Hardcover",
                    "Fiction",
                    "Library"
                ]
            },
            {
                "topic": [
                    "Shoe",
                    "Footwear",
                    "Sneaker"
                ],
                "entries": [
                    "Laces",
                    "Sole",
                    "Leather",
                    "Running"
                ]
            },
            {
                "topic": [
                    "Computer",
                    "Personal Computer",
                    "PC"
                ],
                "entries": [
                    "Processor",
                    "Monitor",
                    "Keyboard",
                    "Memory"
                ]
            },
            {
                "topic": [
                    "Tree",
                    "Oak",
                    "Plant"
                ],
                "entries": [
                    "Leaves",
                    "Trunk",
                    "Branches",
                    "Forest"
                ]
            },
            {
                "topic": [
                    "Chair",
                    "Seat",
                    "Stool"
                ],
                "entries": [
                    "Legs",
                    "Backrest",
                    "Cushion",
                    "Dining"
                ]
            },
            {
                "topic": [
                    "Bicycle",
                    "Bike",
                    "Cycle"
                ],
                "entries": [
                    "Pedals",
                    "Handlebars",
                    "Wheels",
                    "Gears"
                ]
            },
            {
                "topic": [
                    "Coffee",
                    "Beverage",
                    "Espresso"
                ],
                "entries": [
                    "Caffeine",
                    "Beans",
                    "Mug",
                    "Brew"
                ]
            },
            {
                "topic": [
                    "Telephone",
                    "Landline",
                    "Receiver"
                ],
                "entries": [
                    "Dial Tone",
                    "Ringing",
                    "Handset",
                    "Cord"
                ]
            },
            {
                "topic": [
                    "Lamp",
                    "Light Fixture",
                    "Desk Lamp"
                ],
                "entries": [
                    "Shade",
                    "Bulb",
                    "Switch",
                    "Base"
                ]
            },
            {
                "topic": [
                    "Table",
                    "Desk",
                    "Dining Table"
                ],
                "entries": [
                    "Legs",
                    "Surface",
                    "Wood",
                    "Meeting"
                ]
            },
            {
                "topic": [
                    "Clock",
                    "Timepiece",
                    "Wall Clock"
                ],
                "entries": [
                    "Hands",
                    "Numbers",
                    "Pendulum",
                    "Ticking"
                ]
            },
            {
                "topic": [
                    "Cookbook",
                    "Recipe Book",
                    "Culinary Book"
                ],
                "entries": [
                    "Instructions",
                    "Ingredients",
                    "Cuisine",
                    "Chef"
                ]
            },
            {
                "topic": [
                    "Television",
                    "TV",
                    "Flat Screen"
                ],
                "entries": [
                    "Remote",
                    "Channels",
                    "Cable",
                    "Streaming"
                ]
            },
            {
                "topic": [
                    "Refrigerator",
                    "Fridge",
                    "Icebox"
                ],
                "entries": [
                    "Cooling",
                    "Shelves",
                    "Compressor",
                    "Freezer"
                ]
            },
            {
                "topic": [
                    "Glasses",
                    "Eyeglasses",
                    "Spectacles"
                ],
                "entries": [
                    "Lenses",
                    "Frames",
                    "Vision",
                    "Corrective"
                ]
            },
            {
                "topic": [
                    "Watch",
                    "Wristwatch",
                    "Timepiece"
                ],
                "entries": [
                    "Strap",
                    "Dial",
                    "Quartz",
                    "Analog"
                ]
            },
            {
                "topic": [
                    "Car",
                    "Automobile",
                    "Vehicle"
                ],
                "entries": [
                    "Engine",
                    "Tires",
                    "Windshield",
                    "Steering"
                ]
            },
            {
                "topic": [
                    "Towel",
                    "Bath Towel",
                    "Washcloth"
                ],
                "entries": [
                    "Cotton",
                    "Absorbent",
                    "Bathroom",
                    "Soft"
                ]
            },
            {
                "topic": [
                    "Knife",
                    "Blade",
                    "Cutlery"
                ],
                "entries": [
                    "Sharp",
                    "Handle",
                    "Stainless",
                    "Chopping"
                ]
            },
            {
                "topic": [
                    "Pen",
                    "Writing Instrument",
                    "Ballpoint"
                ],
                "entries": [
                    "Ink",
                    "Cap",
                    "Nib",
                    "Clip"
                ]
            },
            {
                "topic": [
                    "Bread",
                    "Loaf",
                    "Baguette"
                ],
                "entries": [
                    "Wheat",
                    "Yeast",
                    "Crust",
                    "Baker"
                ]
            },
            {
                "topic": [
                    "Pillow",
                    "Cushion",
                    "Headrest"
                ],
                "entries": [
                    "Cotton",
                    "Fluff",
                    "Sleeping",
                    "Comfort"
                ]
            },
            {
                "topic": [
                    "Jacket",
                    "Coat",
                    "Outerwear"
                ],
                "entries": [
                    "Zipper",
                    "Pocket",
                    "Warm",
                    "Winter"
                ]
            },
            {
                "topic": [
                    "Spoon",
                    "Utensil",
                    "Teaspoon"
                ],
                "entries": [
                    "Stainless",
                    "Dishwasher",
                    "Soup",
                    "Serving"
                ]
            },
            {
                "topic": [
                    "Pants",
                    "Trousers",
                    "Slacks"
                ],
                "entries": [
                    "Belt",
                    "Pockets",
                    "Fabric",
                    "Fit"
                ]
            },
            {
                "topic": [
                    "Mirror",
                    "Looking Glass",
                    "Reflector"
                ],
                "entries": [
                    "Glass",
                    "Frame",
                    "Reflection",
                    "Bathroom"
                ]
            },
            {
                "topic": [
                    "Carpet",
                    "Rug",
                    "Mat"
                ],
                "entries": [
                    "Plush",
                    "Wool",
                    "Patterned",
                    "Floor"
                ]
            },
            {
                "topic": [
                    "Pencil",
                    "Graphite Stick",
                    "Writing Tool"
                ],
                "entries": [
                    "Eraser",
                    "Sharpened",
                    "HB",
                    "Wooden"
                ]
            },
            {
                "topic": [
                    "Magazine",
                    "Periodical",
                    "Glossy Pages"
                ],
                "entries": [
                    "Articles",
                    "Cover",
                    "Monthly",
                    "Editor"
                ]
            },
            {
                "topic": [
                    "Envelope",
                    "Mailer",
                    "Parcel Post"
                ],
                "entries": [
                    "Address",
                    "Stamp",
                    "Seal",
                    "Paper"
                ]
            },
            {
                "topic": [
                    "Pizza",
                    "Pie",
                    "Flatbread"
                ],
                "entries": [
                    "Cheese",
                    "Crust",
                    "Slice",
                    "Pepperoni"
                ]
            },
            {
                "topic": [
                    "Candle",
                    "Wax Light",
                    "Taper"
                ],
                "entries": [
                    "Wick",
                    "Burn",
                    "Scent",
                    "Holder"
                ]
            },
            {
                "topic": [
                    "Soda",
                    "Soft Drink",
                    "Pop"
                ],
                "entries": [
                    "Carbonation",
                    "Fizzy",
                    "Can",
                    "Sugar"
                ]
            },
            {
                "topic": [
                    "Suit",
                    "Business Attire",
                    "Formal Wear"
                ],
                "entries": [
                    "Tie",
                    "Tailored",
                    "Lapels",
                    "Buttoned"
                ]
            },
            {
                "topic": [
                    "Soap",
                    "Cleanser",
                    "Detergent"
                ],
                "entries": [
                    "Lather",
                    "Scent",
                    "Bar",
                    "Hygiene"
                ]
            },
            {
                "topic": [
                    "Toothbrush",
                    "Dental Brush",
                    "Oral Cleansing Tool"
                ],
                "entries": [
                    "Bristles",
                    "Toothpaste",
                    "Handle",
                    "Plaque"
                ]
            },
            {
                "topic": [
                    "Milk",
                    "Dairy Drink",
                    "Cream"
                ],
                "entries": [
                    "Calcium",
                    "Lactose",
                    "Pasteurized",
                    "Bottle"
                ]
            },
            {
                "topic": [
                    "Camera",
                    "Photographic Device",
                    "Digital Recorder"
                ],
                "entries": [
                    "Lens",
                    "Shutter",
                    "Flash",
                    "Tripod"
                ]
            },
            {
                "topic": [
                    "Blanket",
                    "Quilt",
                    "Throw"
                ],
                "entries": [
                    "Warmth",
                    "Flannel",
                    "Bed",
                    "Snuggling"
                ]
            },
            {
                "topic": [
                    "Ring",
                    "Band",
                    "Wedding Ring"
                ],
                "entries": [
                    "Gold",
                    "Diamond",
                    "Engagement",
                    "Finger"
                ]
            },
            {
                "topic": [
                    "Plate",
                    "Dish",
                    "Dining Ware"
                ],
                "entries": [
                    "Ceramic",
                    "Round",
                    "Dinner",
                    "Serving"
                ]
            },
            {
                "topic": [
                    "Scissors",
                    "Cutting Tool",
                    "Shears"
                ],
                "entries": [
                    "Blades",
                    "Handles",
                    "Sharp",
                    "Crafting"
                ]
            },
            {
                "topic": [
                    "Guitar",
                    "String Instrument",
                    "Electric Guitar"
                ],
                "entries": [
                    "Frets",
                    "Strings",
                    "Pick",
                    "Amp"
                ]
            },
            {
                "topic": [
                    "Ball",
                    "Sphere",
                    "Round Object"
                ],
                "entries": [
                    "Bounce",
                    "Sports",
                    "Rubber",
                    "Throw"
                ]
            },
            {
                "topic": [
                    "Bedroom",
                    "Sleeping Chamber",
                    "Dream Room"
                ],
                "entries": [
                    "Bed",
                    "Wardrobe",
                    "Privacy",
                    "Rest"
                ]
            },
            {
                "topic": [
                    "Backpack",
                    "Knapsack",
                    "Rucksack"
                ],
                "entries": [
                    "Zipper",
                    "Straps",
                    "Compartments",
                    "Hiking"
                ]
            },
            {
                "topic": [
                    "Cake",
                    "Pastry",
                    "Baked Dessert"
                ],
                "entries": [
                    "Layers",
                    "Icing",
                    "Sweet",
                    "Celebration"
                ]
            },
            {
                "topic": [
                    "Fan",
                    "Cooling Appliance",
                    "Ventilator"
                ],
                "entries": [
                    "Blades",
                    "Rotation",
                    "Breeze",
                    "Electric"
                ]
            }
        ]
    }
}
