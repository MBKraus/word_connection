{
    "films_series_art": {
        "topics": [
            {
                "topic": [
                    "Friends"
                ],
                "entries": [
                    "Central Perk",
                    "Pivot Scene",
                    "Phoebe's Songs",
                    "Smelly Cat"
                ]
            },
            {
                "topic": [
                    "The Sound of Music",
                    "Sound of Music Film",
                    "Musical: Sound of Music",
                    "Sound of Music"
                ],
                "entries": [
                    "Rogers & Hammerstein",
                    "Von Trapp Family",
                    "Austrian Alps",
                    "Do-Re-Mi"
                ]
            },
            {
                "topic": [
                    "Schindler's List"
                ],
                "entries": [
                    "Oskar Schindler",
                    "Red Coat",
                    "Auschwitz",
                    "Holocaust"
                ]
            },
            {
                "topic": [
                    "The Godfather",
                    "Godfather"
                ],
                "entries": [
                    "Marlon Brando",
                    "Sicilian Mafia",
                    "Offer",
                    "Family Business"
                ]
            },
            {
                "topic": [
                    "Breaking Bad"
                ],
                "entries": [
                    "Walter White",
                    "Crystal Meth",
                    "RV Lab",
                    "Blue Product"
                ]
            },
            {
                "topic": [
                    "The Office US",
                    "The Office"
                ],
                "entries": [
                    "Scranton",
                    "Jim Halpert",
                    "Michael Scott",
                    "Dwight Schrute"
                ]
            },
            {
                "topic": [
                    "Game of Thrones"
                ],
                "entries": [
                    "Iron Throne",
                    "Westeros",
                    "White Walkers",
                    "Dragons"
                ]
            },
            {
                "topic": [
                    "The Simpsons",
                    "Simpsons"
                ],
                "entries": [
                    "Yellow Family",
                    "Homer",
                    "Springfield",
                    "D'oh!"
                ]
            },
            {
                "topic": [
                    "Titanic"
                ],
                "entries": [
                    "Iceberg",
                    "Jack and Rose",
                    "Unsinkable Ship",
                    "1912"
                ]
            },
            {
                "topic": [
                    "Harry Potter"
                ],
                "entries": [
                    "Hogwarts",
                    "Voldemort",
                    "Muggle",
                    "Butterbeer"
                ]
            },
            {
                "topic": [
                    "Lord of the Rings",
                    "LOTR"
                ],
                "entries": [
                    "Middle-earth",
                    "The One Ring",
                    "Frodo Baggins",
                    "Mordor"
                ]
            },
            {
                "topic": [
                    "The Walking Dead",
                    "Walking Dead"
                ],
                "entries": [
                    "Zombies",
                    "Survivors",
                    "Rick Grimes",
                    "Post-apocalypse"
                ]
            },
            {
                "topic": [
                    "Star Trek"
                ],
                "entries": [
                    "USS Enterprise",
                    "Spock",
                    "Warp Speed",
                    "Klingons"
                ]
            },
            {
                "topic": [
                    "Jurassic Park"
                ],
                "entries": [
                    "Dinosaurs",
                    "Isla Nublar",
                    "T-Rex",
                    "Life Finds Way"
                ]
            },
            {
                "topic": [
                    "Inception"
                ],
                "entries": [
                    "Dream Layers",
                    "Christopher Nolan",
                    "Spinning Top",
                    "Leonardo DiCaprio"
                ]
            },
            {
                "topic": [
                    "The Lion King",
                    "Lion King"
                ],
                "entries": [
                    "Simba",
                    "Hakuna Matata",
                    "Pride Rock",
                    "Circle of Life"
                ]
            },
            {
                "topic": [
                    "The Avengers",
                    "Avengers"
                ],
                "entries": [
                    "Iron Man",
                    "Infinity Stones",
                    "S.H.I.E.L.D.",
                    "Thanos"
                ]
            },
            {
                "topic": [
                    "Stranger Things"
                ],
                "entries": [
                    "1980s",
                    "Upside Down",
                    "Eleven",
                    "Hawkins"
                ]
            },
            {
                "topic": [
                    "Sherlock Holmes"
                ],
                "entries": [
                    "221B Baker Street",
                    "Detective",
                    "Dr. Watson",
                    "Moriarty"
                ]
            },
            {
                "topic": [
                    "The Wizard of Oz",
                    "Wizard of Oz"
                ],
                "entries": [
                    "Yellow Brick Road",
                    "Emerald City",
                    "Wicked Witch",
                    "Dorothy"
                ]
            },
            {
                "topic": [
                    "Avatar"
                ],
                "entries": [
                    "Pandora",
                    "Blue Na'vi",
                    "James Cameron",
                    "3D"
                ]
            },
            {
                "topic": [
                    "Back to the Future"
                ],
                "entries": [
                    "Time Travel",
                    "DeLorean",
                    "Marty McFly",
                    "1985"
                ]
            },
            {
                "topic": [
                    "The X-Files",
                    "X-Files",
                    "X Files"
                ],
                "entries": [
                    "Mulder and Scully",
                    "Aliens",
                    "Conspiracy",
                    "Truth is Out There"
                ]
            },
            {
                "topic": [
                    "The Silence of the Lambs",
                    "Silence of the Lambs"
                ],
                "entries": [
                    "Hannibal Lecter",
                    "Clarice Starling",
                    "Census Taker",
                    "Fava Beans"
                ]
            },
            {
                "topic": [
                    "The Sopranos",
                    "Sopranos"
                ],
                "entries": [
                    "Tony Soprano",
                    "New Jersey",
                    "Mafia",
                    "Therapist"
                ]
            },
            {
                "topic": [
                    "The Matrix",
                    "Matrix"
                ],
                "entries": [
                    "Keanu Reeves",
                    "Red Pill",
                    "Neo",
                    "Bullet Time"
                ]
            },
            {
                "topic": [
                    "Pulp Fiction"
                ],
                "entries": [
                    "Quentin Tarantino",
                    "Vega and Winnfield",
                    "Diner Scene",
                    "Royale with Cheese"
                ]
            },
            {
                "topic": [
                    "Fight Club"
                ],
                "entries": [
                    "Brad Pitt",
                    "Soap",
                    "Tyler Durden",
                    "Underground Clubs"
                ]
            },
            {
                "topic": [
                    "Seinfeld"
                ],
                "entries": [
                    "New York",
                    "Jerry",
                    "Stand-Up",
                    "Soup Nazi"
                ]
            },
            {
                "topic": [
                    "Ghostbusters"
                ],
                "entries": [
                    "Proton Pack",
                    "Slimy Ghost",
                    "Ecto-1",
                    "Who You Gonna Call"
                ]
            },
            {
                "topic": [
                    "E.T. the Extra-Terrestrial",
                    "ET",
                    "E.T."
                ],
                "entries": [
                    "Alien Visitor",
                    "Reese's Pieces",
                    "Bicycle Flying",
                    "Phone Home"
                ]
            },
            {
                "topic": [
                    "Toy Story"
                ],
                "entries": [
                    "Woody",
                    "Buzz Lightyear",
                    "Andy's Room",
                    "Pixar"
                ]
            },
            {
                "topic": [
                    "Indiana Jones"
                ],
                "entries": [
                    "Archaeologist",
                    "Raiders",
                    "Lost Ark",
                    "Harrison Ford"
                ]
            },
            {
                "topic": [
                    "Rocky"
                ],
                "entries": [
                    "Boxing Ring",
                    "Philadelphia",
                    "Balboa",
                    "Eye of the Tiger"
                ]
            },
            {
                "topic": [
                    "Home Alone"
                ],
                "entries": [
                    "Macaulay Culkin",
                    "Sticky Bandits",
                    "Christmas",
                    "Kevin McCallister"
                ]
            },
            {
                "topic": [
                    "Die Hard"
                ],
                "entries": [
                    "John McClane",
                    "Nakatomi Plaza",
                    "Hostage Situation",
                    "Christmas Eve"
                ]
            },
            {
                "topic": [
                    "Jaws"
                ],
                "entries": [
                    "Great White Shark",
                    "Quint",
                    "Amity Island",
                    "Theme Music"
                ]
            },
            {
                "topic": [
                    "Planet of the Apes"
                ],
                "entries": [
                    "Ape Society",
                    "Charlton Heston",
                    "Forbidden Zone",
                    "Statue of Liberty"
                ]
            },
            {
                "topic": [
                    "The Terminator",
                    "Terminator"
                ],
                "entries": [
                    "Arnold Schwarzenegger",
                    "Skynet",
                    "Time Machine",
                    "Judgment Day"
                ]
            },
            {
                "topic": [
                    "Batman"
                ],
                "entries": [
                    "Bruce Wayne",
                    "Gotham City",
                    "Joker",
                    "Cape Crusader"
                ]
            },
            {
                "topic": [
                    "Star Wars"
                ],
                "entries": [
                    "Lucasfilm",
                    "Jedi Knights",
                    "The Force",
                    "Empire"
                ]
            },
            {
                "topic": [
                    "The Godfather",
                    "Godfather"
                ],
                "entries": [
                    "Don Corleone",
                    "Mafia",
                    "Sicily",
                    "Offer"
                ]
            },
            {
                "topic": [
                    "Finding Nemo"
                ],
                "entries": [
                    "Clownfish",
                    "Dory",
                    "Great Barrier Reef",
                    "Aquarium"
                ]
            },
            {
                "topic": [
                    "Frozen"
                ],
                "entries": [
                    "Anna and Elsa",
                    "Arendelle",
                    "Let It Go",
                    "Ice Powers"
                ]
            },
            {
                "topic": [
                    "The Little Mermaid",
                    "Little Mermaid"
                ],
                "entries": [
                    "Ariel",
                    "Under the Sea",
                    "Ursula",
                    "Prince Eric"
                ]
            },
            {
                "topic": [
                    "Beauty and the Beast"
                ],
                "entries": [
                    "Belle",
                    "Beast",
                    "Gaston",
                    "Enchanted Castle"
                ]
            },
            {
                "topic": [
                    "Aladdin"
                ],
                "entries": [
                    "Jasmine",
                    "Genie",
                    "Magic Carpet",
                    "Jafar"
                ]
            },
            {
                "topic": [
                    "The Jungle Book",
                    "Jungle Book"
                ],
                "entries": [
                    "Mowgli",
                    "Baloo",
                    "Shere Khan",
                    "Bagheera"
                ]
            },
            {
                "topic": [
                    "Cinderella"
                ],
                "entries": [
                    "Glass Slipper",
                    "Midnight",
                    "Fairy Godmother",
                    "Pumpkin Carriage"
                ]
            },
            {
                "topic": [
                    "Starry Night",
                    "The Starry Night",
                    "Starry Night Painting",
                    "Van Gogh's Starry Night"
                ],
                "entries": [
                    "Vincent van Gogh",
                    "Post-Impressionism",
                    "Cypress Trees",
                    "Night Sky"
                ]
            },
            {
                "topic": [
                    "The Thinker",
                    "Thinker",
                    "Le Penseur",
                    "Rodin's The Thinker"
                ],
                "entries": [
                    "Auguste Rodin",
                    "Bronze Sculpture",
                    "Pensive Pose",
                    "Contemplation"
                ]
            },
            {
                "topic": [
                    "Romeo and Juliet",
                    "The Tragedy of Romeo and Juliet",
                    "Romeo & Juliet"
                ],
                "entries": [
                    "William Shakespeare",
                    "Forbidden Love",
                    "Verona Setting",
                    "Feuding Families"
                ]
            },
            {
                "topic": [
                    "The Scream",
                    "Scream",
                    "Edvard Munch's Scream",
                    "The Cry"
                ],
                "entries": [
                    "Edvard Munch",
                    "Expressionism",
                    "Vibrant Colors",
                    "Anxiety"
                ]
            },
            {
                "topic": [
                    "The Night Watch",
                    "Night Watch",
                    "Rembrandt's Night Watch",
                    "The Militia Company"
                ],
                "entries": [
                    "Rembrandt van Rijn",
                    "Group Portrait",
                    "Dutch Golden Age",
                    "Amsterdam Museum"
                ]
            }
        ]
    },
    "music_and_instruments": {
        "topics": [
            {
                "topic": [
                    "The Beatles",
                    "Fab Four"
                ],
                "entries": [
                    "British Invasion",
                    "Liverpool",
                    "Abbey Road",
                    "Yellow Submarine"
                ]
            },
            {
                "topic": [
                    "Beyonc\u00e9",
                    "Beyonce",
                    "Queen B"
                ],
                "entries": [
                    "Destiny's Child",
                    "Jay-Z",
                    "Crazy in Love",
                    "Lemonade"
                ]
            },
            {
                "topic": [
                    "Elvis Presley",
                    "The King"
                ],
                "entries": [
                    "Rock and Roll",
                    "Graceland",
                    "Blue Suede Shoes",
                    "Memphis"
                ]
            },
            {
                "topic": [
                    "The Rolling Stones",
                    "Stones"
                ],
                "entries": [
                    "Mick Jagger",
                    "Keith Richards",
                    "Satisfaction",
                    "Sticky Fingers"
                ]
            },
            {
                "topic": [
                    "Michael Jackson",
                    "King of Pop"
                ],
                "entries": [
                    "Moonwalk",
                    "Thriller",
                    "Neverland Ranch",
                    "Billie Jean"
                ]
            },
            {
                "topic": [
                    "Madonna",
                    "Queen of Pop"
                ],
                "entries": [
                    "Material Girl",
                    "Vogue",
                    "Blonde Ambition",
                    "Like a Virgin"
                ]
            },
            {
                "topic": [
                    "Katy Perry",
                    "Perry"
                ],
                "entries": [
                    "California Gurls",
                    "Prism",
                    "American Idol",
                    "Firework"
                ]
            },
            {
                "topic": [
                    "Taylor Swift",
                    "Swift"
                ],
                "entries": [
                    "Fearless",
                    "1989",
                    "Tim McGraw",
                    "Anti-Hero"
                ]
            },
            {
                "topic": [
                    "Justin Bieber",
                    "Bieber"
                ],
                "entries": [
                    "What Do You Mean?",
                    "Baby",
                    "Beliebers",
                    "Canada"
                ]
            },
            {
                "topic": [
                    "Led Zeppelin",
                    "Zeppelin"
                ],
                "entries": [
                    "Jimmy Page",
                    "Stairway to Heaven",
                    "Hard Rock",
                    "John Bonham"
                ]
            },
            {
                "topic": [
                    "Queen",
                    "Bohemian Rhapsody"
                ],
                "entries": [
                    "Freddie Mercury",
                    "Brian May",
                    "Live Aid",
                    "We Will Rock You"
                ]
            },
            {
                "topic": [
                    "Miley Cyrus",
                    "Cyrus"
                ],
                "entries": [
                    "Hannah Montana",
                    "Wrecking Ball",
                    "Billy Ray",
                    "Bangerz"
                ]
            },
            {
                "topic": [
                    "Adele",
                    "21"
                ],
                "entries": [
                    "Rolling in the Deep",
                    "Someone Like You",
                    "Skyfall",
                    "London"
                ]
            },
            {
                "topic": [
                    "Coldplay",
                    "Chris Martin"
                ],
                "entries": [
                    "Yellow",
                    "Viva La Vida",
                    "Fix You",
                    "Head Full of Dreams"
                ]
            },
            {
                "topic": [
                    "Pink Floyd",
                    "Floyd"
                ],
                "entries": [
                    "Dark Side of the Moon",
                    "Roger Waters",
                    "The Wall",
                    "Psychedelic"
                ]
            },
            {
                "topic": [
                    "Nirvana",
                    "Kurt Cobain"
                ],
                "entries": [
                    "Seattle",
                    "Grunge",
                    "Smells Like Teen Spirit",
                    "Nevermind"
                ]
            },
            {
                "topic": [
                    "Bob Dylan",
                    "Dylan"
                ],
                "entries": [
                    "Like a Rolling Stone",
                    "Harmonica",
                    "Nobel Prize",
                    "Blowin' in the Wind"
                ]
            },
            {
                "topic": [
                    "Rihanna",
                    "Fenty"
                ],
                "entries": [
                    "Umbrella",
                    "Barbados",
                    "Diamonds",
                    "Savage X Fenty"
                ]
            },
            {
                "topic": [
                    "Bruno Mars",
                    "Mars"
                ],
                "entries": [
                    "Locked Out of Heaven",
                    "24K Magic",
                    "Silk Sonic",
                    "Grenade"
                ]
            },
            {
                "topic": [
                    "Lady Gaga",
                    "Gaga"
                ],
                "entries": [
                    "Poker Face",
                    "Born This Way",
                    "A Star is Born",
                    "The Fame"
                ]
            },
            {
                "topic": [
                    "Ed Sheeran",
                    "Sheeran"
                ],
                "entries": [
                    "Divide",
                    "Thinking Out Loud",
                    "Ginger Hair",
                    "Shape Of You"
                ]
            },
            {
                "topic": [
                    "Ariana Grande",
                    "Grande"
                ],
                "entries": [
                    "Thank U, Next",
                    "Dangerous Woman",
                    "Ponytail",
                    "High Note"
                ]
            },
            {
                "topic": [
                    "Fleetwood Mac",
                    "Fleetwood"
                ],
                "entries": [
                    "Stevie Nicks",
                    "Rumours",
                    "Go Your Own Way",
                    "The Chain"
                ]
            },
            {
                "topic": [
                    "AC/DC",
                    "Acca Dacca"
                ],
                "entries": [
                    "Angus Young",
                    "Back in Black",
                    "Thunderstruck",
                    "Australian Rock"
                ]
            },
            {
                "topic": [
                    "David Bowie",
                    "Ziggy Stardust"
                ],
                "entries": [
                    "Space Oddity",
                    "Changes",
                    "Let\u2019s Dance",
                    "The Thin White Duke"
                ]
            },
            {
                "topic": [
                    "Elton John",
                    "Rocketman"
                ],
                "entries": [
                    "Piano",
                    "Goodbye Yellow Brick Road",
                    "Kingsman",
                    "Tiny Dancer"
                ]
            },
            {
                "topic": [
                    "The Beach Boys",
                    "Beach Boys"
                ],
                "entries": [
                    "Brian Wilson",
                    "California Sound",
                    "Good Vibrations",
                    "Surfin' Safari"
                ]
            },
            {
                "topic": [
                    "Sia",
                    "Furler"
                ],
                "entries": [
                    "Chandelier",
                    "Elastic Heart",
                    "Maddie Ziegler",
                    "Australian Singer"
                ]
            },
            {
                "topic": [
                    "Shakira",
                    "Mebarak"
                ],
                "entries": [
                    "Hips Don't Lie",
                    "Barranquilla",
                    "Waka Waka (This Time for Africa)",
                    "Heritage"
                ]
            },
            {
                "topic": [
                    "Kanye West",
                    "Ye"
                ],
                "entries": [
                    "Stronger",
                    "Kim Kardashian",
                    "Yeezus",
                    "Fashion Line"
                ]
            },
            {
                "topic": [
                    "Jimi Hendrix",
                    "Hendrix"
                ],
                "entries": [
                    "Guitar God",
                    "Woodstock",
                    "Purple Haze",
                    "Hey Joe"
                ]
            },
            {
                "topic": [
                    "Britney Spears",
                    "Spears"
                ],
                "entries": [
                    "Baby One More Time",
                    "Toxic",
                    "Las Vegas Residency",
                    "Conservatorship"
                ]
            },
            {
                "topic": [
                    "Aerosmith",
                    "Smith"
                ],
                "entries": [
                    "Steven Tyler",
                    "Dream On",
                    "Boston",
                    "Walk This Way"
                ]
            },
            {
                "topic": [
                    "Prince",
                    "Paisley Park"
                ],
                "entries": [
                    "Purple Rain",
                    "Paisley Park",
                    "The Revolution",
                    "Minneapolis"
                ]
            },
            {
                "topic": [
                    "John Lennon",
                    "Lennon"
                ],
                "entries": [
                    "Imagine",
                    "Yoko Ono",
                    "Beatles",
                    "Peace Movement"
                ]
            },
            {
                "topic": [
                    "The Eagles",
                    "Eagles"
                ],
                "entries": [
                    "Hotel California",
                    "Joe Walsh",
                    "Don Henley",
                    "Desperado"
                ]
            },
            {
                "topic": [
                    "Eminem",
                    "Slim Shady"
                ],
                "entries": [
                    "Rap God",
                    "8 Mile",
                    "Detroit",
                    "Marshall Mathers"
                ]
            },
            {
                "topic": [
                    "Linkin Park",
                    "Park"
                ],
                "entries": [
                    "Chester Bennington",
                    "Hybrid Theory",
                    "Nu Metal",
                    "In the End"
                ]
            },
            {
                "topic": [
                    "Celine Dion",
                    "Dion"
                ],
                "entries": [
                    "My Heart Will Go On",
                    "Las Vegas",
                    "Titanic",
                    "Vocal Range"
                ]
            },
            {
                "topic": [
                    "Metallica",
                    "Tallica"
                ],
                "entries": [
                    "James Hetfield",
                    "Thrash Metal",
                    "Enter Sandman",
                    "Black Album"
                ]
            },
            {
                "topic": [
                    "Cher",
                    "Sarkisian"
                ],
                "entries": [
                    "Goddess of Pop",
                    "Believe",
                    "Moonstruck",
                    "Sonny"
                ]
            },
            {
                "topic": [
                    "Whitney Houston",
                    "Houston"
                ],
                "entries": [
                    "I Will Always Love You",
                    "Bodyguard",
                    "Clive Davis",
                    "Newark"
                ]
            },
            {
                "topic": [
                    "Bon Jovi",
                    "Bon Jovie"
                ],
                "entries": [
                    "Livin' on a Prayer",
                    "Slippery When Wet",
                    "New Jersey",
                    "Richie Sambora"
                ]
            },
            {
                "topic": [
                    "Janet Jackson",
                    "Jackson"
                ],
                "entries": [
                    "Rhythm Nation",
                    "Together Again",
                    "Super Bowl",
                    "Velvet Rope"
                ]
            },
            {
                "topic": [
                    "Red Hot Chili Peppers",
                    "RHCP"
                ],
                "entries": [
                    "Flea",
                    "Californication",
                    "Under the Bridge",
                    "Anthony Kiedis"
                ]
            },
            {
                "topic": [
                    "Backstreet Boys",
                    "BSB"
                ],
                "entries": [
                    "Nick Carter",
                    "I Want It That Way",
                    "Pop Band",
                    "Millennium"
                ]
            },
            {
                "topic": [
                    "Alicia Keys",
                    "Keys"
                ],
                "entries": [
                    "Empire State of Mind",
                    "Falling",
                    "New York",
                    "The Voice"
                ]
            },
            {
                "topic": [
                    "Piano",
                    "Grand Piano",
                    "Baby Grand"
                ],
                "entries": [
                    "Hammer Action",
                    "88 Keys",
                    "Pedals",
                    "Soundboard"
                ]
            },
            {
                "topic": [
                    "Guitar",
                    "Acoustic Guitar",
                    "Electric Guitar"
                ],
                "entries": [
                    "Strings",
                    "Fretboard",
                    "Amplifier",
                    "Pickups"
                ]
            },
            {
                "topic": [
                    "Drum",
                    "Drums",
                    "Drum Kit",
                    "Drum Set",
                    "Percussion Kit"
                ],
                "entries": [
                    "Snare Drum",
                    "Bass Drum",
                    "Cymbals",
                    "Hi-hat"
                ]
            },
            {
                "topic": [
                    "Violin",
                    "Fiddle",
                    "String Instrument"
                ],
                "entries": [
                    "Bow",
                    "Four Strings",
                    "Chin Rest",
                    "Symphony"
                ]
            },
            {
                "topic": [
                    "Saxophone",
                    "Alto Sax",
                    "Tenor Sax"
                ],
                "entries": [
                    "Reed",
                    "Jazz",
                    "Curved Body",
                    "Keys"
                ]
            }
        ]
    },
    "nature_and_space": {
        "topics": [
            {
                "topic": [
                    "Tiger",
                    "Tigers"
                ],
                "entries": [
                    "Stripe Pattern",
                    "Jungle Habitat",
                    "Solitary Nature",
                    "Predatory Skills"
                ]
            },
            {
                "topic": [
                    "Elephant",
                    "Elephants"
                ],
                "entries": [
                    "Trunk Utilization",
                    "Ivory Tusks",
                    "Matriarchal Groups",
                    "Savannahs"
                ]
            },
            {
                "topic": [
                    "Penguin",
                    "Penguins"
                ],
                "entries": [
                    "Antarctic Dweller",
                    "Flightless Bird",
                    "Tuxedo Appearance",
                    "Waddle Movement"
                ]
            },
            {
                "topic": [
                    "Kangaroo",
                    "Kangaroos"
                ],
                "entries": [
                    "Pouch Bearing",
                    "Hopping Locomotion",
                    "Outback Resident",
                    "Herbivorous"
                ]
            },
            {
                "topic": [
                    "Crocodile",
                    "Crocodiles"
                ],
                "entries": [
                    "Reptilian Predator",
                    "Snout Jaws",
                    "River Banks",
                    "Carnivorous"
                ]
            },
            {
                "topic": [
                    "Whale",
                    "Whales"
                ],
                "entries": [
                    "Blowhole Breathing",
                    "Ocean Giants",
                    "Baleen Feeding",
                    "Migrant"
                ]
            },
            {
                "topic": [
                    "Parrot",
                    "Parrots"
                ],
                "entries": [
                    "Colorful Plumage",
                    "Mimicking Ability",
                    "Curved Beak",
                    "Tree Dweller"
                ]
            },
            {
                "topic": [
                    "Giraffe",
                    "Giraffes"
                ],
                "entries": [
                    "Tall Neck",
                    "Savannah Browsing",
                    "Spotted Coat",
                    "Leaf Eater"
                ]
            },
            {
                "topic": [
                    "Polar Bear",
                    "Polar Bears"
                ],
                "entries": [
                    "Arctic Habitat",
                    "Ice Floes",
                    "Carnivore",
                    "White Fur"
                ]
            },
            {
                "topic": [
                    "Shark",
                    "Sharks"
                ],
                "entries": [
                    "Fin Structures",
                    "Cartilaginous Fish",
                    "Apex Predator",
                    "Ocean Hunter"
                ]
            },
            {
                "topic": [
                    "Monkey",
                    "Monkeys"
                ],
                "entries": [
                    "Primate",
                    "Tree Acrobat",
                    "Tool Use",
                    "Tribal Socials"
                ]
            },
            {
                "topic": [
                    "Wolf",
                    "Wolves"
                ],
                "entries": [
                    "Pack Leader",
                    "Howling Communication",
                    "Forest Hunter",
                    "Grey Fur"
                ]
            },
            {
                "topic": [
                    "Panda",
                    "Pandas"
                ],
                "entries": [
                    "Bamboo Diet",
                    "China Native",
                    "Endangered",
                    "Black-and-White Fur"
                ]
            },
            {
                "topic": [
                    "Koala",
                    "Koalas"
                ],
                "entries": [
                    "Eucalyptus Feeder",
                    "Marsupial",
                    "Sleepy Nature",
                    "Australia"
                ]
            },
            {
                "topic": [
                    "Flamingo",
                    "Flamingos"
                ],
                "entries": [
                    "Pink Feathers",
                    "Long Legged",
                    "Shallow Waters",
                    "Mud Nests"
                ]
            },
            {
                "topic": [
                    "Rhinoceros",
                    "Rhino",
                    "Rhinoceroses"
                ],
                "entries": [
                    "Thick Skin",
                    "Horn",
                    "Grass Eater",
                    "Savannah Dweller"
                ]
            },
            {
                "topic": [
                    "Cheetah",
                    "Cheetahs"
                ],
                "entries": [
                    "Fastest Runner",
                    "Spotted Coat",
                    "Savannah Predator",
                    "Solitary"
                ]
            },
            {
                "topic": [
                    "Zebra",
                    "Zebras"
                ],
                "entries": [
                    "Black-and-White Stripes",
                    "Herd Behavior",
                    "Grasslands",
                    "Equid Family"
                ]
            },
            {
                "topic": [
                    "Chimpanzee",
                    "Chimpanzees"
                ],
                "entries": [
                    "Great Ape",
                    "Tool Crafting",
                    "Omnivorous Diet",
                    "Complex Socials"
                ]
            },
            {
                "topic": [
                    "Owl",
                    "Owls"
                ],
                "entries": [
                    "Nocturnal Hunter",
                    "Silent Flight",
                    "Rounded Eyes",
                    "Wisdom Symbol"
                ]
            },
            {
                "topic": [
                    "Fox",
                    "Foxes"
                ],
                "entries": [
                    "Bushy Tail",
                    "Burrow Dens",
                    "Adaptive Diet",
                    "Cunning"
                ]
            },
            {
                "topic": [
                    "Frog",
                    "Frogs"
                ],
                "entries": [
                    "Jumping Amphibian",
                    "Wetlands",
                    "Croaking Sound",
                    "Metamorphosis"
                ]
            },
            {
                "topic": [
                    "Bat",
                    "Bats"
                ],
                "entries": [
                    "Echolocation",
                    "Nocturnal Predator",
                    "Winged Mammal",
                    "Fruit Eaters"
                ]
            },
            {
                "topic": [
                    "Hyena",
                    "Hyenas"
                ],
                "entries": [
                    "Laughing Call",
                    "Scavenger",
                    "Spotted Fur",
                    "Clan Society"
                ]
            },
            {
                "topic": [
                    "Moose",
                    "Moose"
                ],
                "entries": [
                    "Antler Growth",
                    "Forest Habitat",
                    "Herbivorous",
                    "Solitary"
                ]
            },
            {
                "topic": [
                    "Bison",
                    "Bisons"
                ],
                "entries": [
                    "Plains Grazer",
                    "Humped Back",
                    "Thick Fur",
                    "Herd Traveling"
                ]
            },
            {
                "topic": [
                    "Camel",
                    "Camels"
                ],
                "entries": [
                    "Desert Nomad",
                    "Hump Storage",
                    "Water Conservation",
                    "Caravan Use"
                ]
            },
            {
                "topic": [
                    "Raccoon",
                    "Raccoons"
                ],
                "entries": [
                    "Mask-like Face",
                    "Trash Forager",
                    "Nimble Hands",
                    "Nocturnal"
                ]
            },
            {
                "topic": [
                    "Seal",
                    "Seals"
                ],
                "entries": [
                    "Marine Mammal",
                    "Blubber Insulation",
                    "Flipping Movement",
                    "Coastal Dwellers"
                ]
            },
            {
                "topic": [
                    "Gazelle",
                    "Gazelles"
                ],
                "entries": [
                    "Bounding Run",
                    "Grassland Resident",
                    "Twisted Horns",
                    "Flock Dynamics"
                ]
            },
            {
                "topic": [
                    "Vulture",
                    "Vultures"
                ],
                "entries": [
                    "Scavenger Bird",
                    "Bald Head",
                    "Thermal Soaring",
                    "Duff Feeding"
                ]
            },
            {
                "topic": [
                    "Scorpion",
                    "Scorpions"
                ],
                "entries": [
                    "Exoskeleton",
                    "Pincer Claws",
                    "Venomous Tail",
                    "Desert Dweller"
                ]
            },
            {
                "topic": [
                    "Starfish",
                    "Starfishes"
                ],
                "entries": [
                    "Radial Symmetry",
                    "Sea Floor",
                    "Regenerative Limbs",
                    "Sessile"
                ]
            },
            {
                "topic": [
                    "Octopus",
                    "Octopuses"
                ],
                "entries": [
                    "Eight Arms",
                    "Camouflage",
                    "Intelligent",
                    "Ocean Crawler"
                ]
            },
            {
                "topic": [
                    "Salmon",
                    "Salmons"
                ],
                "entries": [
                    "Migration",
                    "Stream Spawning",
                    "Pink Flesh",
                    "Anadromous Fish"
                ]
            },
            {
                "topic": [
                    "Lobster",
                    "Lobsters"
                ],
                "entries": [
                    "Crustacean",
                    "Claw Defense",
                    "Sea Cuisine",
                    "Ocean Bottom"
                ]
            },
            {
                "topic": [
                    "Antelope",
                    "Antelopes"
                ],
                "entries": [
                    "Grazing Ungulate",
                    "Swift Runner",
                    "Horned",
                    "Grassland Habitat"
                ]
            },
            {
                "topic": [
                    "Hippo",
                    "Hippopotamus",
                    "Hippopotamuses"
                ],
                "entries": [
                    "Water Dweller",
                    "Massive Size",
                    "Herbivorous",
                    "African Rivers"
                ]
            },
            {
                "topic": [
                    "Gorilla",
                    "Gorillas"
                ],
                "entries": [
                    "Silverback",
                    "Forest Gentle",
                    "Vegetarian Diet",
                    "Troop"
                ]
            },
            {
                "topic": [
                    "Cobra",
                    "Cobras"
                ],
                "entries": [
                    "Hood Display",
                    "Venomous",
                    "Snake Charm",
                    "Desert Sands"
                ]
            },
            {
                "topic": [
                    "Volcano",
                    "Erupting Mountain"
                ],
                "entries": [
                    "Lava Flow",
                    "Magma",
                    "Ash Cloud",
                    "Crater"
                ]
            },
            {
                "topic": [
                    "Rainforest",
                    "Tropical Forest"
                ],
                "entries": [
                    "Dense Canopy",
                    "Humidity",
                    "Biodiversity",
                    "Amazon"
                ]
            },
            {
                "topic": [
                    "Desert",
                    "Arid Land"
                ],
                "entries": [
                    "Sand Dunes",
                    "Cacti",
                    "Extreme Heat",
                    "Oasis"
                ]
            },
            {
                "topic": [
                    "Tornado",
                    "Twister"
                ],
                "entries": [
                    "Funnel Cloud",
                    "Strong Winds",
                    "Storm Chase",
                    "Rotating Column"
                ]
            },
            {
                "topic": [
                    "Glacier",
                    "Ice River"
                ],
                "entries": [
                    "Ice Sheets",
                    "Calving",
                    "Polar Regions",
                    "Crevasses"
                ]
            },
            {
                "topic": [
                    "Coral Reef",
                    "Marine Garden"
                ],
                "entries": [
                    "Great Barrier Reef",
                    "Polyps",
                    "Colorful Fish",
                    "Warm Waters"
                ]
            },
            {
                "topic": [
                    "Waterfall",
                    "Cascading Stream"
                ],
                "entries": [
                    "Plunge Pool",
                    "Niagara",
                    "Vertical Drop",
                    "Mist"
                ]
            },
            {
                "topic": [
                    "Earthquake",
                    "Seismic Event"
                ],
                "entries": [
                    "Tectonic Plates",
                    "Richter Scale",
                    "Aftershocks",
                    "Epicenter"
                ]
            },
            {
                "topic": [
                    "Hurricane",
                    "Cyclone"
                ],
                "entries": [
                    "Eye Wall",
                    "Tropical Storm",
                    "Storm Surge",
                    "High Winds"
                ]
            },
            {
                "topic": [
                    "Fjord",
                    "Glacial Valley"
                ],
                "entries": [
                    "Steep Cliffs",
                    "Deep Inlet",
                    "Norway",
                    "U-shaped Valley"
                ]
            },
            {
                "topic": [
                    "Aurora Borealis",
                    "Northern Lights"
                ],
                "entries": [
                    "Magnetic Poles",
                    "Charged Particles",
                    "Colorful Display",
                    "Solar Winds"
                ]
            },
            {
                "topic": [
                    "Moon",
                    "Lunar Body",
                    "The Moon"
                ],
                "entries": [
                    "Craters",
                    "Phases",
                    "Apollo Missions",
                    "Tides"
                ]
            },
            {
                "topic": [
                    "Milky Way",
                    "The Milky Way",
                    "Galaxy",
                    "The Galaxy"
                ],
                "entries": [
                    "Spiral Arms",
                    "100 Billion Stars",
                    "Solar System",
                    "Sagittarius A*"
                ]
            },
            {
                "topic": [
                    "Sun",
                    "The Sun",
                    "Solar Star"
                ],
                "entries": [
                    "Fusion",
                    "Heliosphere",
                    "Solar Flares",
                    "Sunspots"
                ]
            },
            {
                "topic": [
                    "Space Shuttle",
                    "Orbiter"
                ],
                "entries": [
                    "Reusable",
                    "Columbia",
                    "Heat Shields",
                    "Payload Bay"
                ]
            },
            {
                "topic": [
                    "Satellite"
                ],
                "entries": [
                    "Communication",
                    "Weather Monitoring",
                    "Orbital Craft",
                    "GPS"
                ]
            },
            {
                "topic": [
                    "International Space Station",
                    "ISS",
                    "Space Station",
                    "Orbital Lab"
                ],
                "entries": [
                    "American-Russian Collaboration",
                    "Zero Gravity",
                    "Research",
                    "Crew Habitation"
                ]
            },
            {
                "topic": [
                    "Solar Eclipse",
                    "Eclipse"
                ],
                "entries": [
                    "Lunar Occultation",
                    "Totality",
                    "Diamond Ring Effect",
                    "Sun Obscured"
                ]
            }
        ]
    },
    "persons_and_organizations": {
        "topics": [
            {
                "topic": [
                    "Albert Einstein",
                    "Einstein"
                ],
                "entries": [
                    "Theory of relativity",
                    "Physicist",
                    "E=mc^2",
                    "Nobel Prize"
                ]
            },
            {
                "topic": [
                    "Queen Elizabeth II",
                    "Queen Elizabeth",
                    "Elizabeth",
                    "Elizabeth II"
                ],
                "entries": [
                    "British monarchy",
                    "Longest reigning",
                    "Commonwealth",
                    "Royal duties"
                ]
            },
            {
                "topic": [
                    "Steve Jobs",
                    "Jobs"
                ],
                "entries": [
                    "Apple co-founder",
                    "iPhone",
                    "Innovative design",
                    "Pixar"
                ]
            },
            {
                "topic": [
                    "Mona Lisa",
                    "La Gioconda"
                ],
                "entries": [
                    "Leonardo da Vinci",
                    "Louvre",
                    "Renaissance",
                    "Mysterious smile"
                ]
            },
            {
                "topic": [
                    "Walt Disney",
                    "Disney"
                ],
                "entries": [
                    "Mickey Mouse",
                    "Animation",
                    "Theme parks",
                    "Fantasy"
                ]
            },
            {
                "topic": [
                    "Nelson Mandela",
                    "Mandela"
                ],
                "entries": [
                    "Apartheid",
                    "South Africa",
                    "Nobel Peace Prize",
                    "Presidency"
                ]
            },
            {
                "topic": [
                    "Shakespeare",
                    "William Shakespeare"
                ],
                "entries": [
                    "Playwright",
                    "Romeo and Juliet",
                    "Hamlet",
                    "Elizabethan England"
                ]
            },
            {
                "topic": [
                    "Mahatma Gandhi",
                    "Gandhi"
                ],
                "entries": [
                    "Nonviolence",
                    "India",
                    "Salt March",
                    "Independence"
                ]
            },
            {
                "topic": [
                    "Mother Teresa",
                    "Teresa"
                ],
                "entries": [
                    "Calcutta",
                    "Missionaries of Charity",
                    "Nobel Peace Prize",
                    "Saint"
                ]
            },
            {
                "topic": [
                    "Microsoft",
                    "Micro-Soft"
                ],
                "entries": [
                    "Windows",
                    "Bill Gates",
                    "Software",
                    "Redmond"
                ]
            },
            {
                "topic": [
                    "Vincent van Gogh",
                    "Van Gogh"
                ],
                "entries": [
                    "Starry Night",
                    "Post-Impressionism",
                    "Dutch",
                    "Ear incident"
                ]
            },
            {
                "topic": [
                    "Harvard University",
                    "Harvard"
                ],
                "entries": [
                    "Ivy League",
                    "Cambridge, MA",
                    "Research",
                    "Founded 1636"
                ]
            },
            {
                "topic": [
                    "Lionel Messi",
                    "Messi"
                ],
                "entries": [
                    "Barcelona",
                    "Argentina",
                    "Goalscorer",
                    "Ballon d'Or"
                ]
            },
            {
                "topic": [
                    "Tesla",
                    "Nikola Tesla"
                ],
                "entries": [
                    "Alternating current",
                    "Inventor",
                    "Eccentric genius",
                    "Electricity"
                ]
            },
            {
                "topic": [
                    "Mozart",
                    "Wolfgang Amadeus Mozart"
                ],
                "entries": [
                    "Composer",
                    "Classical",
                    "Symphony",
                    "Viennese"
                ]
            },
            {
                "topic": [
                    "The White House",
                    "Whitehouse",
                    "White House"
                ],
                "entries": [
                    "Oval Office",
                    "President's residence",
                    "Washington, D.C.",
                    "Historic"
                ]
            },
            {
                "topic": [
                    "Florence Nightingale",
                    "Nightingale"
                ],
                "entries": [
                    "Nursing",
                    "Crimean War",
                    "Statistical work",
                    "Victorian England"
                ]
            },
            {
                "topic": [
                    "Barack Obama",
                    "Obama"
                ],
                "entries": [
                    "44th President",
                    "Affordable Care Act",
                    "Nobel Peace Prize",
                    "Change"
                ]
            },
            {
                "topic": [
                    "Jane Austen",
                    "Austen"
                ],
                "entries": [
                    "Pride and Prejudice",
                    "Novelist",
                    "Regency",
                    "Social commentary"
                ]
            },
            {
                "topic": [
                    "Mickey Mouse",
                    "Mickey"
                ],
                "entries": [
                    "Disney",
                    "Animated",
                    "Iconic ears",
                    "Steamboat Willie"
                ]
            },
            {
                "topic": [
                    "Muhammad Ali",
                    "Ali"
                ],
                "entries": [
                    "Boxer",
                    "Float like a butterfly",
                    "Heavyweight champion",
                    "Olympic gold"
                ]
            },
            {
                "topic": [
                    "Julius Caesar",
                    "Caesar"
                ],
                "entries": [
                    "Roman leader",
                    "Dictator",
                    "Assassination",
                    "Gallic War"
                ]
            },
            {
                "topic": [
                    "Napoleon Bonaparte",
                    "Napoleon"
                ],
                "entries": [
                    "Emperor",
                    "French Revolution",
                    "Waterloo",
                    "Corsica"
                ]
            },
            {
                "topic": [
                    "Thomas Edison",
                    "Edison"
                ],
                "entries": [
                    "Light bulb",
                    "Inventor",
                    "Menlo Park",
                    "Phonograph"
                ]
            },
            {
                "topic": [
                    "Coco Chanel",
                    "Chanel"
                ],
                "entries": [
                    "Fashion designer",
                    "No. 5",
                    "Little black dress",
                    "Paris"
                ]
            },
            {
                "topic": [
                    "Galileo Galilei",
                    "Galileo"
                ],
                "entries": [
                    "Astronomy",
                    "Telescope",
                    "Heliocentrism",
                    "Italian"
                ]
            },
            {
                "topic": [
                    "Michael Jordan",
                    "Jordan"
                ],
                "entries": [
                    "Basketball",
                    "Chicago Bulls",
                    "Air",
                    "23"
                ]
            },
            {
                "topic": [
                    "Charles Darwin",
                    "Darwin"
                ],
                "entries": [
                    "Evolution",
                    "Natural selection",
                    "Galapagos Islands",
                    "Origin of species"
                ]
            },
            {
                "topic": [
                    "Elon Musk",
                    "Musk"
                ],
                "entries": [
                    "Tesla",
                    "SpaceX",
                    "Entrepreneur",
                    "Innovation"
                ]
            },
            {
                "topic": [
                    "Beethoven",
                    "Ludwig van Beethoven"
                ],
                "entries": [
                    "Composer",
                    "Symphonies",
                    "Deafness",
                    "Classical"
                ]
            },
            {
                "topic": [
                    "Cleopatra",
                    "Cleopatra VII"
                ],
                "entries": [
                    "Egypt",
                    "Julius Caesar",
                    "Mark Antony",
                    "Queen"
                ]
            },
            {
                "topic": [
                    "Ernest Hemingway",
                    "Hemingway"
                ],
                "entries": [
                    "The Old Man and the Sea",
                    "War correspondent",
                    "Nobel Prize",
                    "Writing style"
                ]
            },
            {
                "topic": [
                    "Marilyn Monroe",
                    "Monroe"
                ],
                "entries": [
                    "Hollywood icon",
                    "Blonde bombshell",
                    "Diamonds",
                    "The Seven Year Itch"
                ]
            },
            {
                "topic": [
                    "Charles Dickens",
                    "Dickens"
                ],
                "entries": [
                    "Oliver Twist",
                    "Victorian London",
                    "Social commentary",
                    "Serial publications"
                ]
            },
            {
                "topic": [
                    "Martin Luther King Jr.",
                    "Martin Luther King",
                    "Martin Luther King JR",
                    "Martin Luther King Junior",
                    "MLK"
                ],
                "entries": [
                    "Civil rights",
                    "I Have a Dream",
                    "Montgomery Bus Boycott",
                    "Nobel Peace Prize"
                ]
            },
            {
                "topic": [
                    "Alexander the Great",
                    "Alexander"
                ],
                "entries": [
                    "Macedonian empire",
                    "Conqueror",
                    "Aristotle",
                    "Battle of Gaugamela"
                ]
            },
            {
                "topic": [
                    "Meryl Streep",
                    "Streep"
                ],
                "entries": [
                    "The Iron Lady",
                    "Academy Awards",
                    "Drama roles",
                    "Acting legend"
                ]
            },
            {
                "topic": [
                    "Leonardo DiCaprio",
                    "DiCaprio"
                ],
                "entries": [
                    "Titanic",
                    "Environmental activism",
                    "Oscar winner",
                    "Martin Scorsese collaborations"
                ]
            },
            {
                "topic": [
                    "Scarlett Johansson",
                    "Johansson"
                ],
                "entries": [
                    "Black Widow",
                    "Marvel Cinematic Universe",
                    "Tony Award winner",
                    "Independent films"
                ]
            },
            {
                "topic": [
                    "Denzel Washington",
                    "Washington"
                ],
                "entries": [
                    "Training Day",
                    "Oscar winner",
                    "Stage acting",
                    "Director"
                ]
            },
            {
                "topic": [
                    "Angelina Jolie",
                    "Jolie"
                ],
                "entries": [
                    "Tomb Raider",
                    "Humanitarian work",
                    "Oscar winner",
                    "Action roles"
                ]
            },
            {
                "topic": [
                    "Tom Hanks",
                    "Hanks"
                ],
                "entries": [
                    "Forrest Gump",
                    "Toy Story",
                    "Oscar winner",
                    "American culture icon"
                ]
            },
            {
                "topic": [
                    "Natalie Portman",
                    "Portman"
                ],
                "entries": [
                    "Black Swan",
                    "Star Wars prequels",
                    "Harvard graduate",
                    "Academy Award winner"
                ]
            },
            {
                "topic": [
                    "Robert De Niro",
                    "De Niro"
                ],
                "entries": [
                    "Taxi Driver",
                    "The Godfather Part II",
                    "Method acting",
                    "Martin Scorsese collaborations"
                ]
            },
            {
                "topic": [
                    "Jennifer Lawrence",
                    "Lawrence"
                ],
                "entries": [
                    "The Hunger Games",
                    "Silver Linings Playbook",
                    "Youngest Oscar nominee",
                    "Comedy and drama"
                ]
            },
            {
                "topic": [
                    "Morgan Freeman",
                    "Freeman"
                ],
                "entries": [
                    "The Shawshank Redemption",
                    "Distinctive voice",
                    "Narration roles",
                    "Oscar winner"
                ]
            },
            {
                "topic": [
                    "Emma Watson",
                    "Watson"
                ],
                "entries": [
                    "Harry Potter series",
                    "Hermione Granger",
                    "Gender equality advocacy",
                    "UN Women Goodwill Ambassador"
                ]
            },
            {
                "topic": [
                    "Brad Pitt",
                    "Pitt"
                ],
                "entries": [
                    "Fight Club",
                    "Once Upon a Time in Hollywood",
                    "Oscar winner",
                    "Hollywood producer"
                ]
            },
            {
                "topic": [
                    "Cate Blanchett",
                    "Blanchett"
                ],
                "entries": [
                    "Blue Jasmine",
                    "Elizabeth",
                    "Oscar winner",
                    "Versatile actress"
                ]
            },
            {
                "topic": [
                    "Johnny Depp",
                    "Depp"
                ],
                "entries": [
                    "Pirates of the Caribbean",
                    "Tim Burton collaborations",
                    "Golden Globe winner",
                    "Eccentric roles"
                ]
            },
            {
                "topic": [
                    "Nicole Kidman",
                    "Kidman"
                ],
                "entries": [
                    "Moulin Rouge",
                    "Big Little Lies",
                    "Oscar winner",
                    "Australian actress"
                ]
            },
            {
                "topic": [
                    "Will Smith",
                    "Smith"
                ],
                "entries": [
                    "The Fresh Prince of Bel-Air",
                    "Men in Black",
                    "Oscar winner",
                    "Blockbuster actor"
                ]
            },
            {
                "topic": [
                    "Anne Frank",
                    "The Diary of a Young Girl",
                    "Anne Frank's Diary",
                    "The Diary of Anne Frank"
                ],
                "entries": [
                    "Holocaust",
                    "Amsterdam Attic",
                    "Diary",
                    "Adolescent Experiences"
                ]
            },
            {
                "topic": [
                    "Anne Hathaway",
                    "Hathaway"
                ],
                "entries": [
                    "Les Mis\u00e9rables",
                    "The Devil Wears Prada",
                    "Oscar winner",
                    "Broadway experience"
                ]
            },
            {
                "topic": [
                    "Christian Bale",
                    "Bale"
                ],
                "entries": [
                    "The Dark Knight",
                    "American Psycho",
                    "Method acting",
                    "Oscar winner"
                ]
            },
            {
                "topic": [
                    "Charlize Theron",
                    "Theron"
                ],
                "entries": [
                    "Mad Max: Fury Road",
                    "Monster",
                    "Oscar winner",
                    "Action and drama"
                ]
            },
            {
                "topic": [
                    "Hugh Jackman",
                    "Jackman"
                ],
                "entries": [
                    "Wolverine",
                    "The Greatest Showman",
                    "Tony Award winner",
                    "Australian star"
                ]
            },
            {
                "topic": [
                    "United Nations",
                    "UN"
                ],
                "entries": [
                    "Peacekeeping",
                    "International Law",
                    "Human Rights",
                    "Security Council"
                ]
            },
            {
                "topic": [
                    "The European Union",
                    "European Union",
                    "EU",
                    "The EU",
                    "European Economic Community"
                ],
                "entries": [
                    "Maastricht Treaty",
                    "Brussels",
                    "Euro Currency",
                    "Schengen Area"
                ]
            },
            {
                "topic": [
                    "World Health Organization",
                    "WHO",
                    "the WHO",
                    "the World Health Organization"
                ],
                "entries": [
                    "Pandemic Response",
                    "Vaccination Campaigns",
                    "Health Regulations",
                    "Global Health Body"
                ]
            },
            {
                "topic": [
                    "NASA",
                    "National Aeronautics and Space Administration"
                ],
                "entries": [
                    "Space Exploration",
                    "Apollo Missions",
                    "Mars Rovers",
                    "Astronauts"
                ]
            },
            {
                "topic": [
                    "International Monetary Fund",
                    "IMF"
                ],
                "entries": [
                    "International Financial Stability",
                    "Economic Surveillance",
                    "Bailout Packages",
                    "Quota System"
                ]
            },
            {
                "topic": [
                    "Red Cross",
                    "International Committee of the Red Cross",
                    "ICRC"
                ],
                "entries": [
                    "Humanitarian Aid",
                    "Geneva Conventions",
                    "Disaster Relief",
                    "Neutrality"
                ]
            },
            {
                "topic": [
                    "Greenpeace",
                    "Green Peace",
                    "GP"
                ],
                "entries": [
                    "Environmental Activism",
                    "Direct Action",
                    "Whale Conservation",
                    "Climate Change"
                ]
            },
            {
                "topic": [
                    "UNESCO",
                    "United Nations Educational, Scientific and Cultural Organization"
                ],
                "entries": [
                    "World Heritage Sites",
                    "Cultural Preservation",
                    "Education Programs",
                    "Science Initiatives"
                ]
            },
            {
                "topic": [
                    "NATO",
                    "North Atlantic Treaty Organization"
                ],
                "entries": [
                    "Military Alliance",
                    "Collective Defense",
                    "Brussels Headquarters",
                    "Member Nations"
                ]
            }
        ]
    },
    "places_events": {
        "topics": [
            {
                "topic": [
                    "Eiffel Tower",
                    "Tour Eiffel",
                    "Eiffel"
                ],
                "entries": [
                    "Iron lattice",
                    "Paris",
                    "Gustave Eiffel",
                    "Romantic"
                ]
            },
            {
                "topic": [
                    "Statue of Liberty",
                    "Lady Liberty",
                    "Liberty Enlightening the World"
                ],
                "entries": [
                    "New York",
                    "Gift from France",
                    "Ellis Island",
                    "Torch"
                ]
            },
            {
                "topic": [
                    "Pyramids of Giza",
                    "Giza Pyramids",
                    "Pyramids"
                ],
                "entries": [
                    "Egypt",
                    "Ancient Tombs",
                    "Pharaohs",
                    "Sphinx"
                ]
            },
            {
                "topic": [
                    "Big Ben",
                    "Clock Tower",
                    "Elizabeth Tower"
                ],
                "entries": [
                    "London",
                    "Westminster",
                    "Great Bell",
                    "Time"
                ]
            },
            {
                "topic": [
                    "Taj Mahal",
                    "Crown of Palaces",
                    "Taj"
                ],
                "entries": [
                    "India",
                    "Marble",
                    "Mughal Emperor",
                    "Love"
                ]
            },
            {
                "topic": [
                    "Colosseum",
                    "Flavian Amphitheatre",
                    "Roman Colosseum"
                ],
                "entries": [
                    "Rome",
                    "Gladiators",
                    "Ancient Arena",
                    "Italy"
                ]
            },
            {
                "topic": [
                    "Christ the Redeemer",
                    "Cristo Redentor",
                    "Redeemer Statue"
                ],
                "entries": [
                    "Rio de Janeiro",
                    "Brazil",
                    "Corcovado Mountain",
                    "Iconic"
                ]
            },
            {
                "topic": [
                    "Empire State Building",
                    "Empire State",
                    "New York Landmark"
                ],
                "entries": [
                    "Skyscraper",
                    "Manhattan",
                    "Observation Deck",
                    "Art Deco"
                ]
            },
            {
                "topic": [
                    "Mount Everest",
                    "Everest",
                    "Sagarmatha"
                ],
                "entries": [
                    "Highest Peak",
                    "Himalayas",
                    "Nepal",
                    "Climbers"
                ]
            },
            {
                "topic": [
                    "Stonehenge",
                    "Stone Circle",
                    "Henge"
                ],
                "entries": [
                    "Wiltshire",
                    "Prehistoric Monument",
                    "Megalithic",
                    "Astronomy"
                ]
            },
            {
                "topic": [
                    "Niagara Falls",
                    "Niagara",
                    "Horseshoe Falls"
                ],
                "entries": [
                    "Waterfall",
                    "Canada",
                    "Hydropower",
                    "Tourist"
                ]
            },
            {
                "topic": [
                    "Buckingham Palace",
                    "Buckingham",
                    "The Queen's Palace"
                ],
                "entries": [
                    "Royal Residence",
                    "Changing Guard",
                    "London",
                    "Monarchy"
                ]
            },
            {
                "topic": [
                    "Golden Gate Bridge",
                    "Golden Gate",
                    "San Francisco Bridge"
                ],
                "entries": [
                    "Suspension Bridge",
                    "San Francisco",
                    "Orange",
                    "Fog"
                ]
            },
            {
                "topic": [
                    "The Louvre",
                    "Louvre",
                    "The Louvre Museum"
                ],
                "entries": [
                    "Art",
                    "Mona Lisa",
                    "Paris",
                    "Glass Pyramid"
                ]
            },
            {
                "topic": [
                    "Burj Khalifa",
                    "Khalifa Tower",
                    "Burj"
                ],
                "entries": [
                    "Tallest Building",
                    "Dubai",
                    "Skyscraper",
                    "Observation Deck"
                ]
            },
            {
                "topic": [
                    "Vatican City",
                    "Vatican",
                    "Holy See"
                ],
                "entries": [
                    "Papal Authority",
                    "Rome",
                    "Catholicism",
                    "Sistine Chapel"
                ]
            },
            {
                "topic": [
                    "Alcatraz Island",
                    "Alcatraz",
                    "The Rock"
                ],
                "entries": [
                    "Prison",
                    "Escape Attempts",
                    "San Francisco",
                    "Tourist Attraction"
                ]
            },
            {
                "topic": [
                    "Tower of Pisa",
                    "Leaning Tower of Pisa",
                    "Pisa Tower"
                ],
                "entries": [
                    "Lean",
                    "Italy",
                    "White Marble",
                    "Bell Tower"
                ]
            },
            {
                "topic": [
                    "The Sagrada Familia",
                    "Sagrada Familia",
                    "Basilica of the Holy Family"
                ],
                "entries": [
                    "Barcelona",
                    "Gaudi",
                    "Unfinished",
                    "Cathedral"
                ]
            },
            {
                "topic": [
                    "Great Barrier Reef",
                    "The Reef",
                    "Great Reef"
                ],
                "entries": [
                    "Coral",
                    "Australia",
                    "Marine Life",
                    "Diving"
                ]
            },
            {
                "topic": [
                    "London Eye",
                    "Millennium Wheel",
                    "Observation Wheel"
                ],
                "entries": [
                    "Ferris Wheel",
                    "River Thames",
                    "Panoramic Views",
                    "Tourist Attraction"
                ]
            },
            {
                "topic": [
                    "Paris",
                    "City of Light"
                ],
                "entries": [
                    "Eiffel Tower",
                    "Louvre Museum",
                    "Notre-Dame Cathedral",
                    "Romantic city"
                ]
            },
            {
                "topic": [
                    "New York",
                    "New York City",
                    "NYC"
                ],
                "entries": [
                    "Statue of Liberty",
                    "Times Square",
                    "Central Park",
                    "Empire State Building"
                ]
            },
            {
                "topic": [
                    "Tokyo",
                    "Japanese capital"
                ],
                "entries": [
                    "Shibuya Crossing",
                    "Skytree",
                    "Cherry blossoms",
                    "High-tech city"
                ]
            },
            {
                "topic": [
                    "London",
                    "British capital"
                ],
                "entries": [
                    "Big Ben",
                    "Tower Bridge",
                    "Buckingham Palace",
                    "West End theaters"
                ]
            },
            {
                "topic": [
                    "Rome",
                    "Eternal City"
                ],
                "entries": [
                    "Colosseum",
                    "Vatican City",
                    "Roman Forum",
                    "Piazza Navona"
                ]
            },
            {
                "topic": [
                    "Bangkok",
                    "Thai capital"
                ],
                "entries": [
                    "Grand Palace",
                    "Floating markets",
                    "Wat Arun",
                    "Street food"
                ]
            },
            {
                "topic": [
                    "Dubai",
                    "Modern metropolis"
                ],
                "entries": [
                    "Burj Khalifa",
                    "Palm Jumeirah",
                    "Mall",
                    "Desert safaris"
                ]
            },
            {
                "topic": [
                    "Rio de Janeiro",
                    "Rio"
                ],
                "entries": [
                    "Christ the Redeemer",
                    "Copacabana Beach",
                    "Sugarloaf Mountain",
                    "Carnival"
                ]
            },
            {
                "topic": [
                    "Beijing",
                    "Peking",
                    "Chinese capital"
                ],
                "entries": [
                    "Great Wall of China",
                    "Forbidden City",
                    "Tiananmen Square",
                    "Temple of Heaven"
                ]
            },
            {
                "topic": [
                    "Sydney",
                    "Harbour City"
                ],
                "entries": [
                    "Opera House",
                    "Harbour Bridge",
                    "Bondi Beach",
                    "Blue Mountains"
                ]
            },
            {
                "topic": [
                    "Cape Town",
                    "Mother City"
                ],
                "entries": [
                    "Table Mountain",
                    "Robben Island",
                    "Cape of Good Hope",
                    "Winelands"
                ]
            },
            {
                "topic": [
                    "Table Mountain"
                ],
                "entries": [
                    "Cape Town",
                    "Iconic landmark",
                    "Flat-topped",
                    "Natural Wonder"
                ]
            },
            {
                "topic": [
                    "Florence",
                    "Firenze",
                    "Italian city"
                ],
                "entries": [
                    "Duomo",
                    "Uffizi Gallery",
                    "Ponte Vecchio",
                    "Michelangelo's David"
                ]
            },
            {
                "topic": [
                    "San Francisco",
                    "City by the Bay"
                ],
                "entries": [
                    "Golden Gate Bridge",
                    "Alcatraz Island",
                    "Fisherman's Wharf",
                    "Cable cars"
                ]
            },
            {
                "topic": [
                    "Venice",
                    "City of Canals"
                ],
                "entries": [
                    "Grand Canal",
                    "St. Mark's Basilica",
                    "Gondolas",
                    "Piazza San Marco"
                ]
            },
            {
                "topic": [
                    "Berlin",
                    "German capital"
                ],
                "entries": [
                    "Brandenburg Gate",
                    "Wall",
                    "Museum Island",
                    "Reichstag"
                ]
            },
            {
                "topic": [
                    "The Panama Canal",
                    "Panama Canal"
                ],
                "entries": [
                    "Strategic Global Trade Route",
                    "Connecting Oceans",
                    "Engineering Marvel",
                    "Miraflores Locks"
                ]
            },
            {
                "topic": [
                    "Amsterdam",
                    "Dutch capital"
                ],
                "entries": [
                    "Canals",
                    "Anne Frank House",
                    "Van Gogh Museum",
                    "Bicycles"
                ]
            },
            {
                "topic": [
                    "Barcelona",
                    "Catalan capital"
                ],
                "entries": [
                    "Sagrada Familia",
                    "Park G\u00fcell",
                    "Las Ramblas",
                    "Beach city"
                ]
            },
            {
                "topic": [
                    "Istanbul",
                    "City of Two Continents"
                ],
                "entries": [
                    "Hagia Sophia",
                    "Blue Mosque",
                    "Grand Bazaar",
                    "Bosphorus"
                ]
            },
            {
                "topic": [
                    "Moscow",
                    "Russian capital"
                ],
                "entries": [
                    "Red Square",
                    "Kremlin",
                    "St. Basil's Cathedral",
                    "Bolshoi Theatre"
                ]
            },
            {
                "topic": [
                    "Olympics",
                    "The Olympics",
                    "The Olympic Games",
                    "Olympic Games"
                ],
                "entries": [
                    "Five Rings",
                    "Summer and Winter",
                    "Torch Relay",
                    "Medal Ceremony"
                ]
            },
            {
                "topic": [
                    "World War I",
                    "World War One",
                    "WWI",
                    "WW1",
                    "First World War",
                    "The First World War",
                    "Great War",
                    "The Great War"
                ],
                "entries": [
                    "Trench Warfare",
                    "Archduke Assassination",
                    "Battle of the Somme",
                    "Treaty of Versailles"
                ]
            },
            {
                "topic": [
                    "Christmas",
                    "Xmas",
                    "Yuletide"
                ],
                "entries": [
                    "Santa Claus",
                    "Advent Calendar",
                    "Gift Giving",
                    "Birth of Jesus"
                ]
            },
            {
                "topic": [
                    "Easter",
                    "Paschal Festival",
                    "Resurrection Sunday"
                ],
                "entries": [
                    "Egg Hunt",
                    "Bunny",
                    "Good Friday",
                    "Resurrection"
                ]
            },
            {
                "topic": [
                    "Thanksgiving",
                    "Turkey Day",
                    "Harvest Festival"
                ],
                "entries": [
                    "Pumpkin Pie",
                    "Turkey Feast",
                    "Family Gatherings",
                    "Thankfulness"
                ]
            },
            {
                "topic": [
                    "New Year's Eve",
                    "NYE",
                    "December 31st"
                ],
                "entries": [
                    "Countdown",
                    "Fireworks",
                    "Ball Drop",
                    "Midnight Toast"
                ]
            },
            {
                "topic": [
                    "Valentine's Day",
                    "V-Day",
                    "Saint Valentine's Day",
                    "Valentine's"
                ],
                "entries": [
                    "Roses",
                    "Love Letters",
                    "Cupid",
                    "February"
                ]
            },
            {
                "topic": [
                    "Halloween",
                    "All Hallows' Eve",
                    "Samhain"
                ],
                "entries": [
                    "Costumes",
                    "Trick-or-Treat",
                    "Pumpkin Carving",
                    "Spooky Decorations"
                ]
            },
            {
                "topic": [
                    "The Civil War",
                    "Civil War",
                    "American Civil War",
                    "The American Civil War",
                    "War Between the States"
                ],
                "entries": [
                    "Gettysburg",
                    "Abraham Lincoln",
                    "Union vs Confederacy",
                    "Slavery"
                ]
            },
            {
                "topic": [
                    "The Cold War",
                    "Cold War",
                    "Cold War Era"
                ],
                "entries": [
                    "Nuclear Arms",
                    "Iron Curtain",
                    "US-Soviet Tensions",
                    "Cuban Missile Crisis"
                ]
            },
            {
                "topic": [
                    "The Vietnam War",
                    "Vietnam War",
                    "Vietnam Conflict",
                    "Second Indochina War"
                ],
                "entries": [
                    "Ho Chi Minh",
                    "Viet Cong",
                    "Agent Orange",
                    "Tet Offensive"
                ]
            },
            {
                "topic": [
                    "The Gulf War",
                    "Gulf War",
                    "Operation Desert Storm",
                    "First Iraq War"
                ],
                "entries": [
                    "Kuwait Invasion",
                    "Scud Missiles",
                    "Coalition Forces",
                    "Saddam Hussein"
                ]
            },
            {
                "topic": [
                    "The French Revolution",
                    "French Revolution",
                    "French Political Upheaval",
                    "Revolution of 1789"
                ],
                "entries": [
                    "Bastille",
                    "Guillotine",
                    "Reign of Terror",
                    "Napoleon"
                ]
            },
            {
                "topic": [
                    "The American Revolution",
                    "American Revolution",
                    "War of Independence",
                    "US War of Independence",
                    "Revolutionary War"
                ],
                "entries": [
                    "George Washington",
                    "Boston Tea Party",
                    "Lexington and Concord",
                    "Declaration of Independence"
                ]
            },
            {
                "topic": [
                    "Ancient Egypt",
                    "Egypt",
                    "Egyptian Civilization",
                    "Pharaoh Times",
                    "Pharaohs",
                    "The Pharaohs"
                ],
                "entries": [
                    "Pyramids",
                    "Hieroglyphics",
                    "Nile River",
                    "Mummification"
                ]
            },
            {
                "topic": [
                    "The Roman Empire",
                    "The Romans",
                    "Roman Empire",
                    "Roman Imperium",
                    "Empire of Rome"
                ],
                "entries": [
                    "Julius Caesar",
                    "Senate",
                    "Colosseum",
                    "Legions"
                ]
            },
            {
                "topic": [
                    "World Cup",
                    "The World Cup",
                    "FIFA World Cup",
                    "Soccer Tournament"
                ],
                "entries": [
                    "Golden Boot",
                    "Penalty Shootouts",
                    "FIFA",
                    "Trophy Lift"
                ]
            },
            {
                "topic": [
                    "Wimbledon",
                    "Wimbledon Championships",
                    "The Championships"
                ],
                "entries": [
                    "Grass Courts",
                    "All England Club",
                    "Strawberries and Cream",
                    "Tennis Whites"
                ]
            },
            {
                "topic": [
                    "Tour de France",
                    "The Tour de France",
                    "Le Grand Tour",
                    "French Cycling Race"
                ],
                "entries": [
                    "Yellow Jersey",
                    "Climbs",
                    "Cycling",
                    "Alpe d'Huez"
                ]
            },
            {
                "topic": [
                    "The Nobel Prizes",
                    "Nobel Prize",
                    "Nobel Prizes",
                    "Nobel Awards",
                    "International Laurels"
                ],
                "entries": [
                    "Peace Prize",
                    "Committees",
                    "Inventor",
                    "Ceremony in Stockholm"
                ]
            },
            {
                "topic": [
                    "The Oscars",
                    "Oscars",
                    "Academy Awards",
                    "Hollywood's Night"
                ],
                "entries": [
                    "Red Carpet",
                    "Golden Statuette",
                    "Best Picture",
                    "Acceptance Speech"
                ]
            },
            {
                "topic": [
                    "Marathon",
                    "The Marathon"
                ],
                "entries": [
                    "Mount Olympus",
                    "Messenger",
                    "42.195 Kilometers",
                    "Endurance"
                ]
            },
            {
                "topic": [
                    "Boxing Day",
                    "Day of Goodwill",
                    "St. Stephen's Day"
                ],
                "entries": [
                    "Post-Christmas",
                    "Gifts",
                    "Shopping Sales",
                    "Charity Events"
                ]
            },
            {
                "topic": [
                    "Mardi Gras",
                    "Fat Tuesday",
                    "Shrove Tuesday"
                ],
                "entries": [
                    "Parades",
                    "Beads",
                    "New Orleans",
                    "Carnival"
                ]
            },
            {
                "topic": [
                    "Day of the Dead",
                    "Dia de los Muertos",
                    "All Saints Day"
                ],
                "entries": [
                    "Sugar Skulls",
                    "Altars",
                    "Mexico",
                    "Marigolds"
                ]
            },
            {
                "topic": [
                    "Oktoberfest",
                    "Bavarian Beer Festival",
                    "Wiesn"
                ],
                "entries": [
                    "Munich",
                    "Lederhosen",
                    "Beer",
                    "Pretzels"
                ]
            },
            {
                "topic": [
                    "Festival of Colors",
                    "Holi",
                    "Holi Festival",
                    "Phagwah"
                ],
                "entries": [
                    "Colored Powder",
                    "Spring",
                    "Bonfires",
                    "Water Balloons"
                ]
            },
            {
                "topic": [
                    "Diwali",
                    "Deepavali",
                    "Festival of Lights"
                ],
                "entries": [
                    "Oil Lamps",
                    "Firecrackers",
                    "New Clothes",
                    "Goddess Lakshmi"
                ]
            },
            {
                "topic": [
                    "St. Patrick's Day",
                    "St. Patrick's",
                    "St Patrick's Day",
                    "St Patrick's",
                    "Saint Patrick's Day",
                    "Saint Patrick's",
                    "Irish Day",
                    "L\u00e1 Fh\u00e9ile P\u00e1draig"
                ],
                "entries": [
                    "Green Attire",
                    "Shamrock",
                    "Parades",
                    "Leprechauns"
                ]
            },
            {
                "topic": [
                    "Pearl Harbor",
                    "Pearl Harbour"
                ],
                "entries": [
                    "World War II",
                    "Attack",
                    "Hawaii",
                    "Naval Base"
                ]
            },
            {
                "topic": [
                    "Battle of Waterloo",
                    "Waterloo"
                ],
                "entries": [
                    "Napoleon",
                    "Defeat",
                    "Battle",
                    "Belgium"
                ]
            },
            {
                "topic": [
                    "JFK Assassination",
                    "JFK Killing",
                    "JFK"
                ],
                "entries": [
                    "Lee Harvey Oswald",
                    "Dallas",
                    "President",
                    "Motorcade"
                ]
            },
            {
                "topic": [
                    "The Moon Landing",
                    "Moon Landing"
                ],
                "entries": [
                    "One Small Step",
                    "Neil Armstrong",
                    "1969",
                    "Apollo 11"
                ]
            }
        ]
    },
    "sports_games_hobbies_cuisine": {
        "topics": [
            {
                "topic": [
                    "Soccer",
                    "Football",
                    "Association Football"
                ],
                "entries": [
                    "Goalkeeper",
                    "Penalty Kick",
                    "Offside Rule",
                    "World Cup"
                ]
            },
            {
                "topic": [
                    "Chess",
                    "Chess Game"
                ],
                "entries": [
                    "Board Game",
                    "Knights",
                    "Bishops",
                    "Checkmate"
                ]
            },
            {
                "topic": [
                    "Ice Hockey",
                    "Hockey",
                    "Puck Hockey"
                ],
                "entries": [
                    "Puck",
                    "Penalty Box",
                    "Faceoff",
                    "Stick Handling"
                ]
            },
            {
                "topic": [
                    "Tennis",
                    "Lawn Tennis",
                    "Court Tennis"
                ],
                "entries": [
                    "Grand Slam",
                    "Racket",
                    "Deuce",
                    "Baseline"
                ]
            },
            {
                "topic": [
                    "Cricket",
                    "Cricket Match",
                    "Pitch Cricket"
                ],
                "entries": [
                    "Wickets",
                    "Batsman",
                    "Innings",
                    "Bowler"
                ]
            },
            {
                "topic": [
                    "Basketball",
                    "Hoops",
                    "Basketball Game"
                ],
                "entries": [
                    "Dribbling",
                    "Dunk",
                    "Three-pointer",
                    "Shot Clock"
                ]
            },
            {
                "topic": [
                    "Baseball",
                    "Ballgame",
                    "Hardball"
                ],
                "entries": [
                    "Bat",
                    "Curveball",
                    "Dugout",
                    "Umpire"
                ]
            },
            {
                "topic": [
                    "American Football",
                    "Gridiron",
                    "NFL Football"
                ],
                "entries": [
                    "Touchdown",
                    "Quarterback",
                    "End Zone",
                    "Linebacker"
                ]
            },
            {
                "topic": [
                    "Golf",
                    "Links",
                    "Golfing"
                ],
                "entries": [
                    "Tee",
                    "Birdie",
                    "Caddie",
                    "Fairway"
                ]
            },
            {
                "topic": [
                    "Swimming",
                    "Aquatic Sport",
                    "Swim Racing"
                ],
                "entries": [
                    "Freestyle",
                    "Backstroke",
                    "Lanes",
                    "Flip Turn"
                ]
            },
            {
                "topic": [
                    "Rugby",
                    "Rugger",
                    "Rugby Union"
                ],
                "entries": [
                    "Scrum",
                    "Conversion",
                    "Try",
                    "Tackle"
                ]
            },
            {
                "topic": [
                    "Boxing",
                    "Prizefighting",
                    "Ring Sport"
                ],
                "entries": [
                    "Heavyweight",
                    "Uppercut",
                    "Knockout",
                    "Ring"
                ]
            },
            {
                "topic": [
                    "Bowling",
                    "Tenpin Bowling",
                    "Bowling Alley"
                ],
                "entries": [
                    "Strike",
                    "Gutter Ball",
                    "Pins",
                    "Lane"
                ]
            },
            {
                "topic": [
                    "Skiing",
                    "Snow Skiing",
                    "Alpine Skiing"
                ],
                "entries": [
                    "Slalom",
                    "Snow Groomer",
                    "Chalet",
                    "Bindings"
                ]
            },
            {
                "topic": [
                    "Ballet",
                    "Dance",
                    "Classical Dance"
                ],
                "entries": [
                    "Pirouette",
                    "Tutu",
                    "Barre",
                    "Pas de Deux"
                ]
            },
            {
                "topic": [
                    "Badminton",
                    "Shuttlecock",
                    "Court Sports"
                ],
                "entries": [
                    "Smash",
                    "Shuttle",
                    "Drop shot",
                    "Rally"
                ]
            },
            {
                "topic": [
                    "Horse Racing",
                    "Equestrian",
                    "Thoroughbred"
                ],
                "entries": [
                    "Jockey",
                    "Track",
                    "Finish line",
                    "Stakes"
                ]
            },
            {
                "topic": [
                    "Judo",
                    "Martial Arts",
                    "Combat Sports"
                ],
                "entries": [
                    "Throw",
                    "Ippon",
                    "Grapple",
                    "Tatami"
                ]
            },
            {
                "topic": [
                    "Bungee Jumping",
                    "Extreme Sports",
                    "Adventure Sports"
                ],
                "entries": [
                    "Cord",
                    "Jump",
                    "Plunge",
                    "Leap"
                ]
            },
            {
                "topic": [
                    "Rally Racing",
                    "Rally",
                    "Motorsport",
                    "Racing"
                ],
                "entries": [
                    "Stage",
                    "Car",
                    "Driver",
                    "Navigator"
                ]
            },
            {
                "topic": [
                    "Gardening",
                    "Horticulture"
                ],
                "entries": [
                    "Soil",
                    "Pruning Shears",
                    "Compost",
                    "Perennials"
                ]
            },
            {
                "topic": [
                    "Fishing",
                    "Angling"
                ],
                "entries": [
                    "Rod",
                    "Reel",
                    "Fishhook",
                    "Catch"
                ]
            },
            {
                "topic": [
                    "Knitting",
                    "Yarn Crafting"
                ],
                "entries": [
                    "Needle",
                    "Wool",
                    "Pattern",
                    "Row"
                ]
            },
            {
                "topic": [
                    "Photography",
                    "Camera Use"
                ],
                "entries": [
                    "Exposure",
                    "Shutter Speed",
                    "Lens",
                    "Tripod"
                ]
            },
            {
                "topic": [
                    "Doodling",
                    "Drawing"
                ],
                "entries": [
                    "Sketchbook",
                    "Pencil",
                    "Line",
                    "Shading"
                ]
            },
            {
                "topic": [
                    "Yoga",
                    "Mindful Stretching"
                ],
                "entries": [
                    "Mat",
                    "Pose",
                    "Downward-Facing Dog",
                    "Breathing"
                ]
            },
            {
                "topic": [
                    "Camping",
                    "Outdoor Lodging"
                ],
                "entries": [
                    "Tent",
                    "Campfire",
                    "Sleeping Bag",
                    "Hiking Boots"
                ]
            },
            {
                "topic": [
                    "Surfing",
                    "Wave Riding"
                ],
                "entries": [
                    "Surfboard",
                    "Wetsuit",
                    "Swell",
                    "Pipeline"
                ]
            },
            {
                "topic": [
                    "Meditation",
                    "Mindful Relaxation"
                ],
                "entries": [
                    "Mantra",
                    "Focus",
                    "Silence",
                    "Tranquility"
                ]
            },
            {
                "topic": [
                    "Pizza",
                    "Pizzerias",
                    "Italian Pie",
                    "Cheese Slice"
                ],
                "entries": [
                    "Tomato Sauce",
                    "Mozzarella",
                    "Pepperoni",
                    "Oven-baked"
                ]
            },
            {
                "topic": [
                    "Tacos",
                    "Taco",
                    "Mexican Handheld",
                    "Tortilla Wrap"
                ],
                "entries": [
                    "Corn Tortilla",
                    "Salsa",
                    "Ground Beef",
                    "Lettuce"
                ]
            },
            {
                "topic": [
                    "Dim Sum",
                    "Dimsum",
                    "Cantonese Bites",
                    "Dragon Buns"
                ],
                "entries": [
                    "Steamed Buns",
                    "Teahouse",
                    "Dumplings",
                    "Chicken Feet"
                ]
            },
            {
                "topic": [
                    "Hamburger",
                    "Burger",
                    "Beef Patty",
                    "Burgers"
                ],
                "entries": [
                    "Ground Beef",
                    "Sesame Bun",
                    "Pickles",
                    "Grilled"
                ]
            },
            {
                "topic": [
                    "Coffee",
                    "Coffees",
                    "Java",
                    "Brewed Beans"
                ],
                "entries": [
                    "Espresso Shot",
                    "Arabica",
                    "Roasted Beans",
                    "Barista"
                ]
            },
            {
                "topic": [
                    "Sushi",
                    "Sashimi",
                    "Rolls",
                    "Nigiri"
                ],
                "entries": [
                    "Raw Fish",
                    "Soy Sauce",
                    "Seaweed Wrap",
                    "Wasabi"
                ]
            },
            {
                "topic": [
                    "Curry",
                    "Curries",
                    "Spiced Stew",
                    "Indian Curry"
                ],
                "entries": [
                    "Coconut Milk",
                    "Turmeric",
                    "Chickpeas",
                    "Indian Dish"
                ]
            },
            {
                "topic": [
                    "Paella",
                    "Valencian Paella",
                    "Seafood Paella"
                ],
                "entries": [
                    "Saffron",
                    "Spanish",
                    "Seafood",
                    "Rice Dish"
                ]
            },
            {
                "topic": [
                    "Pad Thai",
                    "Thai Noodles",
                    "Street Pad Thai",
                    "Thai Stir-Fry"
                ],
                "entries": [
                    "Rice Noodles",
                    "Tamarind Paste",
                    "Peanuts",
                    "Thailand"
                ]
            },
            {
                "topic": [
                    "Croissant",
                    "Butter Croissant",
                    "Croissants"
                ],
                "entries": [
                    "French",
                    "Flaky Layers",
                    "Breakfast",
                    "Pastry"
                ]
            },
            {
                "topic": [
                    "Lasagna",
                    "Lasagne",
                    "Layered Pasta",
                    "Italian Casserole"
                ],
                "entries": [
                    "Oven-baked",
                    "Ground Meat",
                    "Tomato Sauce",
                    "Layers"
                ]
            },
            {
                "topic": [
                    "Ramen",
                    "Ramen Noodles",
                    "Japanese Soup",
                    "Broth Noodles"
                ],
                "entries": [
                    "Soy Sauce",
                    "Pork Broth",
                    "Miso",
                    "Egg"
                ]
            },
            {
                "topic": [
                    "Nachos",
                    "Nacho Platter",
                    "Corn Tortilla Chips",
                    "Cheesy Nachos"
                ],
                "entries": [
                    "Cheese",
                    "Corn Chips",
                    "Sour Cream",
                    "Guacamole"
                ]
            },
            {
                "topic": [
                    "Tapas",
                    "Spanish Tapas",
                    "Small Plates",
                    "Tapas Bar"
                ],
                "entries": [
                    "Spanish",
                    "Manchego Cheese",
                    "Chorizo",
                    "Shared"
                ]
            },
            {
                "topic": [
                    "Kimchi",
                    "Kimchee"
                ],
                "entries": [
                    "Napa Cabbage",
                    "Chili Pepper",
                    "Korean Side Dish",
                    "Fermentation"
                ]
            },
            {
                "topic": [
                    "Quiche",
                    "French Tart",
                    "Quiches"
                ],
                "entries": [
                    "Egg Custard",
                    "Pastry Shell",
                    "French Savory Pie",
                    "Cheese Filling"
                ]
            },
            {
                "topic": [
                    "Schnitzel",
                    "Breaded Cutlet",
                    "Austrian Schnitzel",
                    "Fried Schnitzel"
                ],
                "entries": [
                    "Breaded and Fried",
                    "Austrian",
                    "Lemon Wedge",
                    "Flat"
                ]
            },
            {
                "topic": [
                    "Bread",
                    "Bread Making",
                    "Bread Baking",
                    "Bakery",
                    "Baker"
                ],
                "entries": [
                    "Yeast",
                    "Dough",
                    "Baking",
                    "Crust"
                ]
            }
        ]
    },
    "things_and_inventions": {
        "topics": [
            {
                "topic": [
                    "Shoe",
                    "Footwear",
                    "Sneaker"
                ],
                "entries": [
                    "Laces",
                    "Sole",
                    "Leather",
                    "Running"
                ]
            },
            {
                "topic": [
                    "Tree",
                    "Oak",
                    "Plant"
                ],
                "entries": [
                    "Leaves",
                    "Trunk",
                    "Branches",
                    "Forest"
                ]
            },
            {
                "topic": [
                    "Chair",
                    "Seat",
                    "Stool"
                ],
                "entries": [
                    "Legs",
                    "Backrest",
                    "Cushion",
                    "Dining"
                ]
            },
            {
                "topic": [
                    "Lamp",
                    "Light Fixture",
                    "Desk Lamp"
                ],
                "entries": [
                    "Shade",
                    "Bulb",
                    "Switch",
                    "Base"
                ]
            },
            {
                "topic": [
                    "Glasses",
                    "Eyeglasses",
                    "Spectacles"
                ],
                "entries": [
                    "Lenses",
                    "Frames",
                    "Vision",
                    "Corrective"
                ]
            },
            {
                "topic": [
                    "Watch",
                    "Wristwatch",
                    "Timepiece"
                ],
                "entries": [
                    "Strap",
                    "Dial",
                    "Quartz",
                    "Analog"
                ]
            },
            {
                "topic": [
                    "Towel",
                    "Bath Towel",
                    "Washcloth"
                ],
                "entries": [
                    "Cotton",
                    "Absorbent",
                    "Bathroom",
                    "Soft"
                ]
            },
            {
                "topic": [
                    "Knife",
                    "Blade",
                    "Cutlery"
                ],
                "entries": [
                    "Sharp",
                    "Handle",
                    "Stainless",
                    "Chopping"
                ]
            },
            {
                "topic": [
                    "Pillow",
                    "Cushion",
                    "Headrest"
                ],
                "entries": [
                    "Cotton",
                    "Fluff",
                    "Sleeping",
                    "Comfort"
                ]
            },
            {
                "topic": [
                    "Jacket",
                    "Coat",
                    "Outerwear"
                ],
                "entries": [
                    "Zipper",
                    "Pocket",
                    "Warm",
                    "Winter"
                ]
            },
            {
                "topic": [
                    "Spoon",
                    "Utensil",
                    "Teaspoon"
                ],
                "entries": [
                    "Stainless",
                    "Dishwasher",
                    "Soup",
                    "Serving"
                ]
            },
            {
                "topic": [
                    "Pants",
                    "Trousers",
                    "Slacks"
                ],
                "entries": [
                    "Belt",
                    "Pockets",
                    "Fabric",
                    "Fit"
                ]
            },
            {
                "topic": [
                    "Mirror",
                    "Looking Glass",
                    "Reflector"
                ],
                "entries": [
                    "Glass",
                    "Frame",
                    "Reflection",
                    "Bathroom"
                ]
            },
            {
                "topic": [
                    "Carpet",
                    "Rug",
                    "Mat"
                ],
                "entries": [
                    "Plush",
                    "Wool",
                    "Patterned",
                    "Floor"
                ]
            },
            {
                "topic": [
                    "Candle",
                    "Wax Light",
                    "Taper"
                ],
                "entries": [
                    "Wick",
                    "Burn",
                    "Scent",
                    "Holder"
                ]
            },
            {
                "topic": [
                    "Soda",
                    "Soft Drink",
                    "Pop"
                ],
                "entries": [
                    "Carbonation",
                    "Fizzy",
                    "Can",
                    "Sugar"
                ]
            },
            {
                "topic": [
                    "Soap",
                    "Cleanser",
                    "Detergent"
                ],
                "entries": [
                    "Lather",
                    "Scent",
                    "Bar",
                    "Hygiene"
                ]
            },
            {
                "topic": [
                    "Toothbrush",
                    "Dental Brush",
                    "Oral Cleansing Tool"
                ],
                "entries": [
                    "Bristles",
                    "Toothpaste",
                    "Handle",
                    "Plaque"
                ]
            },
            {
                "topic": [
                    "Milk",
                    "Dairy Drink",
                    "Cream"
                ],
                "entries": [
                    "Calcium",
                    "Lactose",
                    "Pasteurized",
                    "Bottle"
                ]
            },
            {
                "topic": [
                    "Ring",
                    "Band",
                    "Wedding Ring"
                ],
                "entries": [
                    "Gold",
                    "Diamond",
                    "Engagement",
                    "Finger"
                ]
            },
            {
                "topic": [
                    "Scissors",
                    "Cutting Tool",
                    "Shears"
                ],
                "entries": [
                    "Blades",
                    "Handles",
                    "Sharp",
                    "Crafting"
                ]
            },
            {
                "topic": [
                    "Ball",
                    "Sphere",
                    "Round Object"
                ],
                "entries": [
                    "Bounce",
                    "Sports",
                    "Rubber",
                    "Throw"
                ]
            },
            {
                "topic": [
                    "Bedroom",
                    "Sleeping Chamber",
                    "Dream Room"
                ],
                "entries": [
                    "Bed",
                    "Wardrobe",
                    "Privacy",
                    "Rest"
                ]
            },
            {
                "topic": [
                    "Backpack",
                    "Knapsack",
                    "Rucksack"
                ],
                "entries": [
                    "Zipper",
                    "Straps",
                    "Compartments",
                    "Hiking"
                ]
            },
            {
                "topic": [
                    "Fan",
                    "Cooling Appliance",
                    "Ventilator"
                ],
                "entries": [
                    "Blades",
                    "Rotation",
                    "Breeze",
                    "Electric"
                ]
            },
            {
                "topic": [
                    "Door",
                    "Gate",
                    "Entrance"
                ],
                "entries": [
                    "Hinge",
                    "Handle",
                    "Knock",
                    "Frame"
                ]
            },
            {
                "topic": [
                    "Pumpkin",
                    "Squash",
                    "Gourd"
                ],
                "entries": [
                    "Orange",
                    "Seeds",
                    "Carve",
                    "Pie"
                ]
            },
            {
                "topic": [
                    "Brick",
                    "Block",
                    "Masonry"
                ],
                "entries": [
                    "Clay",
                    "Building",
                    "Wall",
                    "Stack"
                ]
            },
            {
                "topic": [
                    "Cloud",
                    "Sky",
                    "Mist"
                ],
                "entries": [
                    "Fluffy",
                    "Rain",
                    "White",
                    "Drift"
                ]
            },
            {
                "topic": [
                    "Window",
                    "Glass",
                    "Pane"
                ],
                "entries": [
                    "Frame",
                    "View",
                    "Curtain",
                    "Sunlight"
                ]
            },
            {
                "topic": [
                    "Castle",
                    "Fort",
                    "Stronghold"
                ],
                "entries": [
                    "Stone",
                    "Tower",
                    "Moat",
                    "Knight"
                ]
            },
            {
                "topic": [
                    "Oven",
                    "Stove",
                    "Cooker"
                ],
                "entries": [
                    "Heat",
                    "Bake",
                    "Tray",
                    "Temperature"
                ]
            },
            {
                "topic": [
                    "Necklace",
                    "Jewelry",
                    "Pendant"
                ],
                "entries": [
                    "Chain",
                    "Beads",
                    "Clasp",
                    "Wear"
                ]
            },
            {
                "topic": [
                    "Aquarium",
                    "Tank",
                    "Habitat"
                ],
                "entries": [
                    "Fish",
                    "Water",
                    "Plants",
                    "Glass"
                ]
            },
            {
                "topic": [
                    "Train",
                    "Locomotive",
                    "Railway"
                ],
                "entries": [
                    "Tracks",
                    "Engine",
                    "Carriage",
                    "Journey"
                ]
            },
            {
                "topic": [
                    "Lighthouse",
                    "Beacon",
                    "Tower"
                ],
                "entries": [
                    "Light",
                    "Coast",
                    "Guide",
                    "Ocean"
                ]
            },
            {
                "topic": [
                    "Telephone",
                    "Telecom Device",
                    "Landline"
                ],
                "entries": [
                    "Alexander Graham Bell",
                    "Voice Transmission",
                    "Switchboard",
                    "Rotary Dial"
                ]
            },
            {
                "topic": [
                    "Automobile",
                    "Car",
                    "Motor Vehicle"
                ],
                "entries": [
                    "Henry Ford",
                    "Engine",
                    "Wheels",
                    "Steering Wheel"
                ]
            },
            {
                "topic": [
                    "Airplane",
                    "Plane",
                    "Aircraft",
                    "Flying Machine"
                ],
                "entries": [
                    "Wright Brothers",
                    "Aviation",
                    "Wings",
                    "Cockpit"
                ]
            },
            {
                "topic": [
                    "Refrigerator",
                    "Fridge",
                    "Icebox"
                ],
                "entries": [
                    "Cooling System",
                    "Refrigerant",
                    "Compressor",
                    "Shelves"
                ]
            },
            {
                "topic": [
                    "Radio",
                    "Wireless Receiver",
                    "Broadcast Receiver"
                ],
                "entries": [
                    "AM/FM",
                    "Tuning",
                    "Antennas",
                    "Transmitter"
                ]
            },
            {
                "topic": [
                    "Bicycle",
                    "Bike",
                    "Cycle"
                ],
                "entries": [
                    "Pedals",
                    "Handlebars",
                    "Two Wheels",
                    "Chain"
                ]
            },
            {
                "topic": [
                    "Television",
                    "TV",
                    "Telly"
                ],
                "entries": [
                    "Channels",
                    "Remote Control",
                    "Screen",
                    "Broadcast"
                ]
            },
            {
                "topic": [
                    "Computer",
                    "PC",
                    "Personal Computer"
                ],
                "entries": [
                    "CPU",
                    "Keyboard",
                    "Monitor",
                    "Software"
                ]
            },
            {
                "topic": [
                    "Washing Machine",
                    "Laundry Washer",
                    "Laundy Machine",
                    "Clothes Washer"
                ],
                "entries": [
                    "Drum",
                    "Agitator",
                    "Spin Cycle",
                    "Detergent"
                ]
            },
            {
                "topic": [
                    "Microwave Oven",
                    "Microwave",
                    "Rapid Cooker"
                ],
                "entries": [
                    "Electromagnetic Waves",
                    "Turntable",
                    "Heating",
                    "Timer"
                ]
            },
            {
                "topic": [
                    "Vacuum Cleaner",
                    "Hoover",
                    "Suction Cleaner"
                ],
                "entries": [
                    "Dust Bag",
                    "Carpet",
                    "Suction Power",
                    "Nozzle"
                ]
            },
            {
                "topic": [
                    "Clock",
                    "Timepiece",
                    "Chronometer"
                ],
                "entries": [
                    "Hour Hand",
                    "Minutes",
                    "Quartz",
                    "Ticking"
                ]
            },
            {
                "topic": [
                    "Toaster",
                    "Bread Toaster",
                    "Pop-up Toaster"
                ],
                "entries": [
                    "Slices",
                    "Browning",
                    "Heating Elements",
                    "Slots"
                ]
            },
            {
                "topic": [
                    "Battery",
                    "Energy Cell",
                    "Power Cell"
                ],
                "entries": [
                    "Chemical Reaction",
                    "Electrolyte",
                    "Voltage",
                    "Charge"
                ]
            },
            {
                "topic": [
                    "Smartphone",
                    "Mobile Phone",
                    "Cellphone"
                ],
                "entries": [
                    "Touchscreen",
                    "Apps",
                    "Camera",
                    "Calls"
                ]
            },
            {
                "topic": [
                    "Submarine",
                    "Submersible",
                    "Underwater Vessel"
                ],
                "entries": [
                    "Torpedoes",
                    "Periscope",
                    "Hull",
                    "Navigation"
                ]
            },
            {
                "topic": [
                    "Hair Dryer",
                    "Hair Drier",
                    "Blow Dryer"
                ],
                "entries": [
                    "Hot Air",
                    "Fan",
                    "Hair Styling",
                    "Electric"
                ]
            },
            {
                "topic": [
                    "Helicopter",
                    "Chopper",
                    "Rotorcraft"
                ],
                "entries": [
                    "Rotor Blades",
                    "Vertical Lift",
                    "Pilot",
                    "Skids"
                ]
            },
            {
                "topic": [
                    "Compass",
                    "Direction Finder",
                    "Navigational Tool"
                ],
                "entries": [
                    "North",
                    "Magnetic Field",
                    "Needle",
                    "Degrees"
                ]
            },
            {
                "topic": [
                    "Flashlight",
                    "Torch",
                    "Portable Light"
                ],
                "entries": [
                    "Batteries",
                    "Beam",
                    "LED",
                    "Bulb"
                ]
            },
            {
                "topic": [
                    "Thermometer",
                    "Temperature Gauge",
                    "Heat Meter"
                ],
                "entries": [
                    "Mercury",
                    "Fahrenheit",
                    "Sensor",
                    "Glass Tube"
                ]
            },
            {
                "topic": [
                    "Air Conditioner",
                    "AC",
                    "Cooling Unit"
                ],
                "entries": [
                    "Thermostat",
                    "Compressor",
                    "Cool Air",
                    "Filters"
                ]
            },
            {
                "topic": [
                    "Paperclip",
                    "Clasp",
                    "Fastener"
                ],
                "entries": [
                    "Metal Wire",
                    "Documents",
                    "Binding",
                    "Office"
                ]
            },
            {
                "topic": [
                    "Pencil",
                    "Graphite Writing Tool",
                    "Lead Stick"
                ],
                "entries": [
                    "Graphite Core",
                    "Eraser",
                    "Sharpening",
                    "Wooden Body"
                ]
            },
            {
                "topic": [
                    "Umbrella",
                    "Parasol",
                    "Rain Cover"
                ],
                "entries": [
                    "Canopy",
                    "Ribs",
                    "Handle",
                    "Rain"
                ]
            },
            {
                "topic": [
                    "Matches",
                    "Matchsticks",
                    "Fire Starters"
                ],
                "entries": [
                    "Red Phosphorus",
                    "Wood Stick",
                    "Light",
                    "Box"
                ]
            },
            {
                "topic": [
                    "Lego"
                ],
                "entries": [
                    "Plastic bricks",
                    "Toy",
                    "Danish origins",
                    "Minifigures"
                ]
            },
            {
                "topic": [
                    "Candle"
                ],
                "entries": [
                    "Light",
                    "Wax",
                    "Flame",
                    "Ambiance"
                ]
            }
        ]
    }
}
